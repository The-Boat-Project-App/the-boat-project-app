{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"children\",\"isDisabled\",\"disabled\",\"isHovered\",\"isPressed\",\"isFocused\",\"isFocusVisible\"],_excluded2=[\"onPressIn\",\"onPressOut\",\"onHoverIn\",\"onHoverOut\",\"onFocus\",\"onBlur\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import RNPressable from\"react-native-web/dist/exports/Pressable\";import{composeEventHandlers}from\"../../../utils\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{makeStyledComponent}from\"../../../utils/styled\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useFocusRing}from'@react-native-aria/focus';export var useHover=function useHover(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isHovered=_React$useState2[0],setHovered=_React$useState2[1];return{hoverProps:{onHoverIn:function onHoverIn(){return setHovered(true);},onHoverOut:function onHoverOut(){return setHovered(false);}},isHovered:isHovered};};export var useFocus=function useFocus(){var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isFocused=_React$useState4[0],setFocused=_React$useState4[1];return{focusProps:{onFocus:function onFocus(){return setFocused(true);},onBlur:function onBlur(){return setFocused(false);}},isFocused:isFocused};};export var useIsPressed=function useIsPressed(){var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isPressed=_React$useState6[0],setIsPressed=_React$useState6[1];return{pressableProps:{onPressIn:function onPressIn(){return setIsPressed(true);},onPressOut:function onPressOut(){return setIsPressed(false);}},isPressed:isPressed};};var StyledPressable=makeStyledComponent(RNPressable);var Pressable=function Pressable(_ref,ref){var children=_ref.children,isDisabled=_ref.isDisabled,disabled=_ref.disabled,isHoveredProp=_ref.isHovered,isPressedProp=_ref.isPressed,isFocusedProp=_ref.isFocused,isFocusVisibleProp=_ref.isFocusVisible,props=_objectWithoutProperties(_ref,_excluded);var _useHover=useHover(),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _useIsPressed=useIsPressed(),pressableProps=_useIsPressed.pressableProps,isPressed=_useIsPressed.isPressed;var _useFocus=useFocus(),focusProps=_useFocus.focusProps,isFocused=_useFocus.isFocused;var _useFocusRing=useFocusRing(),isFocusVisible=_useFocusRing.isFocusVisible,focusRingProps=_useFocusRing.focusProps;var _usePropsResolution=usePropsResolution('Pressable',props,{isPressed:isPressedProp||isPressed,isFocused:isFocusedProp||isFocused,isHovered:isHoveredProp||isHovered,isFocusVisible:isFocusVisibleProp||isFocusVisible,isDisabled:disabled||isDisabled}),onPressIn=_usePropsResolution.onPressIn,onPressOut=_usePropsResolution.onPressOut,onHoverIn=_usePropsResolution.onHoverIn,onHoverOut=_usePropsResolution.onHoverOut,onFocus=_usePropsResolution.onFocus,onBlur=_usePropsResolution.onBlur,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(StyledPressable,_extends({ref:ref,onPressIn:composeEventHandlers(onPressIn,pressableProps.onPressIn),onPressOut:composeEventHandlers(onPressOut,pressableProps.onPressOut),onHoverIn:composeEventHandlers(onHoverIn,hoverProps.onHoverIn),onHoverOut:composeEventHandlers(onHoverOut,hoverProps.onHoverOut),onFocus:composeEventHandlers(composeEventHandlers(onFocus,focusProps.onFocus),focusRingProps.onFocus),onBlur:composeEventHandlers(composeEventHandlers(onBlur,focusProps.onBlur),focusRingProps.onBlur),disabled:disabled||isDisabled},resolvedProps),typeof children!=='function'?children:children({isPressed:isPressed,isHovered:isHovered,isFocused:isFocused}));};export default memo(forwardRef(Pressable));","map":{"version":3,"mappings":"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","names":["React","forwardRef","memo","composeEventHandlers","useHasResponsiveProps","makeStyledComponent","usePropsResolution","useFocusRing","useHover","useState","isHovered","setHovered","hoverProps","onHoverIn","onHoverOut","useFocus","isFocused","setFocused","focusProps","onFocus","onBlur","useIsPressed","isPressed","setIsPressed","pressableProps","onPressIn","onPressOut","StyledPressable","RNPressable","Pressable","ref","children","isDisabled","disabled","isHoveredProp","isPressedProp","isFocusedProp","isFocusVisibleProp","isFocusVisible","props","focusRingProps","resolvedProps"],"sources":["Pressable.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Pressable as RNPressable } from 'react-native';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IPressableProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nexport const useHover = () => {\n  const [isHovered, setHovered] = React.useState(false);\n  return {\n    hoverProps: {\n      onHoverIn: () => setHovered(true),\n      onHoverOut: () => setHovered(false),\n    },\n    isHovered,\n  };\n};\n\nexport const useFocus = () => {\n  const [isFocused, setFocused] = React.useState(false);\n  return {\n    focusProps: {\n      onFocus: () => setFocused(true),\n      onBlur: () => setFocused(false),\n    },\n    isFocused,\n  };\n};\n\nexport const useIsPressed = () => {\n  const [isPressed, setIsPressed] = React.useState(false);\n  return {\n    pressableProps: {\n      onPressIn: () => setIsPressed(true),\n      onPressOut: () => setIsPressed(false),\n    },\n    isPressed,\n  };\n};\n\nconst StyledPressable = makeStyledComponent(RNPressable);\n\nconst Pressable = (\n  {\n    children,\n    isDisabled,\n    disabled,\n    isHovered: isHoveredProp,\n    isPressed: isPressedProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    ...props\n  }: IPressableProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('Pressable', props, {\n    isPressed: isPressedProp || isPressed,\n    isFocused: isFocusedProp || isFocused,\n    isHovered: isHoveredProp || isHovered,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    isDisabled: disabled || isDisabled,\n  });\n\n  // TODO: Replace Render props with Context Hook\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  // TODO: Replace Render props with Context Hook\n  return (\n    <StyledPressable\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      disabled={disabled || isDisabled}\n      {...resolvedProps}\n    >\n      {typeof children !== 'function'\n        ? children\n        : children({\n            isPressed,\n            isHovered,\n            isFocused,\n          })}\n    </StyledPressable>\n  );\n};\n\nexport default memo(forwardRef(Pressable));\n"]},"metadata":{},"sourceType":"module"}