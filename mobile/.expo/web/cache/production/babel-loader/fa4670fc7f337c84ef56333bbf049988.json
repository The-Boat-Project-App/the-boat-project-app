{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useMenuTriggerState}from\"@react-stately/menu\";import{useEffect,useMemo,useRef,useState}from\"react\";import{useControlledState}from\"@react-stately/utils\";import{ListCollection,useSingleSelectListState}from\"@react-stately/list\";import _babelRuntimeHelpersEsmExtends from\"@babel/runtime/helpers/esm/extends\";export function useComboBoxState(props){var _props$defaultInputVa,_props$items,_ref,_props$selectedKey;var defaultFilter=props.defaultFilter,_props$menuTrigger=props.menuTrigger,menuTrigger=_props$menuTrigger===void 0?'input':_props$menuTrigger,_props$allowsEmptyCol=props.allowsEmptyCollection,allowsEmptyCollection=_props$allowsEmptyCol===void 0?false:_props$allowsEmptyCol,allowsCustomValue=props.allowsCustomValue,_props$shouldCloseOnB=props.shouldCloseOnBlur,shouldCloseOnBlur=_props$shouldCloseOnB===void 0?true:_props$shouldCloseOnB;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFocused=_useState2[0],setFocusedState=_useState2[1];var _useControlledState=useControlledState(props.inputValue,(_props$defaultInputVa=props.defaultInputValue)!=null?_props$defaultInputVa:'',props.onInputChange),_useControlledState2=_slicedToArray(_useControlledState,2),inputValue=_useControlledState2[0],setInputValue=_useControlledState2[1];var onSelectionChange=function onSelectionChange(key){if(props.onSelectionChange){props.onSelectionChange(key);}if(props.isOpen===undefined||props.selectedKey===undefined){if(key===selectedKey){resetInputValue();triggerState.close();}}};var _useSingleSelectListS=useSingleSelectListState(_babelRuntimeHelpersEsmExtends({},props,{onSelectionChange:onSelectionChange,items:(_props$items=props.items)!=null?_props$items:props.defaultItems})),collection=_useSingleSelectListS.collection,selectionManager=_useSingleSelectListS.selectionManager,selectedKey=_useSingleSelectListS.selectedKey,setSelectedKey=_useSingleSelectListS.setSelectedKey,selectedItem=_useSingleSelectListS.selectedItem,disabledKeys=_useSingleSelectListS.disabledKeys;var filteredCollection=useMemo(function(){return props.items!=null||!defaultFilter?collection:$b1b6afed698df4428b7ed319af4b90$var$filterCollection(collection,inputValue,defaultFilter);},[collection,inputValue,defaultFilter,props.items]);var triggerState=useMenuTriggerState(props);var open=function open(focusStrategy){if(allowsEmptyCollection||filteredCollection.size>0){triggerState.open(focusStrategy);}};var toggle=function toggle(focusStrategy){if(!(allowsEmptyCollection||filteredCollection.size>0)&&!triggerState.isOpen){return;}triggerState.toggle(focusStrategy);};var lastValue=useRef(inputValue);var resetInputValue=function resetInputValue(){var _collection$getItem$t,_collection$getItem;var itemText=(_collection$getItem$t=(_collection$getItem=collection.getItem(selectedKey))==null?void 0:_collection$getItem.textValue)!=null?_collection$getItem$t:'';lastValue.current=itemText;setInputValue(itemText);};var isInitialRender=useRef(true);var lastSelectedKey=useRef((_ref=(_props$selectedKey=props.selectedKey)!=null?_props$selectedKey:props.defaultSelectedKey)!=null?_ref:null);useEffect(function(){if(isFocused&&filteredCollection.size>0&&!triggerState.isOpen&&inputValue!==lastValue.current&&menuTrigger!=='manual'&&(props.isOpen===undefined||props.inputValue===undefined)){open();}if(!allowsEmptyCollection&&triggerState.isOpen&&filteredCollection.size===0&&(props.isOpen===undefined||props.items===undefined)){triggerState.close();}if(selectedKey!=null&&selectedKey!==lastSelectedKey.current&&(props.isOpen===undefined||props.selectedKey===undefined)){triggerState.close();}if(inputValue!==lastValue.current){selectionManager.setFocusedKey(null);if(inputValue===''&&(props.inputValue===undefined||props.selectedKey===undefined)){setSelectedKey(null);}}if(isInitialRender.current&&props.inputValue===undefined&&props.defaultInputValue===undefined){resetInputValue();}if(selectedKey!==lastSelectedKey.current&&(props.inputValue===undefined||props.selectedKey===undefined)){resetInputValue();}else{lastValue.current=inputValue;}isInitialRender.current=false;lastSelectedKey.current=selectedKey;});useEffect(function(){if(!triggerState.isOpen){selectionManager.setFocusedKey(null);}},[triggerState.isOpen,selectionManager]);var commitCustomValue=function commitCustomValue(){var shouldClose=false;lastSelectedKey.current=null;setSelectedKey(null);if(selectedKey===null&&props.onSelectionChange){props.onSelectionChange(null);}shouldClose=props.isOpen==null||props.selectedKey===undefined;if(shouldClose){triggerState.close();}};var commit=function commit(){if(triggerState.isOpen&&selectionManager.focusedKey!=null){if(selectedKey===selectionManager.focusedKey){resetInputValue();triggerState.close();}else{setSelectedKey(selectionManager.focusedKey);}}else if(allowsCustomValue){commitCustomValue();}};var setFocused=function setFocused(isFocused){if(isFocused){if(menuTrigger==='focus'){open();}}else if(shouldCloseOnBlur){var _collection$getItem$t2,_collection$getItem2;var itemText=(_collection$getItem$t2=(_collection$getItem2=collection.getItem(selectedKey))==null?void 0:_collection$getItem2.textValue)!=null?_collection$getItem$t2:'';if(allowsCustomValue&&inputValue!==itemText){commitCustomValue();}else{resetInputValue();triggerState.close();}}setFocusedState(isFocused);};return _babelRuntimeHelpersEsmExtends({},triggerState,{toggle:toggle,open:open,selectionManager:selectionManager,selectedKey:selectedKey,setSelectedKey:setSelectedKey,disabledKeys:disabledKeys,isFocused:isFocused,setFocused:setFocused,selectedItem:selectedItem,collection:filteredCollection,inputValue:inputValue,setInputValue:setInputValue,commit:commit});}function $b1b6afed698df4428b7ed319af4b90$var$filterCollection(collection,inputValue,filter){return new ListCollection($b1b6afed698df4428b7ed319af4b90$var$filterNodes(collection,inputValue,filter));}function $b1b6afed698df4428b7ed319af4b90$var$filterNodes(nodes,inputValue,filter){var filteredNode=[];for(var node of nodes){if(node.type==='section'&&node.hasChildNodes){var filtered=$b1b6afed698df4428b7ed319af4b90$var$filterNodes(node.childNodes,inputValue,filter);if(_toConsumableArray(filtered).length>0){filteredNode.push(_babelRuntimeHelpersEsmExtends({},node,{childNodes:filtered}));}}else if(node.type!=='section'&&filter(node.textValue,inputValue)){filteredNode.push(node);}}return filteredNode;}","map":{"version":3,"mappings":"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","names":["useComboBoxState","props","defaultFilter","menuTrigger","allowsEmptyCollection","allowsCustomValue","shouldCloseOnBlur","useState","isFocused","setFocusedState","useControlledState","inputValue","defaultInputValue","onInputChange","setInputValue","onSelectionChange","key","isOpen","undefined","selectedKey","resetInputValue","triggerState","close","useSingleSelectListState","items","defaultItems","collection","selectionManager","setSelectedKey","selectedItem","disabledKeys","filteredCollection","useMemo","filterCollection","useMenuTriggerState","open","focusStrategy","size","toggle","lastValue","useRef","itemText","getItem","_collection$getItem","textValue","current","isInitialRender","lastSelectedKey","defaultSelectedKey","useEffect","setFocusedKey","commitCustomValue","shouldClose","commit","focusedKey","setFocused","_collection$getItem2","filter","ListCollection","filterNodes","nodes","filteredNode","node","type","hasChildNodes","filtered","childNodes","length","push"],"sources":["./packages/@react-stately/combobox/src/useComboBoxState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, FocusStrategy, Node} from '@react-types/shared';\nimport {ComboBoxProps} from '@react-types/combobox';\nimport {ListCollection, useSingleSelectListState} from '@react-stately/list';\nimport {SelectState} from '@react-stately/select';\nimport {useControlledState} from '@react-stately/utils';\nimport {useEffect, useMemo, useRef, useState} from 'react';\nimport {useMenuTriggerState} from '@react-stately/menu';\n\nexport interface ComboBoxState<T> extends SelectState<T> {\n  /** The current value of the combo box input. */\n  inputValue: string,\n  /** Sets the value of the combo box input. */\n  setInputValue(value: string): void,\n  /** Selects the currently focused item and updates the input value. */\n  commit(): void\n}\n\ntype FilterFn = (textValue: string, inputValue: string) => boolean;\ninterface ComboBoxStateProps<T> extends ComboBoxProps<T> {\n  /** The filter function used to determine if a option should be included in the combo box list. */\n  defaultFilter?: FilterFn,\n  /** Whether the combo box allows the menu to be open when the collection is empty. */\n  allowsEmptyCollection?: boolean,\n  /** Whether the combo box menu should close on blur. */\n  shouldCloseOnBlur?: boolean\n}\n\n/**\n * Provides state management for a combo box component. Handles building a collection\n * of items from props and manages the option selection state of the combo box. In addition, it tracks the input value,\n * focus state, and other properties of the combo box.\n */\nexport function useComboBoxState<T extends object>(props: ComboBoxStateProps<T>): ComboBoxState<T> {\n  let {\n    defaultFilter,\n    menuTrigger = 'input',\n    allowsEmptyCollection = false,\n    allowsCustomValue,\n    shouldCloseOnBlur = true\n  } = props;\n\n  let [isFocused, setFocusedState] = useState(false);\n  let [inputValue, setInputValue] = useControlledState(\n    props.inputValue,\n    props.defaultInputValue ?? '',\n    props.onInputChange\n  );\n\n  let onSelectionChange = (key) => {\n    if (props.onSelectionChange) {\n      props.onSelectionChange(key);\n    }\n\n    // If open state or selectedKey is uncontrolled and key is the same, reset the inputValue and close the menu\n    // (scenario: user clicks on already selected option)\n    if (props.isOpen === undefined || props.selectedKey === undefined) {\n      if (key === selectedKey) {\n        resetInputValue();\n        triggerState.close();\n      }\n    }\n  };\n\n  let {collection, selectionManager, selectedKey, setSelectedKey, selectedItem, disabledKeys} = useSingleSelectListState({\n    ...props,\n    onSelectionChange,\n    items: props.items ?? props.defaultItems\n  });\n\n  let filteredCollection = useMemo(() => (\n    // No default filter if items are controlled.\n    props.items != null || !defaultFilter\n      ? collection\n      : filterCollection(collection, inputValue, defaultFilter)\n  ), [collection, inputValue, defaultFilter, props.items]);\n\n  let triggerState = useMenuTriggerState(props);\n  let open = (focusStrategy?: FocusStrategy) => {\n    // Prevent open operations from triggering if there is nothing to display\n    if (allowsEmptyCollection || filteredCollection.size > 0) {\n      triggerState.open(focusStrategy);\n    }\n  };\n\n  let toggle = (focusStrategy?: FocusStrategy) => {\n    // If the menu is closed and there is nothing to display, early return so toggle isn't called to prevent extraneous onOpenChange\n    if (!(allowsEmptyCollection || filteredCollection.size > 0) && !triggerState.isOpen) {\n      return;\n    }\n\n    triggerState.toggle(focusStrategy);\n  };\n\n  let lastValue = useRef(inputValue);\n  let resetInputValue = () => {\n    let itemText = collection.getItem(selectedKey)?.textValue ?? '';\n    lastValue.current = itemText;\n    setInputValue(itemText);\n  };\n\n  let isInitialRender = useRef(true);\n  let lastSelectedKey = useRef(props.selectedKey ?? props.defaultSelectedKey ?? null);\n  useEffect(() => {\n    // If open state or inputValue is uncontrolled, open and close automatically when the input value changes,\n    // the input is if focused, and there are items in the collection.\n    if (\n      isFocused &&\n      filteredCollection.size > 0 &&\n      !triggerState.isOpen &&\n      inputValue !== lastValue.current &&\n      menuTrigger !== 'manual' &&\n      (props.isOpen === undefined || props.inputValue === undefined)\n    ) {\n      open();\n    }\n\n    // Close the menu if the collection is empty and either open state or items are uncontrolled.\n    if (\n      !allowsEmptyCollection &&\n      triggerState.isOpen &&\n      filteredCollection.size === 0 &&\n      (props.isOpen === undefined || props.items === undefined)\n    ) {\n      triggerState.close();\n    }\n\n    // Close when an item is selected, if open state or selectedKey is uncontrolled.\n    if (\n      selectedKey != null &&\n      selectedKey !== lastSelectedKey.current &&\n      (props.isOpen === undefined || props.selectedKey === undefined)\n    ) {\n      triggerState.close();\n    }\n\n    // Clear focused key when input value changes.\n    if (inputValue !== lastValue.current) {\n      selectionManager.setFocusedKey(null);\n\n      // Set selectedKey to null when the user clears the input.\n      // If controlled, this is the application developer's responsibility.\n      if (inputValue === '' && (props.inputValue === undefined || props.selectedKey === undefined)) {\n        setSelectedKey(null);\n      }\n    }\n\n    // If it is the intial render and inputValue isn't controlled nor has an intial value, set input to match current selected key if any\n    if (isInitialRender.current && (props.inputValue === undefined && props.defaultInputValue === undefined)) {\n      resetInputValue();\n    }\n\n    // If the selectedKey changed, update the input value.\n    // Do nothing if both inputValue and selectedKey are controlled.\n    // In this case, it's the user's responsibility to update inputValue in onSelectionChange. In addition, we preserve the defaultInputValue\n    // on initial render, even if it doesn't match the selected item's text.\n    if (\n      selectedKey !== lastSelectedKey.current &&\n      (props.inputValue === undefined || props.selectedKey === undefined)\n    ) {\n      resetInputValue();\n    } else {\n      lastValue.current = inputValue;\n    }\n\n    isInitialRender.current = false;\n    lastSelectedKey.current = selectedKey;\n  });\n\n  useEffect(() => {\n    // Reset focused key when the menu closes\n    if (!triggerState.isOpen) {\n      selectionManager.setFocusedKey(null);\n    }\n  }, [triggerState.isOpen, selectionManager]);\n\n  let commitCustomValue = () => {\n    let shouldClose = false;\n    lastSelectedKey.current = null;\n    setSelectedKey(null);\n\n    // If previous key was already null, need to manually call onSelectionChange since it won't be triggered by a setSelectedKey call\n    // This allows the application to control whether or not to close the menu on custom value commit\n    if (selectedKey === null && props.onSelectionChange) {\n      props.onSelectionChange(null);\n    }\n\n    // Should close menu ourselves if component open state or selected key is uncontrolled and therefore won't be closed by a user defined event handler\n    shouldClose = props.isOpen == null || props.selectedKey === undefined;\n\n\n    // Close if no other event will be fired. Otherwise, allow the\n    // application to control this based on that event.\n    if (shouldClose) {\n      triggerState.close();\n    }\n  };\n\n  let commit = () => {\n    if (triggerState.isOpen && selectionManager.focusedKey != null) {\n      // Reset inputValue and close menu here if the selected key is already the focused key. Otherwise\n      // fire onSelectionChange to allow the application to control the closing.\n      if (selectedKey === selectionManager.focusedKey) {\n        resetInputValue();\n        triggerState.close();\n      } else {\n        setSelectedKey(selectionManager.focusedKey);\n      }\n    } else if (allowsCustomValue) {\n      commitCustomValue();\n    }\n  };\n\n  let setFocused = (isFocused: boolean) => {\n    if (isFocused) {\n      if (menuTrigger === 'focus') {\n        open();\n      }\n    } else if (shouldCloseOnBlur) {\n      let itemText = collection.getItem(selectedKey)?.textValue ?? '';\n      if (allowsCustomValue && inputValue !== itemText) {\n        commitCustomValue();\n      } else {\n        resetInputValue();\n        // Close menu if blurring away from the combobox\n        // Specifically handles case where user clicks away from the field\n        triggerState.close();\n      }\n    }\n\n    setFocusedState(isFocused);\n  };\n\n  return {\n    ...triggerState,\n    toggle,\n    open,\n    selectionManager,\n    selectedKey,\n    setSelectedKey,\n    disabledKeys,\n    isFocused,\n    setFocused,\n    selectedItem,\n    collection: filteredCollection,\n    inputValue,\n    setInputValue,\n    commit\n  };\n}\n\nfunction filterCollection<T extends object>(collection: Collection<Node<T>>, inputValue: string, filter: FilterFn): Collection<Node<T>> {\n  return new ListCollection(filterNodes(collection, inputValue, filter));\n}\n\nfunction filterNodes<T>(nodes: Iterable<Node<T>>, inputValue: string, filter: FilterFn): Iterable<Node<T>> {\n  let filteredNode = [];\n  for (let node of nodes) {\n    if (node.type === 'section' && node.hasChildNodes) {\n      let filtered = filterNodes(node.childNodes, inputValue, filter);\n      if ([...filtered].length > 0) {\n        filteredNode.push({...node, childNodes: filtered});\n      }\n    } else if (node.type !== 'section' && filter(node.textValue, inputValue)) {\n      filteredNode.push(node);\n    }\n  }\n  return filteredNode;\n}\n"]},"metadata":{},"sourceType":"module"}