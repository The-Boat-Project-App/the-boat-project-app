{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{PermissionStatus,createPermissionHook,UnavailabilityError,CodedError}from'expo-modules-core';import ExponentImagePicker from\"./ExponentImagePicker\";import{MediaTypeOptions,VideoExportPreset,UIImagePickerControllerQualityType,UIImagePickerPresentationStyle}from\"./ImagePicker.types\";function validateOptions(options){var aspect=options.aspect,quality=options.quality,videoMaxDuration=options.videoMaxDuration;if(aspect!=null){var _aspect=_slicedToArray(aspect,2),x=_aspect[0],y=_aspect[1];if(x<=0||y<=0){throw new CodedError('ERR_INVALID_ARGUMENT',\"Invalid aspect ratio values \"+x+\":\"+y+\". Provide positive numbers.\");}}if(quality&&(quality<0||quality>1)){throw new CodedError('ERR_INVALID_ARGUMENT',\"Invalid 'quality' value \"+quality+\". Provide a value between 0 and 1.\");}if(videoMaxDuration&&videoMaxDuration<0){throw new CodedError('ERR_INVALID_ARGUMENT',\"Invalid 'videoMaxDuration' value \"+videoMaxDuration+\". Provide a non-negative number.\");}return options;}export function getCameraPermissionsAsync(){return _getCameraPermissionsAsync.apply(this,arguments);}function _getCameraPermissionsAsync(){_getCameraPermissionsAsync=_asyncToGenerator(function*(){return ExponentImagePicker.getCameraPermissionsAsync();});return _getCameraPermissionsAsync.apply(this,arguments);}export function getCameraRollPermissionsAsync(){return _getCameraRollPermissionsAsync.apply(this,arguments);}function _getCameraRollPermissionsAsync(){_getCameraRollPermissionsAsync=_asyncToGenerator(function*(){console.warn('ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()');return getMediaLibraryPermissionsAsync();});return _getCameraRollPermissionsAsync.apply(this,arguments);}export function getMediaLibraryPermissionsAsync(){return _getMediaLibraryPermissionsAsync.apply(this,arguments);}function _getMediaLibraryPermissionsAsync(){_getMediaLibraryPermissionsAsync=_asyncToGenerator(function*(){var writeOnly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);});return _getMediaLibraryPermissionsAsync.apply(this,arguments);}export function requestCameraPermissionsAsync(){return _requestCameraPermissionsAsync.apply(this,arguments);}function _requestCameraPermissionsAsync(){_requestCameraPermissionsAsync=_asyncToGenerator(function*(){return ExponentImagePicker.requestCameraPermissionsAsync();});return _requestCameraPermissionsAsync.apply(this,arguments);}export function requestCameraRollPermissionsAsync(){return _requestCameraRollPermissionsAsync.apply(this,arguments);}function _requestCameraRollPermissionsAsync(){_requestCameraRollPermissionsAsync=_asyncToGenerator(function*(){console.warn('ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()');return requestMediaLibraryPermissionsAsync();});return _requestCameraRollPermissionsAsync.apply(this,arguments);}export function requestMediaLibraryPermissionsAsync(){return _requestMediaLibraryPermissionsAsync.apply(this,arguments);}function _requestMediaLibraryPermissionsAsync(){_requestMediaLibraryPermissionsAsync=_asyncToGenerator(function*(){var writeOnly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var imagePickerMethod=ExponentImagePicker.requestMediaLibraryPermissionsAsync;return imagePickerMethod(writeOnly);});return _requestMediaLibraryPermissionsAsync.apply(this,arguments);}export var useMediaLibraryPermissions=createPermissionHook({getMethod:function getMethod(options){return getMediaLibraryPermissionsAsync(options==null?void 0:options.writeOnly);},requestMethod:function requestMethod(options){return requestMediaLibraryPermissionsAsync(options==null?void 0:options.writeOnly);}});export var useCameraPermissions=createPermissionHook({getMethod:getCameraPermissionsAsync,requestMethod:requestCameraPermissionsAsync});export function getPendingResultAsync(){return _getPendingResultAsync.apply(this,arguments);}function _getPendingResultAsync(){_getPendingResultAsync=_asyncToGenerator(function*(){if(ExponentImagePicker.getPendingResultAsync){return ExponentImagePicker.getPendingResultAsync();}return[];});return _getPendingResultAsync.apply(this,arguments);}export function launchCameraAsync(){return _launchCameraAsync.apply(this,arguments);}function _launchCameraAsync(){_launchCameraAsync=_asyncToGenerator(function*(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(!ExponentImagePicker.launchCameraAsync){throw new UnavailabilityError('ImagePicker','launchCameraAsync');}return yield ExponentImagePicker.launchCameraAsync(validateOptions(options));});return _launchCameraAsync.apply(this,arguments);}export function launchImageLibraryAsync(_x){return _launchImageLibraryAsync.apply(this,arguments);}function _launchImageLibraryAsync(){_launchImageLibraryAsync=_asyncToGenerator(function*(options){if(!ExponentImagePicker.launchImageLibraryAsync){throw new UnavailabilityError('ImagePicker','launchImageLibraryAsync');}if(options!=null&&options.allowsEditing&&options.allowsMultipleSelection){console.warn('[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.'+\"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \"+'to fix this warning.');}return yield ExponentImagePicker.launchImageLibraryAsync(options!=null?options:{});});return _launchImageLibraryAsync.apply(this,arguments);}export{MediaTypeOptions,VideoExportPreset,PermissionStatus,UIImagePickerControllerQualityType,UIImagePickerPresentationStyle};","map":{"version":3,"mappings":"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","names":["PermissionStatus","createPermissionHook","UnavailabilityError","CodedError","ExponentImagePicker","MediaTypeOptions","VideoExportPreset","UIImagePickerControllerQualityType","UIImagePickerPresentationStyle","validateOptions","options","aspect","quality","videoMaxDuration","x","y","getCameraPermissionsAsync","getCameraRollPermissionsAsync","console","warn","getMediaLibraryPermissionsAsync","writeOnly","requestCameraPermissionsAsync","requestCameraRollPermissionsAsync","requestMediaLibraryPermissionsAsync","imagePickerMethod","useMediaLibraryPermissions","getMethod","requestMethod","useCameraPermissions","getPendingResultAsync","launchCameraAsync","launchImageLibraryAsync","allowsEditing","allowsMultipleSelection"],"sourceRoot":"","sources":["../src/ImagePicker.ts"],"sourcesContent":["import {\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  createPermissionHook,\n  UnavailabilityError,\n  CodedError,\n} from 'expo-modules-core';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  MediaTypeOptions,\n  ImagePickerOptions,\n  VideoExportPreset,\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `getMediaLibraryPermissionsAsync()` instead.\n */\nexport async function getCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()'\n  );\n  return getMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `requestMediaLibraryPermissionsAsync()` instead.\n */\nexport async function requestCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()'\n  );\n  return requestMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook<\n  MediaLibraryPermissionResponse,\n  { writeOnly?: boolean }\n>({\n  // TODO(cedric): permission requesters should have an options param or a different requester\n  getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync,\n});\n\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will block\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n}\n\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n * **Animated GIFs support** If the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is set to `undefined` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG, on iOS — GIF).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchImageLibraryAsync<T extends ImagePickerOptions>(\n  options?: T\n): Promise<ExpandImagePickerResult<T>> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  if (options?.allowsEditing && options.allowsMultipleSelection) {\n    console.warn(\n      '[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' +\n        \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" +\n        'to fix this warning.'\n    );\n  }\n  return await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n}\n\nexport {\n  MediaTypeOptions,\n  ImagePickerOptions,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  VideoExportPreset,\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  ExpandImagePickerResult,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n};\n"]},"metadata":{},"sourceType":"module"}