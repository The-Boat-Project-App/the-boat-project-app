{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"isHovered\",\"isFocused\",\"isFocusVisible\",\"variant\"],_excluded2=[\"onValueChange\",\"selectedValue\",\"children\",\"dropdownIcon\",\"dropdownCloseIcon\",\"dropdownOpenIcon\",\"placeholder\",\"accessibilityLabel\",\"defaultValue\",\"_item\",\"_selectedItem\",\"onOpen\",\"onClose\",\"optimized\",\"customDropdownIconProps\",\"_actionSheet\",\"_actionSheetContent\",\"_actionSheetBody\",\"_webSelect\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import{Actionsheet}from\"../../composites/Actionsheet\";import Box from\"../Box\";import{Input}from\"../Input\";import{useFocusRing}from'@react-native-aria/focus';import{useControllableState}from\"../../../hooks\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHover}from'@react-native-aria/interactions';import{mergeRefs}from\"../../../utils\";import{useFormControl}from\"../../composites/FormControl\";import{ChevronDownIcon}from\"../Icon/Icons\";import{ScrollView}from\"../../basic/ScrollView\";import{extractInObject,stylingProps}from\"../../../theme/tools/utils\";import{FlatList}from\"../../basic/FlatList\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{Pressable}from\"../Pressable\";export var SelectContext=React.createContext({onValueChange:function onValueChange(){},selectedValue:null,_selectedItem:{},_item:{}});var Select=function Select(_ref2,ref){var isHoveredProp=_ref2.isHovered,isFocusedProp=_ref2.isFocused,isFocusVisibleProp=_ref2.isFocusVisible,variant=_ref2.variant,props=_objectWithoutProperties(_ref2,_excluded);var selectProps=useFormControl({isDisabled:props.isDisabled,nativeID:props.nativeID});var flatListData=[];var isDisabled=selectProps.disabled;var tempFix='__NativebasePlaceholder__';var _ref=React.useRef(null);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isOpen=_React$useState2[0],setIsOpen=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isFocused=_React$useState4[0],setIsFocused=_React$useState4[1];var _useFocusRing=useFocusRing(),focusProps=_useFocusRing.focusProps,isFocusVisible=_useFocusRing.isFocusVisible;var _useHover=useHover({isDisabled:isDisabled},_ref),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _usePropsResolution=usePropsResolution('Select',props,{isDisabled:isDisabled,isHovered:isHoveredProp||isHovered,isFocused:isFocusedProp||isFocused,isFocusVisible:isFocusVisibleProp||isFocusVisible},undefined),onValueChange=_usePropsResolution.onValueChange,selectedValue=_usePropsResolution.selectedValue,children=_usePropsResolution.children,dropdownIcon=_usePropsResolution.dropdownIcon,dropdownCloseIcon=_usePropsResolution.dropdownCloseIcon,dropdownOpenIcon=_usePropsResolution.dropdownOpenIcon,placeholder=_usePropsResolution.placeholder,accessibilityLabel=_usePropsResolution.accessibilityLabel,defaultValue=_usePropsResolution.defaultValue,_item=_usePropsResolution._item,_selectedItem=_usePropsResolution._selectedItem,onOpen=_usePropsResolution.onOpen,onClose=_usePropsResolution.onClose,optimized=_usePropsResolution.optimized,customDropdownIconProps=_usePropsResolution.customDropdownIconProps,_actionSheet=_usePropsResolution._actionSheet,_actionSheetContent=_usePropsResolution._actionSheetContent,_actionSheetBody=_usePropsResolution._actionSheetBody,_webSelect=_usePropsResolution._webSelect,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var _useControllableState=useControllableState({value:selectedValue,defaultValue:defaultValue,onChange:function onChange(newValue){onValueChange&&onValueChange(newValue);setIsOpen(false);}}),_useControllableState2=_slicedToArray(_useControllableState,2),value=_useControllableState2[0],setValue=_useControllableState2[1];var itemsList=React.Children.toArray(children).map(function(child){var _child$props,_child$props2;return{label:child===null||child===void 0?void 0:(_child$props=child.props)===null||_child$props===void 0?void 0:_child$props.label,value:child===null||child===void 0?void 0:(_child$props2=child.props)===null||_child$props2===void 0?void 0:_child$props2.value};});var selectedItemArray=itemsList.filter(function(item){return(item===null||item===void 0?void 0:item.value)===value;});var selectedItem=selectedItemArray&&selectedItemArray.length?selectedItemArray[0]:null;var contextValue=React.useMemo(function(){return{onValueChange:setValue,selectedValue:value,_selectedItem:_selectedItem!==null&&_selectedItem!==void 0?_selectedItem:{},_item:_item!==null&&_item!==void 0?_item:{}};},[value,setValue,_selectedItem,_item]);if(useHasResponsiveProps(props)){return null;}var rightIcon=isOpen&&dropdownOpenIcon?dropdownOpenIcon:!isOpen&&dropdownCloseIcon?dropdownCloseIcon:dropdownIcon?dropdownIcon:React.createElement(ChevronDownIcon,customDropdownIconProps);var handleClose=function handleClose(){setIsOpen(false);onClose&&onClose();};if(optimized){React.Children.toArray(children).map(function(child){flatListData.push(child.props);});}var _extractInObject=extractInObject(resolvedProps,[].concat(_toConsumableArray(stylingProps.margin),_toConsumableArray(stylingProps.flexbox),_toConsumableArray(stylingProps.position),['shadow','opacity'])),_extractInObject2=_slicedToArray(_extractInObject,2),layoutProps=_extractInObject2[0],nonLayoutProps=_extractInObject2[1];var commonInput=React.createElement(Input,_extends({placeholder:placeholder,InputRightElement:rightIcon},nonLayoutProps,{isFocused:isFocused,isHovered:isHovered,\"aria-hidden\":true,importantForAccessibility:\"no\",value:selectedItem?selectedItem.label:'',editable:false,focusable:false,isDisabled:isDisabled,pointerEvents:\"none\",variant:variant}));return Platform.OS==='android'||Platform.OS==='ios'?React.createElement(React.Fragment,null,React.createElement(Pressable,_extends({onPress:function onPress(){Keyboard.dismiss();setIsOpen(true);onOpen&&onOpen();},disabled:isDisabled,accessibilityLabel:accessibilityLabel,accessibilityRole:\"button\",ref:mergeRefs([ref,_ref])},layoutProps),commonInput),React.createElement(Actionsheet,_extends({isOpen:isOpen,onClose:handleClose},_actionSheet),React.createElement(Actionsheet.Content,_actionSheetContent,optimized?React.createElement(FlatList,_extends({},_actionSheetBody,{data:flatListData,keyExtractor:function keyExtractor(_item,index){return index.toString();},renderItem:function renderItem(_ref3){var item=_ref3.item;var isSelected=selectedValue===(item===null||item===void 0?void 0:item.value);return React.createElement(Actionsheet.Item,_extends({onPress:function onPress(){if(!isDisabled){setValue(item===null||item===void 0?void 0:item.value);}},accessibilityState:{selected:isSelected}},item,_item,isSelected&&_selectedItem),item===null||item===void 0?void 0:item.label);}})):React.createElement(ScrollView,_actionSheetBody,React.createElement(SelectContext.Provider,{value:contextValue},children))))):React.createElement(Box,layoutProps,React.createElement(\"select\",_extends({\"aria-readonly\":selectProps.readOnly,required:selectProps.required,disabled:isDisabled},focusProps,hoverProps,{ref:mergeRefs([ref,_ref]),onChange:function onChange(e){setValue(e.target.value);},value:selectedItem===null?tempFix:value,\"aria-label\":placeholder,onFocus:function onFocus(){setIsFocused(true);onOpen&&onOpen();},onBlur:function onBlur(){setIsFocused(false);onClose&&onClose();}},_webSelect),React.createElement(\"option\",{disabled:true,value:tempFix},placeholder),children),commonInput);};export default memo(forwardRef(Select));","map":{"version":3,"mappings":"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","names":["React","forwardRef","memo","Actionsheet","Box","Input","useFocusRing","useControllableState","usePropsResolution","useHover","mergeRefs","useFormControl","ChevronDownIcon","ScrollView","extractInObject","stylingProps","FlatList","useHasResponsiveProps","Pressable","SelectContext","createContext","onValueChange","selectedValue","_selectedItem","_item","Select","ref","isHoveredProp","isHovered","isFocusedProp","isFocused","isFocusVisibleProp","isFocusVisible","variant","props","selectProps","isDisabled","nativeID","flatListData","disabled","tempFix","_ref","useRef","useState","isOpen","setIsOpen","setIsFocused","focusProps","hoverProps","undefined","children","dropdownIcon","dropdownCloseIcon","dropdownOpenIcon","placeholder","accessibilityLabel","defaultValue","onOpen","onClose","optimized","customDropdownIconProps","_actionSheet","_actionSheetContent","_actionSheetBody","_webSelect","resolvedProps","value","onChange","newValue","setValue","itemsList","Children","toArray","map","child","label","_child$props","_child$props2","selectedItemArray","filter","item","selectedItem","length","contextValue","useMemo","rightIcon","handleClose","push","margin","flexbox","position","layoutProps","nonLayoutProps","commonInput","InputRightElement","importantForAccessibility","editable","focusable","pointerEvents","Platform","OS","onPress","Keyboard","dismiss","accessibilityRole","Content","data","keyExtractor","index","toString","renderItem","isSelected","Item","accessibilityState","selected","Provider","readOnly","required","e","target","onFocus","onBlur"],"sources":["Select.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport type { ISelectProps } from './types';\nimport { Platform, Keyboard } from 'react-native';\nimport { Actionsheet } from '../../composites/Actionsheet';\nimport Box from '../Box';\nimport { Input } from '../Input';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useControllableState } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { useFormControl } from '../../composites/FormControl';\nimport { ChevronDownIcon } from '../Icon/Icons';\nimport type { IButtonProps } from '../Button/types';\nimport { ScrollView } from '../../basic/ScrollView';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { FlatList } from '../../basic/FlatList';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { ISelectItemProps } from './types';\nimport { Pressable } from '../Pressable';\n\nexport const SelectContext = React.createContext({\n  onValueChange: (() => {}) as any,\n  selectedValue: null as any,\n  _selectedItem: {} as IButtonProps,\n  _item: {} as IButtonProps,\n});\n\nconst Select = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    variant,\n    ...props\n  }: ISelectProps,\n  ref: any\n) => {\n  const selectProps = useFormControl({\n    isDisabled: props.isDisabled,\n    nativeID: props.nativeID,\n  });\n  const flatListData: ISelectItemProps[] = [];\n\n  const isDisabled = selectProps.disabled;\n  const tempFix = '__NativebasePlaceholder__';\n  const _ref = React.useRef(null);\n\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const [isFocused, setIsFocused] = React.useState<boolean>(false);\n\n  const { focusProps, isFocusVisible } = useFocusRing();\n  const { hoverProps, isHovered } = useHover({ isDisabled }, _ref);\n\n  const {\n    onValueChange,\n    selectedValue,\n    children,\n    dropdownIcon,\n    dropdownCloseIcon,\n    dropdownOpenIcon,\n    placeholder,\n    accessibilityLabel,\n    defaultValue,\n    _item,\n    _selectedItem,\n    onOpen,\n    onClose,\n    optimized,\n    customDropdownIconProps,\n    _actionSheet,\n    _actionSheetContent,\n    _actionSheetBody,\n    _webSelect,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Select',\n    props,\n    {\n      isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    },\n    undefined\n  );\n\n  const [value, setValue] = useControllableState({\n    value: selectedValue,\n    defaultValue,\n    onChange: (newValue) => {\n      onValueChange && onValueChange(newValue);\n      setIsOpen(false);\n    },\n  });\n\n  const itemsList: Array<{\n    label: string;\n    value: string;\n  }> = React.Children.toArray(children).map((child: any) => {\n    return {\n      label: child?.props?.label,\n      value: child?.props?.value,\n    };\n  });\n\n  const selectedItemArray = itemsList.filter(\n    (item: any) => item?.value === value\n  );\n\n  const selectedItem =\n    selectedItemArray && selectedItemArray.length ? selectedItemArray[0] : null;\n\n  const contextValue = React.useMemo(() => {\n    return {\n      onValueChange: setValue,\n      selectedValue: value,\n      _selectedItem: _selectedItem ?? {},\n      _item: _item ?? {},\n    };\n  }, [value, setValue, _selectedItem, _item]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const rightIcon =\n    isOpen && dropdownOpenIcon ? (\n      dropdownOpenIcon\n    ) : !isOpen && dropdownCloseIcon ? (\n      dropdownCloseIcon\n    ) : dropdownIcon ? (\n      dropdownIcon\n    ) : (\n      <ChevronDownIcon {...customDropdownIconProps} />\n    );\n\n  const handleClose = () => {\n    setIsOpen(false);\n    onClose && onClose();\n  };\n\n  if (optimized) {\n    React.Children.toArray(children).map((child: any) => {\n      flatListData.push(child.props);\n    });\n  }\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    'shadow',\n    'opacity',\n  ]);\n\n  const commonInput = (\n    <Input\n      placeholder={placeholder}\n      InputRightElement={rightIcon}\n      {...nonLayoutProps}\n      // NOTE: Adding ts-ignore as we're not exposing isFocused in the Input component\n      // @ts-ignore-next-line\n      isFocused={isFocused}\n      isHovered={isHovered}\n      aria-hidden={true}\n      importantForAccessibility=\"no\"\n      value={selectedItem ? selectedItem.label : ''}\n      editable={false}\n      focusable={false}\n      isDisabled={isDisabled}\n      pointerEvents=\"none\"\n      variant={variant}\n    />\n  );\n\n  return Platform.OS === 'android' || Platform.OS === 'ios' ? (\n    <>\n      <Pressable\n        onPress={() => {\n          Keyboard.dismiss();\n          setIsOpen(true);\n          onOpen && onOpen();\n        }}\n        disabled={isDisabled}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        ref={mergeRefs([ref, _ref])}\n        {...layoutProps}\n      >\n        {commonInput}\n      </Pressable>\n      <Actionsheet isOpen={isOpen} onClose={handleClose} {..._actionSheet}>\n        <Actionsheet.Content {..._actionSheetContent}>\n          {/* TODO: Replace ScrollVeiw with FlatList */}\n          {optimized ? (\n            <FlatList\n              {..._actionSheetBody}\n              data={flatListData}\n              // eslint-disable-next-line no-shadow\n              keyExtractor={(_item, index) => index.toString()}\n              renderItem={({ item }: any) => {\n                const isSelected = selectedValue === item?.value;\n                return (\n                  <Actionsheet.Item\n                    onPress={() => {\n                      if (!isDisabled) {\n                        setValue(item?.value);\n                      }\n                    }}\n                    accessibilityState={{ selected: isSelected }}\n                    {...item}\n                    {..._item}\n                    {...(isSelected && _selectedItem)}\n                  >\n                    {item?.label}\n                  </Actionsheet.Item>\n                );\n              }}\n            />\n          ) : (\n            <ScrollView {..._actionSheetBody}>\n              <SelectContext.Provider value={contextValue}>\n                {children}\n              </SelectContext.Provider>\n            </ScrollView>\n          )}\n        </Actionsheet.Content>\n      </Actionsheet>\n    </>\n  ) : (\n    <Box {...layoutProps}>\n      {/* <Box w=\"100%\" h=\"100%\" position=\"absolute\" opacity=\"0\" zIndex={1}> */}\n      <select\n        aria-readonly={selectProps.readOnly}\n        required={selectProps.required}\n        disabled={isDisabled}\n        {...focusProps}\n        {...hoverProps}\n        ref={mergeRefs([ref, _ref])}\n        //@ts-ignore\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n        value={selectedItem === null ? tempFix : value}\n        aria-label={placeholder}\n        onFocus={() => {\n          setIsFocused(true);\n          onOpen && onOpen();\n        }}\n        onBlur={() => {\n          setIsFocused(false);\n          onClose && onClose();\n        }}\n        {..._webSelect}\n      >\n        <option disabled value={tempFix}>\n          {placeholder}\n        </option>\n        {children}\n      </select>\n      {/* </Box> */}\n      {commonInput}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Select));\n"]},"metadata":{},"sourceType":"module"}