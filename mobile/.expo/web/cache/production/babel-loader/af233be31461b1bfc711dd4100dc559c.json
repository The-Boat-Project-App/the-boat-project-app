{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"nativeID\",\"isRequired\",\"isInvalid\",\"isDisabled\",\"isReadOnly\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from'react';import{useId}from'@react-native-aria/utils';import omit from'lodash.omit';import{ariaAttr}from\"../../../utils\";import{ResponsiveQueryContext}from\"../../../utils/useResponsiveQuery/ResponsiveQueryProvider\";import{uniqueId}from'lodash';export var FormControlContext=React.createContext({});export function useFormControlProvider(props){var idProp=props.nativeID,isRequired=props.isRequired,isInvalid=props.isInvalid,isDisabled=props.isDisabled,isReadOnly=props.isReadOnly,htmlProps=_objectWithoutProperties(props,_excluded);var id=uniqueId();var responsiveQueryContext=React.useContext(ResponsiveQueryContext);var disableCSSMediaQueries=responsiveQueryContext.disableCSSMediaQueries;if(!disableCSSMediaQueries){id=useId();}var nativeID=idProp||\"field-\".concat(id);var labelId=\"\".concat(nativeID,\"-label\");var feedbackId=\"\".concat(nativeID,\"-feedback\");var helpTextId=\"\".concat(nativeID,\"-helptext\");var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),hasFeedbackText=_React$useState2[0],setHasFeedbackText=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),hasHelpText=_React$useState4[0],setHasHelpText=_React$useState4[1];var context={isRequired:!!isRequired,isInvalid:!!isInvalid,isReadOnly:!!isReadOnly,isDisabled:!!isDisabled,hasFeedbackText:hasFeedbackText,setHasFeedbackText:setHasFeedbackText,hasHelpText:hasHelpText,setHasHelpText:setHasHelpText,nativeID:nativeID,labelId:labelId,feedbackId:feedbackId,helpTextId:helpTextId,htmlProps:htmlProps};return context;}export function useFormControl(props){var _props$nativeID;var field=useFormControlContext();var describedBy=[];if(field!==null&&field!==void 0&&field.hasFeedbackText)describedBy.push(field===null||field===void 0?void 0:field.feedbackId);if(field!==null&&field!==void 0&&field.hasHelpText)describedBy.push(field===null||field===void 0?void 0:field.helpTextId);var ariaDescribedBy=describedBy.join(' ');var cleanProps=omit(props,['isInvalid','isDisabled','isReadOnly','isRequired']);return _objectSpread(_objectSpread({},cleanProps),{},{nativeID:(_props$nativeID=props.nativeID)!==null&&_props$nativeID!==void 0?_props$nativeID:(field===null||field===void 0?void 0:field.nativeID)+'-input',disabled:props.isDisabled||(field===null||field===void 0?void 0:field.isDisabled),readOnly:props.isReadOnly||(field===null||field===void 0?void 0:field.isReadOnly),required:props.isRequired||(field===null||field===void 0?void 0:field.isRequired),accessibilityInvalid:ariaAttr(props.isInvalid||(field===null||field===void 0?void 0:field.isInvalid)),accessibilityRequired:ariaAttr(props.isRequired||(field===null||field===void 0?void 0:field.isRequired)),accessibilityReadOnly:ariaAttr(props.isReadOnly||(field===null||field===void 0?void 0:field.isReadOnly)),accessibilityDescribedBy:ariaDescribedBy||undefined});}export var useFormControlContext=function useFormControlContext(){return React.useContext(FormControlContext);};","map":{"version":3,"mappings":"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","names":["React","useId","omit","ariaAttr","ResponsiveQueryContext","uniqueId","FormControlContext","createContext","useFormControlProvider","props","idProp","nativeID","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","id","responsiveQueryContext","useContext","disableCSSMediaQueries","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","context","useFormControl","field","useFormControlContext","describedBy","push","ariaDescribedBy","join","cleanProps","disabled","readOnly","required","accessibilityInvalid","accessibilityRequired","accessibilityReadOnly","accessibilityDescribedBy","undefined"],"sources":["useFormControl.tsx"],"sourcesContent":["import React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport type { IFormControlProps } from './types';\nimport { ariaAttr } from '../../../utils';\nimport { ResponsiveQueryContext } from '../../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport { uniqueId } from 'lodash';\n\nexport type IFormControlContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  'htmlProps'\n>;\n\nexport const FormControlContext = React.createContext({});\n\nexport function useFormControlProvider(props: IFormControlProps) {\n  const {\n    nativeID: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n\n  let id = uniqueId();\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  if (!disableCSSMediaQueries) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    id = useId();\n  }\n\n  // const id = '';\n  // Generate all the required ids\n  const nativeID = idProp || `field-${id}`;\n\n  const labelId = `${nativeID}-label`;\n  const feedbackId = `${nativeID}-feedback`;\n  const helpTextId = `${nativeID}-helptext`;\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false);\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = React.useState(false);\n\n  const context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    nativeID,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n  };\n\n  return context;\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl(props: IFormControlProps) {\n  const field = useFormControlContext();\n  const describedBy: any[] = [];\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText) describedBy.push(field?.feedbackId);\n  if (field?.hasHelpText) describedBy.push(field?.helpTextId);\n  const ariaDescribedBy = describedBy.join(' ');\n\n  const cleanProps = omit(props, [\n    'isInvalid',\n    'isDisabled',\n    'isReadOnly',\n    'isRequired',\n  ]);\n\n  return {\n    ...cleanProps,\n    nativeID: props.nativeID ?? field?.nativeID + '-input',\n    disabled: props.isDisabled || field?.isDisabled,\n    readOnly: props.isReadOnly || field?.isReadOnly,\n    required: props.isRequired || field?.isRequired,\n    accessibilityInvalid: ariaAttr(props.isInvalid || field?.isInvalid),\n    accessibilityRequired: ariaAttr(props.isRequired || field?.isRequired),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || field?.isReadOnly),\n    accessibilityDescribedBy: ariaDescribedBy || undefined,\n  };\n}\n\nexport const useFormControlContext = () => {\n  return (React.useContext(\n    FormControlContext\n  ) as unknown) as IFormControlContext;\n};\n"]},"metadata":{},"sourceType":"module"}