{"ast":null,"code":"var baseStyle=function baseStyle(props){var c=props.colorScheme;return{_disabled:{opacity:0.4},_invalid:{borderColor:'error.600',borderWidth:2,borderRadius:12},onThumbColor:'muted.50',offThumbColor:'muted.50',offTrackColor:'muted.300',onTrackColor:\"\".concat(c,\".600\"),_hover:{offTrackColor:'muted.400',onTrackColor:\"\".concat(c,\".700\")},_dark:{offTrackColor:'muted.700',onTrackColor:\"\".concat(c,\".500\"),_hover:{offTrackColor:'muted.600',onTrackColor:\"\".concat(c,\".400\")},_invalid:{borderColor:'error.500'}}};};var sizes={sm:{style:{transform:[{scale:0.75}]}},md:{},lg:{style:{transform:[{scale:1.25}]},margin:1}};var defaultProps={size:'md',colorScheme:'primary'};export default{baseStyle:baseStyle,sizes:sizes,defaultProps:defaultProps};","map":{"version":3,"mappings":"AAAA,GAAMA,UAAS,CAAIC,QAAbD,UAAaC,MAAD,CAAgC,CAChD,GAAqBC,EAArB,CAA2BD,KAA3B,CAAQE,WAAR,CACA,MAAO,CACLC,SAAS,CAAE,CACTC,OAAO,CAAE,GADA,CADN,CAILC,QAAQ,CAAE,CACRC,WAAW,CAAE,WADL,CAERC,WAAW,CAAE,CAFL,CAGRC,YAAY,CAAE,EAHN,CAJL,CASLC,YAAY,CAAE,UATT,CAULC,aAAa,CAAE,UAVV,CAWLC,aAAa,CAAE,WAXV,CAYLC,YAAY,WAAKX,CAAL,QAZP,CAaLY,MAAM,CAAE,CACNF,aAAa,CAAE,WADT,CAENC,YAAY,WAAKX,CAAL,QAFN,CAbH,CAkBLa,KAAK,CAAE,CACLH,aAAa,CAAE,WADV,CAELC,YAAY,WAAKX,CAAL,QAFP,CAGLY,MAAM,CAAE,CACNF,aAAa,CAAE,WADT,CAENC,YAAY,WAAKX,CAAL,QAFN,CAHH,CAOLI,QAAQ,CAAE,CACRC,WAAW,CAAE,WADL,CAPL,CAlBF,CAAP,CAFF,EAkCA,GAAMS,MAAK,CAAG,CACZC,EAAE,CAAE,CACFC,KAAK,CAAE,CACLC,SAAS,CAAE,CAAC,CAAEC,KAAK,CAAE,IAAT,CAAD,CADN,CADL,CADQ,CAMZC,EAAE,CAAE,EANQ,CAOZC,EAAE,CAAE,CACFJ,KAAK,CAAE,CACLC,SAAS,CAAE,CAAC,CAAEC,KAAK,CAAE,IAAT,CAAD,CADN,CADL,CAIFG,MAAM,CAAE,CAJN,CAPQ,CAAd,CAeA,GAAMC,aAAY,CAAG,CACnBC,IAAI,CAAE,IADa,CAEnBtB,WAAW,CAAE,SAFM,CAArB,CAKA,cAAe,CACbH,SADa,CACbA,SADa,CAEbgB,KAFa,CAEbA,KAFa,CAGbQ,yBAHa,CAAf","names":["baseStyle","props","c","colorScheme","_disabled","opacity","_invalid","borderColor","borderWidth","borderRadius","onThumbColor","offThumbColor","offTrackColor","onTrackColor","_hover","_dark","sizes","sm","style","transform","scale","md","lg","margin","defaultProps","size"],"sources":["switch.ts"],"sourcesContent":["const baseStyle = (props: Record<string, any>) => {\n  const { colorScheme: c } = props;\n  return {\n    _disabled: {\n      opacity: 0.4,\n    },\n    _invalid: {\n      borderColor: 'error.600',\n      borderWidth: 2,\n      borderRadius: 12,\n    },\n    onThumbColor: 'muted.50',\n    offThumbColor: 'muted.50',\n    offTrackColor: 'muted.300',\n    onTrackColor: `${c}.600`,\n    _hover: {\n      offTrackColor: 'muted.400',\n      onTrackColor: `${c}.700`,\n    },\n\n    _dark: {\n      offTrackColor: 'muted.700',\n      onTrackColor: `${c}.500`,\n      _hover: {\n        offTrackColor: 'muted.600',\n        onTrackColor: `${c}.400`,\n      },\n      _invalid: {\n        borderColor: 'error.500',\n      },\n    },\n  };\n};\n\nconst sizes = {\n  sm: {\n    style: {\n      transform: [{ scale: 0.75 }],\n    },\n  },\n  md: {},\n  lg: {\n    style: {\n      transform: [{ scale: 1.25 }],\n    },\n    margin: 1,\n  },\n};\n\nconst defaultProps = {\n  size: 'md',\n  colorScheme: 'primary',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}