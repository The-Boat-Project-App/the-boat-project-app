{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onSelectedItemChange\",\"options\",\"renderItem\",\"getOptionLabel\",\"getOptionKey\",\"onChange\",\"numberOfItems\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import{useButton}from'@react-native-aria/button';import{useComboBoxState}from'@react-stately/combobox';import{useComboBox}from'@react-native-aria/combobox';import{useListBox,useOption}from'@react-native-aria/listbox';import ScrollView from\"react-native-web/dist/exports/ScrollView\";import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import Platform from\"react-native-web/dist/exports/Platform\";import{Item}from'@react-stately/collections';import Box from\"../../primitives/Box\";import{Pressable}from\"../../primitives/Pressable\";import Text from\"../../primitives/Text\";import{extractInObject}from\"../../../theme/tools\";import{layoutPropsList}from\"./types\";import{Input}from\"../../primitives/Input\";import{useThemeProps}from\"../../../hooks\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";export var Typeahead=React.forwardRef(function(_ref,ref){var onSelectedItemChange=_ref.onSelectedItemChange,options=_ref.options,renderItem=_ref.renderItem,getOptionLabel=_ref.getOptionLabel,getOptionKey=_ref.getOptionKey,onChange=_ref.onChange,numberOfItems=_ref.numberOfItems,rest=_objectWithoutProperties(_ref,_excluded);if(useHasResponsiveProps(rest)){return null;}return React.createElement(ComboBoxImplementation,_extends({},rest,{onSelectionChange:onSelectedItemChange,items:numberOfItems!==undefined?options.slice(0,numberOfItems):options,onInputChange:onChange,ref:ref}),function(item){if(typeof item!=='string'&&getOptionLabel===undefined){throw new Error('Please use getOptionLabel prop');}if(item.id===undefined&&getOptionKey===undefined){throw new Error('Please use getOptionKey prop');}var optionLabel=getOptionLabel?getOptionLabel(item):item;var optionKey=getOptionKey?getOptionKey(item):item.id!==undefined?item.id:optionLabel;return React.createElement(Item,{textValue:optionLabel,key:optionKey},renderItem?renderItem(item):React.createElement(Box,{p:2,justifyContent:\"center\"},React.createElement(Text,null,optionLabel)));});});var ComboBoxImplementation=React.forwardRef(function(props,ref){var _extractInObject=extractInObject(props,layoutPropsList),_extractInObject2=_slicedToArray(_extractInObject,1),layoutProps=_extractInObject2[0];var state=useComboBoxState(props);var triggerRef=React.useRef(null);var inputRef=React.useRef(null);var listBoxRef=React.useRef(null);var popoverRef=React.useRef(null);var _useComboBox=useComboBox(_objectSpread(_objectSpread({},props),{},{inputRef:inputRef,buttonRef:triggerRef,listBoxRef:listBoxRef,popoverRef:popoverRef,menuTrigger:'input'}),state),triggerProps=_useComboBox.buttonProps,inputProps=_useComboBox.inputProps,listBoxProps=_useComboBox.listBoxProps,labelProps=_useComboBox.labelProps;var toggleIconSetter=function toggleIconSetter(){if(typeof props.toggleIcon==='function')return props.toggleIcon({isOpen:state.isOpen});return props.toggleIcon;};var _useButton=useButton(triggerProps),buttonProps=_useButton.buttonProps;return React.createElement(Box,_extends({flexDirection:\"row\"},layoutProps,{ref:ref}),React.createElement(Box,{flex:1},props.label&&React.createElement(Text,_extends({},labelProps,{pb:1}),props.label),React.createElement(Input,_extends({},inputProps,{ref:inputRef,InputRightElement:React.createElement(Pressable,_extends({},buttonProps,{ref:triggerRef}),toggleIconSetter())})),state.isOpen&&React.createElement(ListBoxPopup,_extends({},listBoxProps,{listBoxRef:listBoxRef,popoverRef:popoverRef,state:state,label:props.label}))));});function ListBoxPopup(props){var popoverRef=props.popoverRef,listBoxRef=props.listBoxRef,state=props.state,dropdownHeight=props.dropdownHeight,label=props.label;var _useListBox=useListBox({label:label,autoFocus:state.focusStrategy,disallowEmptySelection:true},state,listBoxRef),listBoxProps=_useListBox.listBoxProps;return React.createElement(Box,{ref:popoverRef},React.createElement(Box,{position:\"absolute\",width:\"100%\",maxHeight:dropdownHeight!==null&&dropdownHeight!==void 0?dropdownHeight:200},React.createElement(ScrollView,_extends({},listBoxProps,{keyboardShouldPersistTaps:\"handled\",ref:function ref(node){if(Platform.OS==='web'){listBoxRef.current=findNodeHandle(node);}else{listBoxRef.current=node;}}}),_toConsumableArray(state.collection).map(function(item){return React.createElement(Option,{key:item.key,item:item,state:state});}))));}function Option(_ref2){var item=_ref2.item,state=_ref2.state;var searchItemStyle=useThemeProps('TypeAheadSearchItem',{});var ref=React.useRef(null);var isDisabled=state.disabledKeys.has(item.key);var isSelected=state.selectionManager.isSelected(item.key);var isFocused=state.selectionManager.focusedKey===item.key;var _useOption=useOption({key:item.key,isDisabled:isDisabled,isSelected:isSelected,shouldFocusOnHover:true,shouldUseVirtualFocus:true},state,ref),optionProps=_useOption.optionProps;var backgroundColor=searchItemStyle.backgroundColor;var opacity=1;if(isSelected){backgroundColor=searchItemStyle._focus.backgroundColor;}else if(isFocused){backgroundColor=searchItemStyle._focus.backgroundColor;}else if(isDisabled){opacity=0.6;backgroundColor=searchItemStyle._disabled.backgroundColor;}return React.createElement(Pressable,_extends({},optionProps,{opacity:opacity,cursor:isDisabled?Platform.OS==='web'?'not-allowed':null:null,backgroundColor:backgroundColor,ref:ref}),item.rendered);}","map":{"version":3,"mappings":"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","names":["React","useButton","useComboBoxState","useComboBox","useListBox","useOption","Item","Box","Pressable","Text","extractInObject","layoutPropsList","Input","useThemeProps","useHasResponsiveProps","Typeahead","forwardRef","ref","onSelectedItemChange","options","renderItem","getOptionLabel","getOptionKey","onChange","numberOfItems","rest","ComboBoxImplementation","onSelectionChange","items","undefined","slice","onInputChange","item","Error","id","optionLabel","optionKey","textValue","key","p","justifyContent","props","layoutProps","state","triggerRef","useRef","inputRef","listBoxRef","popoverRef","buttonRef","menuTrigger","triggerProps","buttonProps","inputProps","listBoxProps","labelProps","toggleIconSetter","toggleIcon","isOpen","flexDirection","flex","label","pb","InputRightElement","ListBoxPopup","dropdownHeight","autoFocus","focusStrategy","disallowEmptySelection","position","width","maxHeight","ScrollView","keyboardShouldPersistTaps","node","Platform","OS","current","findNodeHandle","collection","map","Option","searchItemStyle","isDisabled","disabledKeys","has","isSelected","selectionManager","isFocused","focusedKey","shouldFocusOnHover","shouldUseVirtualFocus","optionProps","backgroundColor","opacity","_focus","_disabled","cursor","rendered"],"sources":["Typeahead.tsx"],"sourcesContent":["import React from 'react';\nimport { useButton } from '@react-native-aria/button';\nimport { ComboBoxState, useComboBoxState } from '@react-stately/combobox';\nimport { useComboBox } from '@react-native-aria/combobox';\nimport { useListBox, useOption } from '@react-native-aria/listbox';\nimport { ScrollView, findNodeHandle, Platform } from 'react-native';\nimport { Item } from '@react-stately/collections';\nimport Box from '../../primitives/Box';\nimport { Pressable } from '../../primitives/Pressable';\nimport Text from '../../primitives/Text';\nimport { extractInObject } from '../../../theme/tools';\nimport { ITypeaheadProps, IComboBoxProps, layoutPropsList } from './types';\nimport { Input } from '../../primitives/Input';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const Typeahead = React.forwardRef(\n  (\n    {\n      onSelectedItemChange,\n      options,\n      renderItem,\n      getOptionLabel,\n      getOptionKey,\n      onChange,\n      numberOfItems,\n      ...rest\n    }: ITypeaheadProps,\n    ref?: any\n  ) => {\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(rest)) {\n      return null;\n    }\n    return (\n      <ComboBoxImplementation\n        {...rest}\n        onSelectionChange={onSelectedItemChange}\n        items={\n          numberOfItems !== undefined\n            ? options.slice(0, numberOfItems)\n            : options\n        }\n        onInputChange={onChange}\n        ref={ref}\n      >\n        {(item: any) => {\n          if (typeof item !== 'string' && getOptionLabel === undefined) {\n            throw new Error('Please use getOptionLabel prop');\n          }\n\n          if (item.id === undefined && getOptionKey === undefined) {\n            throw new Error('Please use getOptionKey prop');\n          }\n\n          const optionLabel = getOptionLabel ? getOptionLabel(item) : item;\n          const optionKey = getOptionKey\n            ? getOptionKey(item)\n            : item.id !== undefined\n            ? item.id\n            : optionLabel;\n\n          return (\n            <Item textValue={optionLabel} key={optionKey}>\n              {renderItem ? (\n                renderItem(item)\n              ) : (\n                <Box p={2} justifyContent=\"center\">\n                  <Text>{optionLabel}</Text>\n                </Box>\n              )}\n            </Item>\n          );\n        }}\n      </ComboBoxImplementation>\n    );\n  }\n);\n\nconst ComboBoxImplementation = React.forwardRef(\n  (props: IComboBoxProps, ref?: any) => {\n    const [layoutProps] = extractInObject(props, layoutPropsList);\n    let state = useComboBoxState(props);\n\n    let triggerRef = React.useRef(null);\n    let inputRef = React.useRef(null);\n    let listBoxRef = React.useRef(null);\n    let popoverRef = React.useRef(null);\n\n    let {\n      buttonProps: triggerProps,\n      inputProps,\n      listBoxProps,\n      labelProps,\n    } = useComboBox(\n      {\n        ...props,\n        inputRef,\n        buttonRef: triggerRef,\n        listBoxRef,\n        popoverRef,\n        menuTrigger: 'input',\n      },\n      state\n    );\n\n    const toggleIconSetter = () => {\n      if (typeof props.toggleIcon === 'function')\n        return props.toggleIcon({\n          isOpen: state.isOpen,\n        });\n      return props.toggleIcon;\n    };\n\n    let { buttonProps } = useButton(triggerProps);\n\n    return (\n      <Box flexDirection=\"row\" {...layoutProps} ref={ref}>\n        <Box flex={1}>\n          {props.label && (\n            <Text {...labelProps} pb={1}>\n              {props.label}\n            </Text>\n          )}\n          <Input\n            {...inputProps}\n            ref={inputRef}\n            InputRightElement={\n              // @ts-ignore - RN has hitSlop type inconsistent for View and Pressable!\n              <Pressable {...buttonProps} ref={triggerRef}>\n                {toggleIconSetter()}\n              </Pressable>\n            }\n          />\n\n          {state.isOpen && (\n            <ListBoxPopup\n              {...listBoxProps}\n              listBoxRef={listBoxRef}\n              popoverRef={popoverRef}\n              state={state}\n              label={props.label}\n            />\n          )}\n        </Box>\n      </Box>\n    );\n  }\n);\n\ntype IListBoxProps = {\n  popoverRef: any;\n  listBoxRef: any;\n  state: ComboBoxState<any>;\n  dropdownHeight: number;\n  label: string;\n};\n\nfunction ListBoxPopup(props: IListBoxProps) {\n  let { popoverRef, listBoxRef, state, dropdownHeight, label } = props;\n\n  let { listBoxProps } = useListBox(\n    {\n      label,\n      autoFocus: state.focusStrategy,\n      disallowEmptySelection: true,\n    },\n    state,\n    listBoxRef\n  );\n\n  return (\n    <Box ref={popoverRef}>\n      <Box position=\"absolute\" width=\"100%\" maxHeight={dropdownHeight ?? 200}>\n        <ScrollView\n          {...listBoxProps}\n          keyboardShouldPersistTaps=\"handled\"\n          ref={(node) => {\n            if (Platform.OS === 'web') {\n              listBoxRef.current = findNodeHandle(node);\n            } else {\n              listBoxRef.current = node;\n            }\n          }}\n        >\n          {[...state.collection].map((item) => (\n            <Option key={item.key} item={item} state={state} />\n          ))}\n        </ScrollView>\n      </Box>\n    </Box>\n  );\n}\n\nfunction Option({ item, state }: { item: any; state: ComboBoxState<any> }) {\n  const searchItemStyle = useThemeProps('TypeAheadSearchItem', {});\n\n  let ref = React.useRef(null);\n  let isDisabled = state.disabledKeys.has(item.key);\n  let isSelected = state.selectionManager.isSelected(item.key);\n  let isFocused = state.selectionManager.focusedKey === item.key;\n\n  let { optionProps } = useOption(\n    {\n      key: item.key,\n      isDisabled,\n      isSelected,\n      shouldFocusOnHover: true,\n      shouldUseVirtualFocus: true,\n    },\n    state,\n    ref\n  );\n\n  let backgroundColor = searchItemStyle.backgroundColor;\n  let opacity = 1;\n\n  if (isSelected) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isFocused) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isDisabled) {\n    opacity = 0.6;\n    backgroundColor = searchItemStyle._disabled.backgroundColor;\n  }\n\n  return (\n    <Pressable\n      {...optionProps}\n      opacity={opacity}\n      cursor={\n        isDisabled ? (Platform.OS === 'web' ? 'not-allowed' : null) : null\n      }\n      backgroundColor={backgroundColor}\n      ref={ref}\n    >\n      {item.rendered}\n    </Pressable>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}