{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"index\",\"isDisabled\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Box from\"../../primitives/Box\";import{AccordionContext,AccordionItemContext}from\"./Context\";import{useThemeProps}from\"../../../hooks\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var AccordionItem=function AccordionItem(_ref,ref){var children=_ref.children,_ref$index=_ref.index,pIndex=_ref$index===void 0?0:_ref$index,isDisabled=_ref.isDisabled,props=_objectWithoutProperties(_ref,_excluded);var _React$useContext=React.useContext(AccordionContext),cIndex=_React$useContext.index,changeHandler=_React$useContext.changeHandler;var _useThemeProps=useThemeProps('AccordionItem',props),newProps=Object.assign({},_useThemeProps);var isOpen=cIndex===null||cIndex===void 0?void 0:cIndex.includes(pIndex);var onClose=function onClose(cb){changeHandler&&changeHandler(false,pIndex);cb&&cb();};var onOpen=function onOpen(cb){changeHandler&&changeHandler(true,pIndex);cb&&cb();};var childSetter=function childSetter(){if(typeof children==='function')return children({isExpanded:isOpen,isDisabled:isDisabled});return children;};if(useHasResponsiveProps(props)){return null;}return React.createElement(AccordionItemContext.Provider,{value:{index:pIndex,isOpen:isOpen,isDisabled:isDisabled,onClose:onClose,onOpen:onOpen}},React.createElement(Box,_extends({},newProps,{ref:ref}),childSetter()));};export default React.memo(React.forwardRef(AccordionItem));","map":{"version":3,"mappings":"4ZAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,IAAP,4BACA,OAASC,gBAAT,CAA2BC,oBAA3B,iBAEA,OAASC,aAAT,sBACA,OAASC,qBAAT,4CAEA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,MAEpBC,GAFoB,CAGjB,IAFDC,SAEC,MAFDA,QAEC,iBAFSC,KAET,CAFgBC,MAEhB,qBAFyB,CAEzB,YAF4BC,UAE5B,MAF4BA,UAE5B,CAF2CC,KAE3C,0CACH,sBAG4BZ,KAAK,CAACa,UAANb,CAAiBE,gBAAjBF,CAH5B,CACSc,MADT,mBACEL,KADF,CAEEM,aAFF,mBAEEA,aAFF,CAIA,mBAAwBX,aAAa,CAAC,eAAD,CAAkBQ,KAAlB,CAArC,CAAWI,QAAX,kCAEA,GAAMC,OAAM,CAAGH,MAAH,OAAGA,QAAH,SAAGA,CAAH,MAAGA,OAAM,CAAEI,QAARJ,CAAiBJ,MAAjBI,CAAf,CACA,GAAMK,QAAO,CAAIC,QAAXD,QAAWC,GAAD,CAAqB,CACnCL,aAAa,EAAIA,aAAa,CAAC,KAAD,CAAQL,MAAR,CAA9BK,CACAK,EAAE,EAAIA,EAAE,EAARA,CAFF,EAIA,GAAMC,OAAM,CAAID,QAAVC,OAAUD,GAAD,CAAqB,CAClCL,aAAa,EAAIA,aAAa,CAAC,IAAD,CAAOL,MAAP,CAA9BK,CACAK,EAAE,EAAIA,EAAE,EAARA,CAFF,EAIA,GAAME,YAAW,CAAG,QAAdA,YAAc,EAAM,CACxB,GAAI,MAAOd,SAAP,GAAoB,UAAxB,CACE,MAAOA,SAAQ,CAAC,CAAEe,UAAU,CAAEN,MAAd,CAAsBN,qBAAtB,CAAD,CAAf,CACF,MAAOH,SAAP,CAHF,EAMA,GAAIH,qBAAqB,CAACO,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACEZ,qBAACG,oBAAD,CAAsBqB,QAAtB,EACEC,KAAK,CAAE,CACLhB,KAAK,CAAEC,MADF,CAELO,MAFK,CAELA,MAFK,CAGLN,UAHK,CAGLA,UAHK,CAILQ,OAJK,CAILA,OAJK,CAKLE,aALK,CADT,EASErB,oBAACC,GAAD,aAASe,QAAT,EAAmBT,GAAG,CAAEA,GAAxB,GACGe,WAAW,EADd,CATF,CADF,CA5BF,EA6CA,cAAetB,MAAK,CAAC0B,IAAN1B,CAAWA,KAAK,CAAC2B,UAAN3B,CAAiBM,aAAjBN,CAAXA,CAAf","names":["React","Box","AccordionContext","AccordionItemContext","useThemeProps","useHasResponsiveProps","AccordionItem","ref","children","index","pIndex","isDisabled","props","useContext","cIndex","changeHandler","newProps","isOpen","includes","onClose","cb","onOpen","childSetter","isExpanded","Provider","value","memo","forwardRef"],"sources":["AccordionItem.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { AccordionContext, AccordionItemContext } from './Context';\nimport type { IAccordionItemProps, IAccordionContextProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionItem = (\n  { children, index: pIndex = 0, isDisabled, ...props }: IAccordionItemProps,\n  ref?: any\n) => {\n  const {\n    index: cIndex,\n    changeHandler,\n  }: IAccordionContextProps = React.useContext(AccordionContext);\n  const { ...newProps } = useThemeProps('AccordionItem', props);\n\n  const isOpen = cIndex?.includes(pIndex);\n  const onClose = (cb?: () => void) => {\n    changeHandler && changeHandler(false, pIndex);\n    cb && cb();\n  };\n  const onOpen = (cb?: () => void) => {\n    changeHandler && changeHandler(true, pIndex);\n    cb && cb();\n  };\n  const childSetter = () => {\n    if (typeof children === 'function')\n      return children({ isExpanded: isOpen, isDisabled });\n    return children;\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <AccordionItemContext.Provider\n      value={{\n        index: pIndex,\n        isOpen,\n        isDisabled,\n        onClose,\n        onOpen,\n      }}\n    >\n      <Box {...newProps} ref={ref}>\n        {childSetter()}\n      </Box>\n    </AccordionItemContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionItem));\n"]},"metadata":{},"sourceType":"module"}