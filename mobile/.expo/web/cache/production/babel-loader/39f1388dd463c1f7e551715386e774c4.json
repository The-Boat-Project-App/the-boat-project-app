{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"name\"];import{randomColor,getRandomString,mode}from\"../tools\";var baseStyle=function baseStyle(props){var name=props.name,colorModeProps=_objectWithoutProperties(props,_excluded);var bg=name?randomColor({string:getRandomString(5)+name}):'gray.400';var borderColor=mode('gray.800','white')(colorModeProps);return{bg:bg,borderColor:borderColor,position:'relative',justifyContent:'center',alignItems:'center',borderRadius:'full',_text:{fontWeight:600},_image:{borderRadius:'full',alt:'--',_alt:{fontWeight:600},style:{height:'100%',width:'100%'}}};};function getSize(size,fontSize){return{width:size,height:size,_text:{fontSize:fontSize}};}var sizes={'xs':getSize('6','2xs'),'sm':getSize('8','xs'),'md':getSize('12','md'),'lg':getSize('16','xl'),'xl':getSize('24','3xl'),'2xl':getSize('32','5xl')};var defaultProps={size:'md'};export default{baseStyle:baseStyle,sizes:sizes,defaultProps:defaultProps};","map":{"version":3,"mappings":"4GAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,IAAvC,gBAEA,GAAMC,UAAS,CAAIC,QAAbD,UAAaC,MAAD,CAAgC,CAChD,GAAQC,KAAR,CAAoCD,KAApC,CAAQC,IAAR,CAAiBC,cAAjB,0BAAoCF,KAApC,YACA,GAAMG,GAAE,CAAGF,IAAI,CACXL,WAAW,CAAC,CAAEQ,MAAM,CAAEP,eAAe,CAAC,CAAD,CAAfA,CAAqBI,IAA/B,CAAD,CADA,CAEX,UAFJ,CAGA,GAAMI,YAAW,CAAGP,IAAI,CAAC,UAAD,CAAa,OAAb,CAAJA,CAA0BI,cAA1BJ,CAApB,CACA,MAAO,CACLK,EADK,CACLA,EADK,CAELE,WAFK,CAELA,WAFK,CAGLC,QAAQ,CAAE,UAHL,CAILC,cAAc,CAAE,QAJX,CAKLC,UAAU,CAAE,QALP,CAMLC,YAAY,CAAE,MANT,CAOLC,KAAK,CAAE,CACLC,UAAU,CAAE,GADP,CAPF,CAULC,MAAM,CAAE,CACNH,YAAY,CAAE,MADR,CAENI,GAAG,CAAE,IAFC,CAGNC,IAAI,CAAE,CACJH,UAAU,CAAE,GADR,CAHA,CAMNI,KAAK,CAAE,CACLC,MAAM,CAAE,MADH,CAELC,KAAK,CAAE,MAFF,CAND,CAVH,CAAP,CANF,EA8BA,QAASC,QAAT,CAAiBC,IAAjB,CAA4BC,QAA5B,CAA8C,CAC5C,MAAO,CACLH,KAAK,CAAEE,IADF,CAELH,MAAM,CAAEG,IAFH,CAGLT,KAAK,CAAE,CACLU,QAAQ,CAAEA,QADL,CAHF,CAAP,CAOD,CAED,GAAMC,MAAK,CAAG,CACZ,KAAMH,OAAO,CAAC,GAAD,CAAM,KAAN,CADD,CAEZ,KAAMA,OAAO,CAAC,GAAD,CAAM,IAAN,CAFD,CAGZ,KAAMA,OAAO,CAAC,IAAD,CAAO,IAAP,CAHD,CAIZ,KAAMA,OAAO,CAAC,IAAD,CAAO,IAAP,CAJD,CAKZ,KAAMA,OAAO,CAAC,IAAD,CAAO,KAAP,CALD,CAMZ,MAAOA,OAAO,CAAC,IAAD,CAAO,KAAP,CANF,CAAd,CASA,GAAMI,aAAY,CAAG,CACnBH,IAAI,CAAE,IADa,CAArB,CAIA,cAAe,CACbpB,SADa,CACbA,SADa,CAEbsB,KAFa,CAEbA,KAFa,CAGbC,yBAHa,CAAf","names":["randomColor","getRandomString","mode","baseStyle","props","name","colorModeProps","bg","string","borderColor","position","justifyContent","alignItems","borderRadius","_text","fontWeight","_image","alt","_alt","style","height","width","getSize","size","fontSize","sizes","defaultProps"],"sources":["avatar.ts"],"sourcesContent":["import { randomColor, getRandomString, mode } from '../tools';\n\nconst baseStyle = (props: Record<string, any>) => {\n  const { name, ...colorModeProps } = props;\n  const bg = name\n    ? randomColor({ string: getRandomString(5) + name })\n    : 'gray.400';\n  const borderColor = mode('gray.800', 'white')(colorModeProps);\n  return {\n    bg,\n    borderColor,\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 'full',\n    _text: {\n      fontWeight: 600,\n    },\n    _image: {\n      borderRadius: 'full',\n      alt: '--',\n      _alt: {\n        fontWeight: 600,\n      },\n      style: {\n        height: '100%',\n        width: '100%',\n      },\n    },\n  };\n};\n\nfunction getSize(size: any, fontSize: string) {\n  return {\n    width: size,\n    height: size,\n    _text: {\n      fontSize: fontSize,\n    },\n  };\n}\n\nconst sizes = {\n  'xs': getSize('6', '2xs'),\n  'sm': getSize('8', 'xs'),\n  'md': getSize('12', 'md'),\n  'lg': getSize('16', 'xl'),\n  'xl': getSize('24', '3xl'),\n  '2xl': getSize('32', '5xl'),\n};\n\nconst defaultProps = {\n  size: 'md',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}