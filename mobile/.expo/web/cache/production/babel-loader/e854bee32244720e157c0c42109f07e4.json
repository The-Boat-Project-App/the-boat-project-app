{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useNormalizedUrl;var _DocumentMetadataProvider=require(\"../context/DocumentMetadataProvider\");var _normalizeResourceLocator=_interopRequireDefault(require(\"../helpers/normalizeResourceLocator\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function useNormalizedUrl(initialUrl){var _ref=(0,_DocumentMetadataProvider.useDocumentMetadata)(),baseUrl=_ref.baseUrl;return(0,_normalizeResourceLocator.default)(initialUrl,baseUrl);}","map":{"version":3,"mappings":"uGAAA,6EACA,wLAgBe,QAASA,iBAAT,CAA0BC,UAA1B,CAA8C,CAC3D,SAAoB,mDAApB,CAAQC,OAAR,MAAQA,OAAR,CACA,MAAO,sCAAyBD,UAAzB,CAAqCC,OAArC,CAAP,CACD","names":["useNormalizedUrl","initialUrl","baseUrl"],"sources":["useNormalizedUrl.ts"],"sourcesContent":["import { useDocumentMetadata } from '../context/DocumentMetadataProvider';\nimport normalizeResourceLocator from '../helpers/normalizeResourceLocator';\n\n/**\n * This hook transforms relative and protocol-relative URLs to absolute URLs as\n * per {@link https://tools.ietf.org/html/rfc1808 | RFC1808}. The base URL is\n * determined by the `<base />` element, `source.uri` or `source.baseUrl`.\n *\n * @remarks\n * - If there is no `baseUrl` and the initial URL is relative, this hook will\n *   return the initial URL.\n * - If the initial URL is absolute, this hook will return this initial URL.\n *\n * @param initialUrl - The URL before normalization.\n *\n * @public\n */\nexport default function useNormalizedUrl(initialUrl: string) {\n  const { baseUrl } = useDocumentMetadata();\n  return normalizeResourceLocator(initialUrl, baseUrl);\n}\n"]},"metadata":{},"sourceType":"script"}