{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{StatusBar}from'expo-status-bar';import RootNavigator from\"./navigation\";import{ApolloClient,InMemoryCache,ApolloProvider,createHttpLink}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import LogBox from\"react-native-web/dist/exports/LogBox\";LogBox.ignoreAllLogs();import{NativeBaseProvider}from'native-base';import{useFonts,Raleway_400Regular,Raleway_300Light,Raleway_500Medium,Raleway_600SemiBold,Raleway_700Bold}from'@expo-google-fonts/raleway';import{getAccessToken}from'accessToken';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var httpLink=createHttpLink({uri:\"http://192.168.1.86:3333\"+\"/graphql\"});var authLink=setContext(function(){var _ref2=_asyncToGenerator(function*(_,_ref){var headers=_ref.headers;var accessToken=yield getAccessToken();console.log('accessToken dans App.tsx',accessToken);return{headers:_objectSpread(_objectSpread({},headers),{},{authorization:accessToken?\"Bearer \"+accessToken:''})};});return function(_x,_x2){return _ref2.apply(this,arguments);};}());var cache=new InMemoryCache();var client=new ApolloClient({link:authLink.concat(httpLink),cache:cache,credentials:'include'});var _useFonts=useFonts({Raleway_400Regular:Raleway_400Regular,Raleway_300Light:Raleway_300Light,Raleway_500Medium:Raleway_500Medium,Raleway_600SemiBold:Raleway_600SemiBold,Raleway_700Bold:Raleway_700Bold}),_useFonts2=_slicedToArray(_useFonts,1),fontsLoaded=_useFonts2[0];if(fontsLoaded){return _jsx(ApolloProvider,{client:client,children:_jsxs(NativeBaseProvider,{children:[_jsx(RootNavigator,{}),_jsx(StatusBar,{style:\"auto\"})]})});}}","map":{"version":3,"names":["StatusBar","RootNavigator","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","LogBox","ignoreAllLogs","NativeBaseProvider","useFonts","Raleway_400Regular","Raleway_300Light","Raleway_500Medium","Raleway_600SemiBold","Raleway_700Bold","getAccessToken","App","httpLink","uri","authLink","_","headers","accessToken","console","log","authorization","cache","client","link","concat","credentials","fontsLoaded"],"sources":["/Users/matthieu/Documents/boatproject/mobile/App.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { StatusBar } from 'expo-status-bar'\nimport RootNavigator from './navigation'\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client'\nimport { setContext } from '@apollo/client/link/context'\nimport { LogBox } from 'react-native'\nLogBox.ignoreAllLogs()\nimport { NativeBaseProvider } from 'native-base'\nimport {\n  useFonts,\n  Raleway_400Regular,\n  Raleway_300Light,\n  Raleway_500Medium,\n  Raleway_600SemiBold,\n  Raleway_700Bold,\n} from '@expo-google-fonts/raleway'\n\nimport { getAccessToken } from 'accessToken'\n\nexport default function App() {\n  // Initialize Apollo Client\n  const httpLink = createHttpLink({\n    uri: `${process.env.API_URL}/graphql`,\n  })\n  //* On passe l'accesstoken dans les headers\n  const authLink = setContext(async (_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const accessToken = await getAccessToken()\n    console.log('accessToken dans App.tsx', accessToken)\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: accessToken ? `Bearer ${accessToken}` : '',\n      },\n    }\n  })\n  const cache = new InMemoryCache()\n  const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: cache,\n    credentials: 'include',\n  })\n\n  let [fontsLoaded] = useFonts({\n    Raleway_400Regular,\n    Raleway_300Light,\n    Raleway_500Medium,\n    Raleway_600SemiBold,\n    Raleway_700Bold,\n  })\n  if (fontsLoaded) {\n    return (\n      <ApolloProvider client={client}>\n        <NativeBaseProvider>\n          <RootNavigator />\n          <StatusBar style='auto' />\n        </NativeBaseProvider>\n      </ApolloProvider>\n    )\n  }\n}\n"],"mappings":"g9BACA,OAASA,SAAT,KAA0B,iBAA1B,CACA,MAAOC,cAAP,oBACA,OAASC,YAAT,CAAuBC,aAAvB,CAAsCC,cAAtC,CAAsDC,cAAtD,KAA4E,gBAA5E,CACA,OAASC,UAAT,KAA2B,6BAA3B,C,yDAEAC,MAAM,CAACC,aAAP,GACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,OACEC,QADF,CAEEC,kBAFF,CAGEC,gBAHF,CAIEC,iBAJF,CAKEC,mBALF,CAMEC,eANF,KAOO,4BAPP,CASA,OAASC,cAAT,KAA+B,aAA/B,C,wFAEA,cAAe,SAASC,IAAT,EAAe,CAE5B,GAAMC,SAAQ,CAAGb,cAAc,CAAC,CAC9Bc,GAAG,sCAD2B,CAAD,CAA/B,CAIA,GAAMC,SAAQ,CAAGd,UAAU,wCAAC,UAAOe,CAAP,MAA0B,IAAdC,QAAc,MAAdA,OAAc,CAEpD,GAAMC,YAAW,MAASP,eAAc,EAAxC,CACAQ,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCF,WAAxC,EAEA,MAAO,CACLD,OAAO,gCACFA,OADE,MAELI,aAAa,CAAEH,WAAW,WAAaA,WAAb,CAA6B,EAFlD,EADF,CAAP,CAMD,CAX0B,mEAA3B,CAYA,GAAMI,MAAK,CAAG,GAAIxB,cAAJ,EAAd,CACA,GAAMyB,OAAM,CAAG,GAAI1B,aAAJ,CAAiB,CAC9B2B,IAAI,CAAET,QAAQ,CAACU,MAAT,CAAgBZ,QAAhB,CADwB,CAE9BS,KAAK,CAAEA,KAFuB,CAG9BI,WAAW,CAAE,SAHiB,CAAjB,CAAf,CAMA,cAAoBrB,QAAQ,CAAC,CAC3BC,kBAAkB,CAAlBA,kBAD2B,CAE3BC,gBAAgB,CAAhBA,gBAF2B,CAG3BC,iBAAiB,CAAjBA,iBAH2B,CAI3BC,mBAAmB,CAAnBA,mBAJ2B,CAK3BC,eAAe,CAAfA,eAL2B,CAAD,CAA5B,wCAAKiB,WAAL,eAOA,GAAIA,WAAJ,CAAiB,CACf,MACE,MAAC,cAAD,EAAgB,MAAM,CAAEJ,MAAxB,UACE,MAAC,kBAAD,YACE,KAAC,aAAD,IADF,CAEE,KAAC,SAAD,EAAW,KAAK,CAAC,MAAjB,EAFF,GADF,EADF,CAQD,CACF"},"metadata":{},"sourceType":"module"}