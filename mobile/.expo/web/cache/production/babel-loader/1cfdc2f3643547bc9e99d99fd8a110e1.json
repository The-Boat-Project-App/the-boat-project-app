{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"_current\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import{Icon}from\"../../primitives/Icon\";import{BreadcrumbItemContext}from\"./Context\";import{usePropsResolution}from\"../../../hooks/useThemeProps/usePropsResolution\";var BreadcrumbIcon=function BreadcrumbIcon(props,ref){var _React$useContext=React.useContext(BreadcrumbItemContext),isCurrent=_React$useContext.isCurrent;var _usePropsResolution=usePropsResolution('BreadcrumbIcon',props),children=_usePropsResolution.children,_current=_usePropsResolution._current,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded);return React.createElement(Icon,_extends({ref:ref},isCurrent&&_current,resolvedProps),children);};export default memo(forwardRef(BreadcrumbIcon));","map":{"version":3,"mappings":"kZAAA,MAAOA,MAAP,EAAgBC,UAAhB,CAA4BC,IAA5B,KAAwC,OAAxC,CACA,OAASC,IAAT,6BAEA,OAASC,qBAAT,iBACA,OAASC,kBAAT,uDAGA,GAAMC,eAAc,CAAG,QAAjBA,eAAiB,CAACC,KAAD,CAA8BC,GAA9B,CAA4C,CACjE,sBAA8CR,KAAK,CAACS,UAANT,CAC5CI,qBAD4CJ,CAA9C,CAAQU,SAAR,mBAAQA,SAAR,CAIA,wBAA+CL,kBAAkB,CAC/D,gBAD+D,CAE/DE,KAF+D,CAAjE,CAAMI,QAAN,qBAAMA,QAAN,CAAgBC,QAAhB,qBAAgBA,QAAhB,CAA6BC,aAA7B,yDAIA,MACEb,qBAACG,IAAD,WAAMK,GAAG,CAAEA,GAAX,EAAqBE,SAAS,EAAIE,QAAlC,CAAiDC,aAAjD,EACGF,QADH,CADF,CATF,EAgBA,cAAeT,KAAI,CAACD,UAAU,CAACK,cAAD,CAAX,CAAnB","names":["React","forwardRef","memo","Icon","BreadcrumbItemContext","usePropsResolution","BreadcrumbIcon","props","ref","useContext","isCurrent","children","_current","resolvedProps"],"sources":["BreadcrumbIcon.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Icon } from '../../primitives/Icon';\nimport type { IBreadcrumbItemContext, IBreadcrumbIconProps } from './types';\nimport { BreadcrumbItemContext } from './Context';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\n\n// Add breadcrumbIcon as child of breadcrumbItem for implementaion of isCurrent prop\nconst BreadcrumbIcon = (props: IBreadcrumbIconProps, ref?: any) => {\n  const { isCurrent }: IBreadcrumbItemContext = React.useContext(\n    BreadcrumbItemContext\n  );\n\n  let { children, _current, ...resolvedProps } = usePropsResolution(\n    'BreadcrumbIcon',\n    props\n  );\n  return (\n    <Icon ref={ref} {...(isCurrent && _current)} {...resolvedProps}>\n      {children}\n    </Icon>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbIcon));\n"]},"metadata":{},"sourceType":"module"}