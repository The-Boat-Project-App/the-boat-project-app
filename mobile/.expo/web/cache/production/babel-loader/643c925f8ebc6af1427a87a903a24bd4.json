{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _lookupRecord=_interopRequireDefault(require(\"../helpers/lookupRecord\"));var _BRRenderer=_interopRequireDefault(require(\"../renderers/BRRenderer\"));var _WBRRenderer=_interopRequireDefault(require(\"../renderers/WBRRenderer\"));var _internalRenderers=_interopRequireDefault(require(\"./internalRenderers\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var internalTextRenderers={br:_BRRenderer.default,wbr:_WBRRenderer.default};var RenderRegistry=function(){function RenderRegistry(){var customRenderers=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var elementModels=arguments.length>1?arguments[1]:undefined;_classCallCheck(this,RenderRegistry);_defineProperty(this,\"customRenderers\",{});_defineProperty(this,\"elementModels\",void 0);this.customRenderers=customRenderers;this.elementModels=elementModels;}_createClass(RenderRegistry,[{key:\"getCustomRendererForTNode\",value:function getCustomRendererForTNode(tnode){if(tnode.tagName in this.customRenderers){var renderer=this.customRenderers[tnode.tagName];if(typeof __DEV__==='boolean'&&__DEV__){var elementModel=this.elementModels[tnode.tagName];if(!elementModel){console.warn(\"You are attempting to render a \"+tnode.tagName+\" tag but you didn't provide an HTMLElementModel. Make sure you register a model for this tag in \\\"customHTMLElementModels\\\" prop. \");}else if(!tnode.matchContentModel(elementModel.contentModel)){console.warn(\"You are attempting to render \\\"\"+tnode.tagName+\"\\\" of type \\\"\"+tnode.displayName+\"\\\", but the registered renderer is of content model type \"+(elementModel===null||elementModel===void 0?void 0:elementModel.contentModel)+\" which is incompatible with \\\"\"+tnode.displayName+\"\\\".\");}}return renderer;}return null;}},{key:\"getDefaultRendererForTNode\",value:function getDefaultRendererForTNode(tnode){if(tnode.tagName in _internalRenderers.default){return _internalRenderers.default[tnode.tagName];}return null;}},{key:\"getInternalTextRenderer\",value:function getInternalTextRenderer(tagName){if((0,_lookupRecord.default)(internalTextRenderers,tagName)){return internalTextRenderers[tagName];}return null;}},{key:\"getRendererConfigForTNode\",value:function getRendererConfigForTNode(tnode){return{Custom:this.getCustomRendererForTNode(tnode),Default:this.getDefaultRendererForTNode(tnode)};}}]);return RenderRegistry;}();exports.default=RenderRegistry;","map":{"version":3,"mappings":"iOAGA,6EACA,2EACA,6EAMA,uVAMA,GAAMA,sBAAkE,CAAG,CACzEC,EAAE,CAAEC,mBADqE,CAEzEC,GAAG,CAAEC,oBAFoE,CAA3E,C,GAUqBC,e,YACnBC,yBAGE,IAFAC,gBAEA,2DAF2C,EAE3C,IADAC,cACA,uHAK0D,EAL1D,+CACA,KAAKD,eAAL,CAAuBA,eAAvB,CACA,KAAKC,aAAL,CAAqBA,aAArB,CACD,C,oEAKOC,mCACNC,KADMD,CAEwC,CAC9C,GAAIC,KAAK,CAACC,OAAND,GAAkB,MAAKH,eAA3B,CAA4C,CAC1C,GAAMK,SAAQ,CAAG,KAAKL,eAAL,CAAqBG,KAAK,CAACC,OAA3B,CAAjB,CAEA,GAAI,MAAOE,QAAP,GAAmB,SAAnB,EAAgCA,OAApC,CAA6C,CAE3C,GAAMC,aAAY,CAAG,KAAKN,aAAL,CAAmBE,KAAK,CAACC,OAAzB,CAArB,CACA,GAAI,CAACG,YAAL,CAAmB,CACjBC,OAAO,CAACC,IAARD,mCACoCL,KAAK,CAACC,OAD1CI,uIADF,KAIO,IAAI,CAACL,KAAK,CAACO,iBAANP,CAAwBI,YAAY,CAACI,YAArCR,CAAL,CAAyD,CAC9DK,OAAO,CAACC,IAARD,mCACmCL,KAAK,CAACC,OADzCI,iBAC8DL,KAAK,CAACS,WADpEJ,8DAC0ID,YAAxI,OAAwIA,cAAxI,SAAwIA,CAAxI,MAAwIA,aAAY,CAAEI,YADxJH,mCACoML,KAAK,CAACS,WAD1MJ,QAGD,CACF,CACD,MAAOH,SAAP,CACD,CACD,MAAO,KAAP,CACD,C,0CAEOQ,oCACNV,KADMU,CAEsB,CAC5B,GAAIV,KAAK,CAACC,OAAND,GAAkBW,2BAAtB,CAAyC,CAEvC,MAAOA,4BAAkBX,KAAK,CAACC,OAAxBU,CAAP,CACD,CACD,MAAO,KAAP,CACD,C,uCAEDC,iCAAwBX,OAAxBW,CAAgD,CAC9C,GAAI,0BAAatB,qBAAb,CAAoCW,OAApC,CAAJ,CAAkD,CAChD,MAAOX,sBAAqB,CAACW,OAAD,CAA5B,CACD,CACD,MAAO,KAAP,CACD,C,yCAEDY,mCAA2Cb,KAA3Ca,CAAwE,CACtE,MAAO,CACLC,MAAM,CAAE,KAAKf,yBAAL,CAA+BC,KAA/B,CADH,CAELe,OAAO,CAAE,KAAKL,0BAAL,CAAgCV,KAAhC,CAFJ,CAAP,CAID,C","names":["internalTextRenderers","br","BRRenderer","wbr","WBRRenderer","RenderRegistry","constructor","customRenderers","elementModels","getCustomRendererForTNode","tnode","tagName","renderer","__DEV__","elementModel","console","warn","matchContentModel","contentModel","displayName","getDefaultRendererForTNode","internalRenderers","getInternalTextRenderer","getRendererConfigForTNode","Custom","Default"],"sources":["RenderRegistry.ts"],"sourcesContent":["import { TNode } from '@native-html/transient-render-engine';\nimport { ComponentType } from 'react';\nimport { CustomRendererProps } from '..';\nimport lookupRecord from '../helpers/lookupRecord';\nimport BRRenderer from '../renderers/BRRenderer';\nimport WBRRenderer from '../renderers/WBRRenderer';\nimport {\n  CustomRenderer,\n  HTMLElementModelRecord,\n  InternalRenderer\n} from '../shared-types';\nimport internalRenderers from './internalRenderers';\nimport {\n  CustomTagRendererRecord,\n  InternalTextContentRenderer\n} from './render-types';\n\nconst internalTextRenderers: Record<string, InternalTextContentRenderer> = {\n  br: BRRenderer,\n  wbr: WBRRenderer\n};\n\nexport interface RendererConfig<T extends TNode> {\n  Custom: CustomRenderer<T> | null;\n  Default: InternalRenderer<T> | null;\n}\n\nexport default class RenderRegistry {\n  constructor(\n    customRenderers: CustomTagRendererRecord = {},\n    elementModels: HTMLElementModelRecord\n  ) {\n    this.customRenderers = customRenderers;\n    this.elementModels = elementModels;\n  }\n\n  private readonly customRenderers: CustomTagRendererRecord = {};\n  private readonly elementModels: HTMLElementModelRecord;\n\n  private getCustomRendererForTNode<T extends TNode>(\n    tnode: T\n  ): ComponentType<CustomRendererProps<T>> | null {\n    if (tnode.tagName! in this.customRenderers) {\n      const renderer = this.customRenderers[tnode.tagName!];\n      /* istanbul ignore next */\n      if (typeof __DEV__ === 'boolean' && __DEV__) {\n        // In DEV, check for discrepancies.\n        const elementModel = this.elementModels[tnode.tagName!];\n        if (!elementModel) {\n          console.warn(\n            `You are attempting to render a ${tnode.tagName!} tag but you didn't provide an HTMLElementModel. Make sure you register a model for this tag in \"customHTMLElementModels\" prop. `\n          );\n        } else if (!tnode.matchContentModel(elementModel.contentModel)) {\n          console.warn(\n            `You are attempting to render \"${tnode.tagName}\" of type \"${tnode.displayName}\", but the registered renderer is of content model type ${elementModel?.contentModel} which is incompatible with \"${tnode.displayName}\".`\n          );\n        }\n      }\n      return renderer as any;\n    }\n    return null;\n  }\n\n  private getDefaultRendererForTNode<T extends TNode>(\n    tnode: T\n  ): InternalRenderer<T> | null {\n    if (tnode.tagName! in internalRenderers) {\n      //@ts-expect-error we know that the tagName is in the map\n      return internalRenderers[tnode.tagName!];\n    }\n    return null;\n  }\n\n  getInternalTextRenderer(tagName: string | null) {\n    if (lookupRecord(internalTextRenderers, tagName)) {\n      return internalTextRenderers[tagName];\n    }\n    return null;\n  }\n\n  getRendererConfigForTNode<T extends TNode>(tnode: T): RendererConfig<T> {\n    return {\n      Custom: this.getCustomRendererForTNode(tnode),\n      Default: this.getDefaultRendererForTNode(tnode)\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"script"}