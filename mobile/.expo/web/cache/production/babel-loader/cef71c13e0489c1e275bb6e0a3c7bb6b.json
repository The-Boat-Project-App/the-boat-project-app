{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _useIMGElementState=_interopRequireDefault(require(\"./useIMGElementState\"));var _IMGElementContentSuccess=_interopRequireDefault(require(\"./IMGElementContentSuccess\"));var _IMGElementContainer=_interopRequireDefault(require(\"./IMGElementContainer\"));var _IMGElementContentLoading=_interopRequireDefault(require(\"./IMGElementContentLoading\"));var _IMGElementContentError=_interopRequireDefault(require(\"./IMGElementContentError\"));var _defaultInitialImageDimensions=_interopRequireDefault(require(\"./defaultInitialImageDimensions\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function identity(arg){return arg;}function IMGElement(props){var state=(0,_useIMGElementState.default)(props);var content;if(state.type==='success'){content=_react.default.createElement(_IMGElementContentSuccess.default,state);}else if(state.type==='loading'){content=_react.default.createElement(_IMGElementContentLoading.default,state);}else{content=_react.default.createElement(_IMGElementContentError.default,state);}return _react.default.createElement(_IMGElementContainer.default,_extends({testID:props.testID},props.containerProps,{onPress:props.onPress,style:state.containerStyle}),content);}var imgDimensionsType=_propTypes.default.shape({width:_propTypes.default.number,height:_propTypes.default.number});var propTypes={source:_propTypes.default.object.isRequired,alt:_propTypes.default.string,altColor:_propTypes.default.string,height:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]),width:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]),style:_propTypes.default.oneOfType([_propTypes.default.object,_propTypes.default.array]),computeMaxWidth:_propTypes.default.func.isRequired,contentWidth:_propTypes.default.number,enableExperimentalPercentWidth:_propTypes.default.bool,initialDimensions:imgDimensionsType,onPress:_propTypes.default.func,testID:_propTypes.default.string,objectFit:_propTypes.default.string,cachedNaturalDimensions:imgDimensionsType,containerProps:_propTypes.default.object};IMGElement.propTypes=propTypes;IMGElement.defaultProps={enableExperimentalPercentWidth:false,computeMaxWidth:identity,imagesInitialDimensions:_defaultInitialImageDimensions.default,style:{}};var _default=IMGElement;exports.default=_default;","map":{"version":3,"mappings":"6FAAA,oDACA,6DACA,gFACA,4FACA,kFACA,4FACA,wFAEA,gdAIA,QAASA,SAAT,CAAkBC,GAAlB,CAA4B,CAC1B,MAAOA,IAAP,CACD,CAWD,QAASC,WAAT,CAAoBC,KAApB,CAA0D,CACxD,GAAMC,MAAK,CAAG,gCAAmBD,KAAnB,CAAd,CACA,GAAIE,QAAJ,CACA,GAAID,KAAK,CAACE,IAANF,GAAe,SAAnB,CAA8B,CAC5BC,OAAO,CAAGE,eAAMC,aAAND,CAAoBE,iCAApBF,CAA8CH,KAA9CG,CAAVF,CADF,KAEO,IAAID,KAAK,CAACE,IAANF,GAAe,SAAnB,CAA8B,CACnCC,OAAO,CAAGE,eAAMC,aAAND,CAAoBG,iCAApBH,CAA8CH,KAA9CG,CAAVF,CADK,KAEA,CACLA,OAAO,CAAGE,eAAMC,aAAND,CAAoBI,+BAApBJ,CAA4CH,KAA5CG,CAAVF,CACD,CACD,MACEO,8BAACC,4BAAD,WACEC,MAAM,CAAEX,KAAK,CAACW,MADhB,EAEMX,KAAK,CAACY,cAFZ,EAGEC,OAAO,CAAEb,KAAK,CAACa,OAHjB,CAIEC,KAAK,CAAEb,KAAK,CAACc,cAJf,GAKGb,OALH,CADF,CASD,CAED,GAAMc,kBAAiB,CAAGC,mBAAUC,KAAVD,CAAgB,CACxCE,KAAK,CAAEF,mBAAUG,MADuB,CAExCC,MAAM,CAAEJ,mBAAUG,MAFsB,CAAhBH,CAA1B,CAKA,GAAMK,UAA6C,CAAG,CACpDC,MAAM,CAAEN,mBAAUO,MAAVP,CAAiBQ,UAD2B,CAEpDC,GAAG,CAAET,mBAAUU,MAFqC,CAGpDC,QAAQ,CAAEX,mBAAUU,MAHgC,CAIpDN,MAAM,CAAEJ,mBAAUY,SAAVZ,CAAoB,CAACA,mBAAUU,MAAX,CAAmBV,mBAAUG,MAA7B,CAApBH,CAJ4C,CAKpDE,KAAK,CAAEF,mBAAUY,SAAVZ,CAAoB,CAACA,mBAAUU,MAAX,CAAmBV,mBAAUG,MAA7B,CAApBH,CAL6C,CAMpDH,KAAK,CAAEG,mBAAUY,SAAVZ,CAAoB,CAACA,mBAAUO,MAAX,CAAmBP,mBAAUa,KAA7B,CAApBb,CAN6C,CAOpDc,eAAe,CAAEd,mBAAUe,IAAVf,CAAeQ,UAPoB,CAQpDQ,YAAY,CAAEhB,mBAAUG,MAR4B,CASpDc,8BAA8B,CAAEjB,mBAAUkB,IATU,CAUpDC,iBAAiB,CAAEpB,iBAViC,CAWpDH,OAAO,CAAEI,mBAAUe,IAXiC,CAYpDrB,MAAM,CAAEM,mBAAUU,MAZkC,CAapDU,SAAS,CAAEpB,mBAAUU,MAb+B,CAcpDW,uBAAuB,CAAEtB,iBAd2B,CAepDJ,cAAc,CAAEK,mBAAUO,MAf0B,CAAtD,CAqBAzB,UAAU,CAACuB,SAAXvB,CAAuBuB,SAAvBvB,CAKAA,UAAU,CAACwC,YAAXxC,CAA0B,CACxBmC,8BAA8B,CAAE,KADR,CAExBH,eAAe,CAAElC,QAFO,CAGxB2C,uBAAuB,CAAEC,sCAHD,CAIxB3B,KAAK,CAAE,EAJiB,CAA1Bf,cAOeA","names":["identity","arg","IMGElement","props","state","content","type","React","createElement","IMGElementContentSuccess","IMGElementContentLoading","IMGElementContentError","_react","_IMGElementContainer","testID","containerProps","onPress","style","containerStyle","imgDimensionsType","PropTypes","shape","width","number","height","propTypes","source","object","isRequired","alt","string","altColor","oneOfType","array","computeMaxWidth","func","contentWidth","enableExperimentalPercentWidth","bool","initialDimensions","objectFit","cachedNaturalDimensions","defaultProps","imagesInitialDimensions","defaultImageInitialDimensions"],"sources":["IMGElement.tsx"],"sourcesContent":["import React, { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport useIMGElementState from './useIMGElementState';\nimport IMGElementContentSuccess from './IMGElementContentSuccess';\nimport IMGElementContainer from './IMGElementContainer';\nimport IMGElementContentLoading from './IMGElementContentLoading';\nimport IMGElementContentError from './IMGElementContentError';\nimport type { IMGElementProps } from './img-types';\nimport defaultImageInitialDimensions from './defaultInitialImageDimensions';\n\nexport type { IMGElementProps } from './img-types';\n\nfunction identity(arg: any) {\n  return arg;\n}\n\n/**\n * A component to render images based on an internal loading state.\n *\n * @remarks This component will attempt to draw a box of paint dimensions\n * before retrieving the physical dimensions of the image to avoid layout\n * shifts. See also {@link useIMGElementState}, {@link IMGElementContainer},\n * {@link IMGElementContentSuccess}, {@link IMGElementContentLoading}\n * and {@link IMGElementContentError} for customization.\n */\nfunction IMGElement(props: IMGElementProps): ReactElement {\n  const state = useIMGElementState(props);\n  let content: ReactNode;\n  if (state.type === 'success') {\n    content = React.createElement(IMGElementContentSuccess, state);\n  } else if (state.type === 'loading') {\n    content = React.createElement(IMGElementContentLoading, state);\n  } else {\n    content = React.createElement(IMGElementContentError, state);\n  }\n  return (\n    <IMGElementContainer\n      testID={props.testID}\n      {...props.containerProps}\n      onPress={props.onPress}\n      style={state.containerStyle}>\n      {content}\n    </IMGElementContainer>\n  );\n}\n\nconst imgDimensionsType = PropTypes.shape({\n  width: PropTypes.number,\n  height: PropTypes.number\n});\n\nconst propTypes: Record<keyof IMGElementProps, any> = {\n  source: PropTypes.object.isRequired,\n  alt: PropTypes.string,\n  altColor: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  computeMaxWidth: PropTypes.func.isRequired,\n  contentWidth: PropTypes.number,\n  enableExperimentalPercentWidth: PropTypes.bool,\n  initialDimensions: imgDimensionsType,\n  onPress: PropTypes.func,\n  testID: PropTypes.string,\n  objectFit: PropTypes.string,\n  cachedNaturalDimensions: imgDimensionsType,\n  containerProps: PropTypes.object\n};\n\n/**\n * @ignore\n */\nIMGElement.propTypes = propTypes;\n\n/**\n * @ignore\n */\nIMGElement.defaultProps = {\n  enableExperimentalPercentWidth: false,\n  computeMaxWidth: identity,\n  imagesInitialDimensions: defaultImageInitialDimensions,\n  style: {}\n};\n\nexport default IMGElement;\n"]},"metadata":{},"sourceType":"script"}