{"ast":null,"code":"import createResponderEvent from\"./createResponderEvent\";import{isCancelish,isEndish,isMoveish,isScroll,isSelectionChange,isStartish}from\"./ResponderEventTypes\";import{getLowestCommonAncestor,getResponderPaths,hasTargetTouches,hasValidSelection,isPrimaryPointerDown,setResponderId}from\"./utils\";import{ResponderTouchHistoryStore}from\"./ResponderTouchHistoryStore\";import canUseDOM from\"../canUseDom\";var emptyObject={};var startRegistration=['onStartShouldSetResponderCapture','onStartShouldSetResponder',{bubbles:true}];var moveRegistration=['onMoveShouldSetResponderCapture','onMoveShouldSetResponder',{bubbles:true}];var scrollRegistration=['onScrollShouldSetResponderCapture','onScrollShouldSetResponder',{bubbles:false}];var shouldSetResponderEvents={touchstart:startRegistration,mousedown:startRegistration,touchmove:moveRegistration,mousemove:moveRegistration,scroll:scrollRegistration};var emptyResponder={id:null,idPath:null,node:null};var responderListenersMap=new Map();var isEmulatingMouseEvents=false;var trackedTouchCount=0;var currentResponder={id:null,node:null,idPath:null};var responderTouchHistoryStore=new ResponderTouchHistoryStore();function changeCurrentResponder(responder){currentResponder=responder;}function getResponderConfig(id){var config=responderListenersMap.get(id);return config!=null?config:emptyObject;}function eventListener(domEvent){var eventType=domEvent.type;var eventTarget=domEvent.target;if(eventType==='touchstart'){isEmulatingMouseEvents=true;}if(eventType==='touchmove'||trackedTouchCount>1){isEmulatingMouseEvents=false;}if(eventType==='mousedown'&&isEmulatingMouseEvents||eventType==='mousemove'&&isEmulatingMouseEvents||eventType==='mousemove'&&trackedTouchCount<1){return;}if(isEmulatingMouseEvents&&eventType==='mouseup'){if(trackedTouchCount===0){isEmulatingMouseEvents=false;}return;}var isStartEvent=isStartish(eventType)&&isPrimaryPointerDown(domEvent);var isMoveEvent=isMoveish(eventType);var isEndEvent=isEndish(eventType);var isScrollEvent=isScroll(eventType);var isSelectionChangeEvent=isSelectionChange(eventType);var responderEvent=createResponderEvent(domEvent,responderTouchHistoryStore);if(isStartEvent||isMoveEvent||isEndEvent){if(domEvent.touches){trackedTouchCount=domEvent.touches.length;}else{if(isStartEvent){trackedTouchCount=1;}else if(isEndEvent){trackedTouchCount=0;}}responderTouchHistoryStore.recordTouchTrack(eventType,responderEvent.nativeEvent);}var eventPaths=getResponderPaths(domEvent);var wasNegotiated=false;var wantsResponder;if(isStartEvent||isMoveEvent||isScrollEvent&&trackedTouchCount>0){var currentResponderIdPath=currentResponder.idPath;var eventIdPath=eventPaths.idPath;if(currentResponderIdPath!=null&&eventIdPath!=null){var lowestCommonAncestor=getLowestCommonAncestor(currentResponderIdPath,eventIdPath);if(lowestCommonAncestor!=null){var indexOfLowestCommonAncestor=eventIdPath.indexOf(lowestCommonAncestor);var index=indexOfLowestCommonAncestor+(lowestCommonAncestor===currentResponder.id?1:0);eventPaths={idPath:eventIdPath.slice(index),nodePath:eventPaths.nodePath.slice(index)};}else{eventPaths=null;}}if(eventPaths!=null){wantsResponder=findWantsResponder(eventPaths,domEvent,responderEvent);if(wantsResponder!=null){attemptTransfer(responderEvent,wantsResponder);wasNegotiated=true;}}}if(currentResponder.id!=null&&currentResponder.node!=null){var _currentResponder=currentResponder,id=_currentResponder.id,node=_currentResponder.node;var _getResponderConfig=getResponderConfig(id),onResponderStart=_getResponderConfig.onResponderStart,onResponderMove=_getResponderConfig.onResponderMove,onResponderEnd=_getResponderConfig.onResponderEnd,onResponderRelease=_getResponderConfig.onResponderRelease,onResponderTerminate=_getResponderConfig.onResponderTerminate,onResponderTerminationRequest=_getResponderConfig.onResponderTerminationRequest;responderEvent.bubbles=false;responderEvent.cancelable=false;responderEvent.currentTarget=node;if(isStartEvent){if(onResponderStart!=null){responderEvent.dispatchConfig.registrationName='onResponderStart';onResponderStart(responderEvent);}}else if(isMoveEvent){if(onResponderMove!=null){responderEvent.dispatchConfig.registrationName='onResponderMove';onResponderMove(responderEvent);}}else{var isTerminateEvent=isCancelish(eventType)||eventType==='contextmenu'||eventType==='blur'&&eventTarget===window||eventType==='blur'&&eventTarget.contains(node)&&domEvent.relatedTarget!==node||isScrollEvent&&trackedTouchCount===0||isScrollEvent&&eventTarget.contains(node)&&eventTarget!==node||isSelectionChangeEvent&&hasValidSelection(domEvent);var isReleaseEvent=isEndEvent&&!isTerminateEvent&&!hasTargetTouches(node,domEvent.touches);if(isEndEvent){if(onResponderEnd!=null){responderEvent.dispatchConfig.registrationName='onResponderEnd';onResponderEnd(responderEvent);}}if(isReleaseEvent){if(onResponderRelease!=null){responderEvent.dispatchConfig.registrationName='onResponderRelease';onResponderRelease(responderEvent);}changeCurrentResponder(emptyResponder);}if(isTerminateEvent){var shouldTerminate=true;if(eventType==='contextmenu'||eventType==='scroll'||eventType==='selectionchange'){if(wasNegotiated){shouldTerminate=false;}else if(onResponderTerminationRequest!=null){responderEvent.dispatchConfig.registrationName='onResponderTerminationRequest';if(onResponderTerminationRequest(responderEvent)===false){shouldTerminate=false;}}}if(shouldTerminate){if(onResponderTerminate!=null){responderEvent.dispatchConfig.registrationName='onResponderTerminate';onResponderTerminate(responderEvent);}changeCurrentResponder(emptyResponder);isEmulatingMouseEvents=false;trackedTouchCount=0;}}}}}function findWantsResponder(eventPaths,domEvent,responderEvent){var shouldSetCallbacks=shouldSetResponderEvents[domEvent.type];if(shouldSetCallbacks!=null){var idPath=eventPaths.idPath,nodePath=eventPaths.nodePath;var shouldSetCallbackCaptureName=shouldSetCallbacks[0];var shouldSetCallbackBubbleName=shouldSetCallbacks[1];var bubbles=shouldSetCallbacks[2].bubbles;var check=function check(id,node,callbackName){var config=getResponderConfig(id);var shouldSetCallback=config[callbackName];if(shouldSetCallback!=null){responderEvent.currentTarget=node;if(shouldSetCallback(responderEvent)===true){var prunedIdPath=idPath.slice(idPath.indexOf(id));return{id:id,node:node,idPath:prunedIdPath};}}};for(var i=idPath.length-1;i>=0;i--){var id=idPath[i];var node=nodePath[i];var result=check(id,node,shouldSetCallbackCaptureName);if(result!=null){return result;}if(responderEvent.isPropagationStopped()===true){return;}}if(bubbles){for(var _i=0;_i<idPath.length;_i++){var _id=idPath[_i];var _node=nodePath[_i];var _result=check(_id,_node,shouldSetCallbackBubbleName);if(_result!=null){return _result;}if(responderEvent.isPropagationStopped()===true){return;}}}else{var _id2=idPath[0];var _node2=nodePath[0];var target=domEvent.target;if(target===_node2){return check(_id2,_node2,shouldSetCallbackBubbleName);}}}}function attemptTransfer(responderEvent,wantsResponder){var _currentResponder2=currentResponder,currentId=_currentResponder2.id,currentNode=_currentResponder2.node;var id=wantsResponder.id,node=wantsResponder.node;var _getResponderConfig2=getResponderConfig(id),onResponderGrant=_getResponderConfig2.onResponderGrant,onResponderReject=_getResponderConfig2.onResponderReject;responderEvent.bubbles=false;responderEvent.cancelable=false;responderEvent.currentTarget=node;if(currentId==null){if(onResponderGrant!=null){responderEvent.currentTarget=node;responderEvent.dispatchConfig.registrationName='onResponderGrant';onResponderGrant(responderEvent);}changeCurrentResponder(wantsResponder);}else{var _getResponderConfig3=getResponderConfig(currentId),onResponderTerminate=_getResponderConfig3.onResponderTerminate,onResponderTerminationRequest=_getResponderConfig3.onResponderTerminationRequest;var allowTransfer=true;if(onResponderTerminationRequest!=null){responderEvent.currentTarget=currentNode;responderEvent.dispatchConfig.registrationName='onResponderTerminationRequest';if(onResponderTerminationRequest(responderEvent)===false){allowTransfer=false;}}if(allowTransfer){if(onResponderTerminate!=null){responderEvent.currentTarget=currentNode;responderEvent.dispatchConfig.registrationName='onResponderTerminate';onResponderTerminate(responderEvent);}if(onResponderGrant!=null){responderEvent.currentTarget=node;responderEvent.dispatchConfig.registrationName='onResponderGrant';onResponderGrant(responderEvent);}changeCurrentResponder(wantsResponder);}else{if(onResponderReject!=null){responderEvent.currentTarget=node;responderEvent.dispatchConfig.registrationName='onResponderReject';onResponderReject(responderEvent);}}}}var documentEventsCapturePhase=['blur','scroll'];var documentEventsBubblePhase=['mousedown','mousemove','mouseup','dragstart','touchstart','touchmove','touchend','touchcancel','contextmenu','select','selectionchange'];export function attachListeners(){if(canUseDOM&&window.__reactResponderSystemActive==null){window.addEventListener('blur',eventListener);documentEventsBubblePhase.forEach(function(eventType){document.addEventListener(eventType,eventListener);});documentEventsCapturePhase.forEach(function(eventType){document.addEventListener(eventType,eventListener,true);});window.__reactResponderSystemActive=true;}}export function addNode(id,node,config){setResponderId(node,id);responderListenersMap.set(id,config);}export function removeNode(id){if(currentResponder.id===id){terminateResponder();}if(responderListenersMap.has(id)){responderListenersMap.delete(id);}}export function terminateResponder(){var _currentResponder3=currentResponder,id=_currentResponder3.id,node=_currentResponder3.node;if(id!=null&&node!=null){var _getResponderConfig4=getResponderConfig(id),onResponderTerminate=_getResponderConfig4.onResponderTerminate;if(onResponderTerminate!=null){var event=createResponderEvent({},responderTouchHistoryStore);event.currentTarget=node;onResponderTerminate(event);}changeCurrentResponder(emptyResponder);}isEmulatingMouseEvents=false;trackedTouchCount=0;}export function getResponderNode(){return currentResponder.node;}","map":{"version":3,"names":["createResponderEvent","isCancelish","isEndish","isMoveish","isScroll","isSelectionChange","isStartish","getLowestCommonAncestor","getResponderPaths","hasTargetTouches","hasValidSelection","isPrimaryPointerDown","setResponderId","ResponderTouchHistoryStore","canUseDOM","emptyObject","startRegistration","bubbles","moveRegistration","scrollRegistration","shouldSetResponderEvents","touchstart","mousedown","touchmove","mousemove","scroll","emptyResponder","id","idPath","node","responderListenersMap","Map","isEmulatingMouseEvents","trackedTouchCount","currentResponder","responderTouchHistoryStore","changeCurrentResponder","responder","getResponderConfig","config","get","eventListener","domEvent","eventType","type","eventTarget","target","isStartEvent","isMoveEvent","isEndEvent","isScrollEvent","isSelectionChangeEvent","responderEvent","touches","length","recordTouchTrack","nativeEvent","eventPaths","wasNegotiated","wantsResponder","currentResponderIdPath","eventIdPath","lowestCommonAncestor","indexOfLowestCommonAncestor","indexOf","index","slice","nodePath","findWantsResponder","attemptTransfer","_currentResponder","_getResponderConfig","onResponderStart","onResponderMove","onResponderEnd","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","cancelable","currentTarget","dispatchConfig","registrationName","isTerminateEvent","window","contains","relatedTarget","isReleaseEvent","shouldTerminate","shouldSetCallbacks","shouldSetCallbackCaptureName","shouldSetCallbackBubbleName","check","callbackName","shouldSetCallback","prunedIdPath","i","result","isPropagationStopped","_i","_id","_node","_result","_id2","_node2","_currentResponder2","currentId","currentNode","_getResponderConfig2","onResponderGrant","onResponderReject","_getResponderConfig3","allowTransfer","documentEventsCapturePhase","documentEventsBubblePhase","attachListeners","__reactResponderSystemActive","addEventListener","forEach","document","addNode","set","removeNode","terminateResponder","has","delete","_currentResponder3","_getResponderConfig4","event","getResponderNode"],"sources":["/Users/matthieu/Documents/boatproject/node_modules/react-native-web/dist/modules/useResponderEvents/ResponderSystem.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * RESPONDER EVENT SYSTEM\n *\n * A single, global \"interaction lock\" on views. For a view to be the \"responder\" means\n * that pointer interactions are exclusive to that view and none other. The \"interaction\n * lock\" can be transferred (only) to ancestors of the current \"responder\" as long as\n * pointers continue to be active.\n *\n * Responder being granted:\n *\n * A view can become the \"responder\" after the following events:\n *  * \"pointerdown\" (implemented using \"touchstart\", \"mousedown\")\n *  * \"pointermove\" (implemented using \"touchmove\", \"mousemove\")\n *  * \"scroll\" (while a pointer is down)\n *  * \"selectionchange\" (while a pointer is down)\n *\n * If nothing is already the \"responder\", the event propagates to (capture) and from\n * (bubble) the event target until a view returns `true` for\n * `on*ShouldSetResponder(Capture)`.\n *\n * If something is already the responder, the event propagates to (capture) and from\n * (bubble) the lowest common ancestor of the event target and the current \"responder\".\n * Then negotiation happens between the current \"responder\" and a view that wants to\n * become the \"responder\": see the timing diagram below.\n *\n * (NOTE: Scrolled views either automatically become the \"responder\" or release the\n * \"interaction lock\". A native scroll view that isn't built on top of the responder\n * system must result in the current \"responder\" being notified that it no longer has\n * the \"interaction lock\" - the native system has taken over.\n *\n * Responder being released:\n *\n * As soon as there are no more active pointers that *started* inside descendants\n * of the *current* \"responder\", an `onResponderRelease` event is dispatched to the\n * current \"responder\", and the responder lock is released.\n *\n * Typical sequence of events:\n *  * startShouldSetResponder\n *  * responderGrant/Reject\n *  * responderStart\n *  * responderMove\n *  * responderEnd\n *  * responderRelease\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +--------------+          |                            |\n     | onTouchStart |          |                            |\n     +------+-------+    none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->| onResponderStart (cur) |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | | onResponder            | |\n            +------------------->|    TerminationRequest  | |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | | onResponderTerminate   |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->| onResponderMove (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\nimport createResponderEvent from './createResponderEvent';\nimport { isCancelish, isEndish, isMoveish, isScroll, isSelectionChange, isStartish } from './ResponderEventTypes';\nimport { getLowestCommonAncestor, getResponderPaths, hasTargetTouches, hasValidSelection, isPrimaryPointerDown, setResponderId } from './utils';\nimport { ResponderTouchHistoryStore } from './ResponderTouchHistoryStore';\nimport canUseDOM from '../canUseDom';\n/* ------------ TYPES ------------ */\n\nvar emptyObject = {};\n/* ------------ IMPLEMENTATION ------------ */\n\nvar startRegistration = ['onStartShouldSetResponderCapture', 'onStartShouldSetResponder', {\n  bubbles: true\n}];\nvar moveRegistration = ['onMoveShouldSetResponderCapture', 'onMoveShouldSetResponder', {\n  bubbles: true\n}];\nvar scrollRegistration = ['onScrollShouldSetResponderCapture', 'onScrollShouldSetResponder', {\n  bubbles: false\n}];\nvar shouldSetResponderEvents = {\n  touchstart: startRegistration,\n  mousedown: startRegistration,\n  touchmove: moveRegistration,\n  mousemove: moveRegistration,\n  scroll: scrollRegistration\n};\nvar emptyResponder = {\n  id: null,\n  idPath: null,\n  node: null\n};\nvar responderListenersMap = new Map();\nvar isEmulatingMouseEvents = false;\nvar trackedTouchCount = 0;\nvar currentResponder = {\n  id: null,\n  node: null,\n  idPath: null\n};\nvar responderTouchHistoryStore = new ResponderTouchHistoryStore();\n\nfunction changeCurrentResponder(responder) {\n  currentResponder = responder;\n}\n\nfunction getResponderConfig(id) {\n  var config = responderListenersMap.get(id);\n  return config != null ? config : emptyObject;\n}\n/**\n * Process native events\n *\n * A single event listener is used to manage the responder system.\n * All pointers are tracked in the ResponderTouchHistoryStore. Native events\n * are interpreted in terms of the Responder System and checked to see if\n * the responder should be transferred. Each host node that is attached to\n * the Responder System has an ID, which is used to look up its associated\n * callbacks.\n */\n\n\nfunction eventListener(domEvent) {\n  var eventType = domEvent.type;\n  var eventTarget = domEvent.target;\n  /**\n   * Manage emulated events and early bailout.\n   * Since PointerEvent is not used yet (lack of support in older Safari), it's\n   * necessary to manually manage the mess of browser touch/mouse events.\n   * And bailout early for termination events when there is no active responder.\n   */\n  // Flag when browser may produce emulated events\n\n  if (eventType === 'touchstart') {\n    isEmulatingMouseEvents = true;\n  } // Remove flag when browser will not produce emulated events\n\n\n  if (eventType === 'touchmove' || trackedTouchCount > 1) {\n    isEmulatingMouseEvents = false;\n  } // Ignore various events in particular circumstances\n\n\n  if ( // Ignore browser emulated mouse events\n  eventType === 'mousedown' && isEmulatingMouseEvents || eventType === 'mousemove' && isEmulatingMouseEvents || // Ignore mousemove if a mousedown didn't occur first\n  eventType === 'mousemove' && trackedTouchCount < 1) {\n    return;\n  } // Remove flag after emulated events are finished\n\n\n  if (isEmulatingMouseEvents && eventType === 'mouseup') {\n    if (trackedTouchCount === 0) {\n      isEmulatingMouseEvents = false;\n    }\n\n    return;\n  }\n\n  var isStartEvent = isStartish(eventType) && isPrimaryPointerDown(domEvent);\n  var isMoveEvent = isMoveish(eventType);\n  var isEndEvent = isEndish(eventType);\n  var isScrollEvent = isScroll(eventType);\n  var isSelectionChangeEvent = isSelectionChange(eventType);\n  var responderEvent = createResponderEvent(domEvent, responderTouchHistoryStore);\n  /**\n   * Record the state of active pointers\n   */\n\n  if (isStartEvent || isMoveEvent || isEndEvent) {\n    if (domEvent.touches) {\n      trackedTouchCount = domEvent.touches.length;\n    } else {\n      if (isStartEvent) {\n        trackedTouchCount = 1;\n      } else if (isEndEvent) {\n        trackedTouchCount = 0;\n      }\n    }\n\n    responderTouchHistoryStore.recordTouchTrack(eventType, responderEvent.nativeEvent);\n  }\n  /**\n   * Responder System logic\n   */\n\n\n  var eventPaths = getResponderPaths(domEvent);\n  var wasNegotiated = false;\n  var wantsResponder; // If an event occured that might change the current responder...\n\n  if (isStartEvent || isMoveEvent || isScrollEvent && trackedTouchCount > 0) {\n    // If there is already a responder, prune the event paths to the lowest common ancestor\n    // of the existing responder and deepest target of the event.\n    var currentResponderIdPath = currentResponder.idPath;\n    var eventIdPath = eventPaths.idPath;\n\n    if (currentResponderIdPath != null && eventIdPath != null) {\n      var lowestCommonAncestor = getLowestCommonAncestor(currentResponderIdPath, eventIdPath);\n\n      if (lowestCommonAncestor != null) {\n        var indexOfLowestCommonAncestor = eventIdPath.indexOf(lowestCommonAncestor); // Skip the current responder so it doesn't receive unexpected \"shouldSet\" events.\n\n        var index = indexOfLowestCommonAncestor + (lowestCommonAncestor === currentResponder.id ? 1 : 0);\n        eventPaths = {\n          idPath: eventIdPath.slice(index),\n          nodePath: eventPaths.nodePath.slice(index)\n        };\n      } else {\n        eventPaths = null;\n      }\n    }\n\n    if (eventPaths != null) {\n      // If a node wants to become the responder, attempt to transfer.\n      wantsResponder = findWantsResponder(eventPaths, domEvent, responderEvent);\n\n      if (wantsResponder != null) {\n        // Sets responder if none exists, or negotates with existing responder.\n        attemptTransfer(responderEvent, wantsResponder);\n        wasNegotiated = true;\n      }\n    }\n  } // If there is now a responder, invoke its callbacks for the lifecycle of the gesture.\n\n\n  if (currentResponder.id != null && currentResponder.node != null) {\n    var _currentResponder = currentResponder,\n        id = _currentResponder.id,\n        node = _currentResponder.node;\n\n    var _getResponderConfig = getResponderConfig(id),\n        onResponderStart = _getResponderConfig.onResponderStart,\n        onResponderMove = _getResponderConfig.onResponderMove,\n        onResponderEnd = _getResponderConfig.onResponderEnd,\n        onResponderRelease = _getResponderConfig.onResponderRelease,\n        onResponderTerminate = _getResponderConfig.onResponderTerminate,\n        onResponderTerminationRequest = _getResponderConfig.onResponderTerminationRequest;\n\n    responderEvent.bubbles = false;\n    responderEvent.cancelable = false;\n    responderEvent.currentTarget = node; // Start\n\n    if (isStartEvent) {\n      if (onResponderStart != null) {\n        responderEvent.dispatchConfig.registrationName = 'onResponderStart';\n        onResponderStart(responderEvent);\n      }\n    } // Move\n    else if (isMoveEvent) {\n      if (onResponderMove != null) {\n        responderEvent.dispatchConfig.registrationName = 'onResponderMove';\n        onResponderMove(responderEvent);\n      }\n    } else {\n      var isTerminateEvent = isCancelish(eventType) || // native context menu\n      eventType === 'contextmenu' || // window blur\n      eventType === 'blur' && eventTarget === window || // responder (or ancestors) blur\n      eventType === 'blur' && eventTarget.contains(node) && domEvent.relatedTarget !== node || // native scroll without using a pointer\n      isScrollEvent && trackedTouchCount === 0 || // native scroll on node that is parent of the responder (allow siblings to scroll)\n      isScrollEvent && eventTarget.contains(node) && eventTarget !== node || // native select/selectionchange on node\n      isSelectionChangeEvent && hasValidSelection(domEvent);\n      var isReleaseEvent = isEndEvent && !isTerminateEvent && !hasTargetTouches(node, domEvent.touches); // End\n\n      if (isEndEvent) {\n        if (onResponderEnd != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderEnd';\n          onResponderEnd(responderEvent);\n        }\n      } // Release\n\n\n      if (isReleaseEvent) {\n        if (onResponderRelease != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderRelease';\n          onResponderRelease(responderEvent);\n        }\n\n        changeCurrentResponder(emptyResponder);\n      } // Terminate\n\n\n      if (isTerminateEvent) {\n        var shouldTerminate = true; // Responders can still avoid termination but only for these events.\n\n        if (eventType === 'contextmenu' || eventType === 'scroll' || eventType === 'selectionchange') {\n          // Only call this function is it wasn't already called during negotiation.\n          if (wasNegotiated) {\n            shouldTerminate = false;\n          } else if (onResponderTerminationRequest != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n\n            if (onResponderTerminationRequest(responderEvent) === false) {\n              shouldTerminate = false;\n            }\n          }\n        }\n\n        if (shouldTerminate) {\n          if (onResponderTerminate != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n            onResponderTerminate(responderEvent);\n          }\n\n          changeCurrentResponder(emptyResponder);\n          isEmulatingMouseEvents = false;\n          trackedTouchCount = 0;\n        }\n      }\n    }\n  }\n}\n/**\n * Walk the event path to/from the target node. At each node, stop and call the\n * relevant \"shouldSet\" functions for the given event type. If any of those functions\n * call \"stopPropagation\" on the event, stop searching for a responder.\n */\n\n\nfunction findWantsResponder(eventPaths, domEvent, responderEvent) {\n  var shouldSetCallbacks = shouldSetResponderEvents[domEvent.type]; // for Flow\n\n  if (shouldSetCallbacks != null) {\n    var idPath = eventPaths.idPath,\n        nodePath = eventPaths.nodePath;\n    var shouldSetCallbackCaptureName = shouldSetCallbacks[0];\n    var shouldSetCallbackBubbleName = shouldSetCallbacks[1];\n    var bubbles = shouldSetCallbacks[2].bubbles;\n\n    var check = function check(id, node, callbackName) {\n      var config = getResponderConfig(id);\n      var shouldSetCallback = config[callbackName];\n\n      if (shouldSetCallback != null) {\n        responderEvent.currentTarget = node;\n\n        if (shouldSetCallback(responderEvent) === true) {\n          // Start the path from the potential responder\n          var prunedIdPath = idPath.slice(idPath.indexOf(id));\n          return {\n            id,\n            node,\n            idPath: prunedIdPath\n          };\n        }\n      }\n    }; // capture\n\n\n    for (var i = idPath.length - 1; i >= 0; i--) {\n      var id = idPath[i];\n      var node = nodePath[i];\n      var result = check(id, node, shouldSetCallbackCaptureName);\n\n      if (result != null) {\n        return result;\n      }\n\n      if (responderEvent.isPropagationStopped() === true) {\n        return;\n      }\n    } // bubble\n\n\n    if (bubbles) {\n      for (var _i = 0; _i < idPath.length; _i++) {\n        var _id = idPath[_i];\n        var _node = nodePath[_i];\n\n        var _result = check(_id, _node, shouldSetCallbackBubbleName);\n\n        if (_result != null) {\n          return _result;\n        }\n\n        if (responderEvent.isPropagationStopped() === true) {\n          return;\n        }\n      }\n    } else {\n      var _id2 = idPath[0];\n      var _node2 = nodePath[0];\n      var target = domEvent.target;\n\n      if (target === _node2) {\n        return check(_id2, _node2, shouldSetCallbackBubbleName);\n      }\n    }\n  }\n}\n/**\n * Attempt to transfer the responder.\n */\n\n\nfunction attemptTransfer(responderEvent, wantsResponder) {\n  var _currentResponder2 = currentResponder,\n      currentId = _currentResponder2.id,\n      currentNode = _currentResponder2.node;\n  var id = wantsResponder.id,\n      node = wantsResponder.node;\n\n  var _getResponderConfig2 = getResponderConfig(id),\n      onResponderGrant = _getResponderConfig2.onResponderGrant,\n      onResponderReject = _getResponderConfig2.onResponderReject;\n\n  responderEvent.bubbles = false;\n  responderEvent.cancelable = false;\n  responderEvent.currentTarget = node; // Set responder\n\n  if (currentId == null) {\n    if (onResponderGrant != null) {\n      responderEvent.currentTarget = node;\n      responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n      onResponderGrant(responderEvent);\n    }\n\n    changeCurrentResponder(wantsResponder);\n  } // Negotiate with current responder\n  else {\n    var _getResponderConfig3 = getResponderConfig(currentId),\n        onResponderTerminate = _getResponderConfig3.onResponderTerminate,\n        onResponderTerminationRequest = _getResponderConfig3.onResponderTerminationRequest;\n\n    var allowTransfer = true;\n\n    if (onResponderTerminationRequest != null) {\n      responderEvent.currentTarget = currentNode;\n      responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n\n      if (onResponderTerminationRequest(responderEvent) === false) {\n        allowTransfer = false;\n      }\n    }\n\n    if (allowTransfer) {\n      // Terminate existing responder\n      if (onResponderTerminate != null) {\n        responderEvent.currentTarget = currentNode;\n        responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n        onResponderTerminate(responderEvent);\n      } // Grant next responder\n\n\n      if (onResponderGrant != null) {\n        responderEvent.currentTarget = node;\n        responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n        onResponderGrant(responderEvent);\n      }\n\n      changeCurrentResponder(wantsResponder);\n    } else {\n      // Reject responder request\n      if (onResponderReject != null) {\n        responderEvent.currentTarget = node;\n        responderEvent.dispatchConfig.registrationName = 'onResponderReject';\n        onResponderReject(responderEvent);\n      }\n    }\n  }\n}\n/* ------------ PUBLIC API ------------ */\n\n/**\n * Attach Listeners\n *\n * Use native events as ReactDOM doesn't have a non-plugin API to implement\n * this system.\n */\n\n\nvar documentEventsCapturePhase = ['blur', 'scroll'];\nvar documentEventsBubblePhase = [// mouse\n'mousedown', 'mousemove', 'mouseup', 'dragstart', // touch\n'touchstart', 'touchmove', 'touchend', 'touchcancel', // other\n'contextmenu', 'select', 'selectionchange'];\nexport function attachListeners() {\n  if (canUseDOM && window.__reactResponderSystemActive == null) {\n    window.addEventListener('blur', eventListener);\n    documentEventsBubblePhase.forEach(eventType => {\n      document.addEventListener(eventType, eventListener);\n    });\n    documentEventsCapturePhase.forEach(eventType => {\n      document.addEventListener(eventType, eventListener, true);\n    });\n    window.__reactResponderSystemActive = true;\n  }\n}\n/**\n * Register a node with the ResponderSystem.\n */\n\nexport function addNode(id, node, config) {\n  setResponderId(node, id);\n  responderListenersMap.set(id, config);\n}\n/**\n * Unregister a node with the ResponderSystem.\n */\n\nexport function removeNode(id) {\n  if (currentResponder.id === id) {\n    terminateResponder();\n  }\n\n  if (responderListenersMap.has(id)) {\n    responderListenersMap.delete(id);\n  }\n}\n/**\n * Allow the current responder to be terminated from within components to support\n * more complex requirements, such as use with other React libraries for working\n * with scroll views, input views, etc.\n */\n\nexport function terminateResponder() {\n  var _currentResponder3 = currentResponder,\n      id = _currentResponder3.id,\n      node = _currentResponder3.node;\n\n  if (id != null && node != null) {\n    var _getResponderConfig4 = getResponderConfig(id),\n        onResponderTerminate = _getResponderConfig4.onResponderTerminate;\n\n    if (onResponderTerminate != null) {\n      var event = createResponderEvent({}, responderTouchHistoryStore);\n      event.currentTarget = node;\n      onResponderTerminate(event);\n    }\n\n    changeCurrentResponder(emptyResponder);\n  }\n\n  isEmulatingMouseEvents = false;\n  trackedTouchCount = 0;\n}\n/**\n * Allow unit tests to inspect the current responder in the system.\n * FOR TESTING ONLY.\n */\n\nexport function getResponderNode() {\n  return currentResponder.node;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}