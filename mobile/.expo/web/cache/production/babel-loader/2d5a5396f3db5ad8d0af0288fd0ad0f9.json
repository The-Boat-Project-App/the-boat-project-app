{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";export default function useIsKeyboardShown(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isKeyboardShown=_React$useState2[0],setIsKeyboardShown=_React$useState2[1];React.useEffect(function(){var handleKeyboardShow=function handleKeyboardShow(){return setIsKeyboardShown(true);};var handleKeyboardHide=function handleKeyboardHide(){return setIsKeyboardShown(false);};var subscriptions;if(Platform.OS==='ios'){subscriptions=[Keyboard.addListener('keyboardWillShow',handleKeyboardShow),Keyboard.addListener('keyboardWillHide',handleKeyboardHide)];}else{subscriptions=[Keyboard.addListener('keyboardDidShow',handleKeyboardShow),Keyboard.addListener('keyboardDidHide',handleKeyboardHide)];}return function(){subscriptions.forEach(function(s){return s.remove();});};},[]);return isKeyboardShown;}","map":{"version":3,"mappings":"iEAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,C,0HAGA,cAAe,SAASC,mBAAT,EAA8B,CAC3C,oBAA8CD,KAAK,CAACE,QAANF,CAAe,KAAfA,CAA9C,oDAAOG,eAAP,qBAAwBC,kBAAxB,qBAEAJ,KAAK,CAACK,SAANL,CAAgB,UAAM,CACpB,GAAMM,mBAAkB,CAAG,QAArBA,mBAAqB,SAAMF,mBAAkB,CAAC,IAAD,CAAxB,EAA3B,CACA,GAAMG,mBAAkB,CAAG,QAArBA,mBAAqB,SAAMH,mBAAkB,CAAC,KAAD,CAAxB,EAA3B,CAEA,GAAII,cAAJ,CAEA,GAAIC,QAAQ,CAACC,EAATD,GAAgB,KAApB,CAA2B,CACzBD,aAAa,CAAG,CACdG,QAAQ,CAACC,WAATD,CAAqB,kBAArBA,CAAyCL,kBAAzCK,CADc,CAEdA,QAAQ,CAACC,WAATD,CAAqB,kBAArBA,CAAyCJ,kBAAzCI,CAFc,CAAhBH,CADF,KAKO,CACLA,aAAa,CAAG,CACdG,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,CAAwCL,kBAAxCK,CADc,CAEdA,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,CAAwCJ,kBAAxCI,CAFc,CAAhBH,CAID,CAED,MAAO,WAAM,CACXA,aAAa,CAACK,OAAdL,CAAuBM,UAAD,QAAOA,EAAC,CAACC,MAAFD,EAAP,EAAtBN,EADF,EAlBF,EAqBG,EArBHR,EAuBA,MAAOG,gBAAP,CACD","names":["React","useIsKeyboardShown","useState","isKeyboardShown","setIsKeyboardShown","useEffect","handleKeyboardShow","handleKeyboardHide","subscriptions","Platform","OS","Keyboard","addListener","forEach","s","remove"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { EmitterSubscription, Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    let subscriptions: EmitterSubscription[];\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [\n        Keyboard.addListener('keyboardWillShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardWillHide', handleKeyboardHide),\n      ];\n    } else {\n      subscriptions = [\n        Keyboard.addListener('keyboardDidShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardDidHide', handleKeyboardHide),\n      ];\n    }\n\n    return () => {\n      subscriptions.forEach((s) => s.remove());\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"module"}