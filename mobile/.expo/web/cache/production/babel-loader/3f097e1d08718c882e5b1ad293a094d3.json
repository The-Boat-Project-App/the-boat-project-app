{"ast":null,"code":"import{useComboBox as useComboBoxWeb}from'@react-aria/combobox';import{mapDomPropsToRN}from'@react-native-aria/utils';export function useComboBox(props,state){var params=useComboBoxWeb(props,state);var onKeyPress=params.inputProps.onKeyDown;params.inputProps.onKeyDown=undefined;params.inputProps.onKeyPress=onKeyPress;params.inputProps.blurOnSubmit=false;params.inputProps.onKeyDown=undefined;return{inputProps:mapDomPropsToRN(params.inputProps),buttonProps:mapDomPropsToRN(params.buttonProps),labelProps:mapDomPropsToRN(params.labelProps),listBoxProps:mapDomPropsToRN(params.listBoxProps)};}","map":{"version":3,"mappings":"AAKA,OAASA,WAAW,GAAIC,eAAxB,KAA8C,sBAA9C,CACA,OAASC,eAAT,KAAgC,0BAAhC,CAiCA,MAAO,SAASF,YAAT,CACLG,KADK,CAELC,KAFK,CAGS,CAEd,GAAMC,OAAM,CAAGJ,cAAc,CAACE,KAAD,CAAQC,KAAR,CAA7B,CAEA,GAAME,WAAU,CAAGD,MAAM,CAACE,UAAPF,CAAkBG,SAArC,CACAH,MAAM,CAACE,UAAPF,CAAkBG,SAAlBH,CAA8BI,SAA9BJ,CAIAA,MAAM,CAACE,UAAPF,CAAkBC,UAAlBD,CAA+BC,UAA/BD,CAGAA,MAAM,CAACE,UAAPF,CAAkBK,YAAlBL,CAAiC,KAAjCA,CACAA,MAAM,CAACE,UAAPF,CAAkBG,SAAlBH,CAA8BI,SAA9BJ,CAEA,MAAO,CACLE,UAAU,CAAEL,eAAe,CAACG,MAAM,CAACE,UAAR,CADtB,CAELI,WAAW,CAAET,eAAe,CAACG,MAAM,CAACM,WAAR,CAFvB,CAGLC,UAAU,CAAEV,eAAe,CAACG,MAAM,CAACO,UAAR,CAHtB,CAILC,YAAY,CAAEX,eAAe,CAACG,MAAM,CAACQ,YAAR,CAJxB,CAAP,CAMD","names":["useComboBox","useComboBoxWeb","mapDomPropsToRN","props","state","params","onKeyPress","inputProps","onKeyDown","undefined","blurOnSubmit","buttonProps","labelProps","listBoxProps"],"sources":["useComboBox.web.ts"],"sourcesContent":["import { ComboBoxProps } from '@react-types/combobox';\nimport { ComboBoxState } from '@react-stately/combobox';\nimport { RefObject } from 'react';\nimport { KeyboardDelegate } from '@react-types/shared';\nimport { TextInput, View, Pressable, Touchable } from 'react-native';\nimport { useComboBox as useComboBoxWeb } from '@react-aria/combobox';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\nimport { TextInputProps } from 'react-native';\n\ninterface AriaComboBoxProps<T> extends ComboBoxProps<T> {\n  /** The ref for the input element. */\n  inputRef: RefObject<TextInput>;\n  /** The ref for the list box popover. */\n  popoverRef: RefObject<View>;\n  /** The ref for the list box. */\n  listBoxRef: RefObject<View>;\n  /** The ref for the list box popup trigger button.  */\n  buttonRef: RefObject<typeof Pressable | Touchable>;\n  /** An optional keyboard delegate implementation, to override the default. */\n  keyboardDelegate?: KeyboardDelegate;\n}\n\ninterface ComboBoxAria {\n  /** Props for the combo box menu trigger button. */\n  buttonProps: any;\n  /** Props for the combo box input element. */\n  inputProps: TextInputProps;\n  /** Props for the combo box menu. */\n  listBoxProps: any;\n  /** Props for the combo box label element. */\n  labelProps: any;\n}\n\n/**\n * Provides the behavior and accessibility implementation for a combo box component.\n * A combo box combines a text input with a listbox, allowing users to filter a list of options to items matching a query.\n * @param props - Props for the combo box.\n * @param state - State for the select, as returned by `useComboBoxState`.\n */\nexport function useComboBox<T>(\n  props: AriaComboBoxProps<T>,\n  state: ComboBoxState<T>\n): ComboBoxAria {\n  // @ts-ignore\n  const params = useComboBoxWeb(props, state);\n\n  const onKeyPress = params.inputProps.onKeyDown;\n  params.inputProps.onKeyDown = undefined;\n\n  // RN Web supports onKeyPress. It's same as onKeyDown\n  // https://necolas.github.io/react-native-web/docs/text-input/\n  params.inputProps.onKeyPress = onKeyPress;\n\n  // @ts-ignore\n  params.inputProps.blurOnSubmit = false;\n  params.inputProps.onKeyDown = undefined;\n\n  return {\n    inputProps: mapDomPropsToRN(params.inputProps),\n    buttonProps: mapDomPropsToRN(params.buttonProps),\n    labelProps: mapDomPropsToRN(params.labelProps),\n    listBoxProps: mapDomPropsToRN(params.listBoxProps),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}