{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=getCollapsedMarginTop;function getCollapsedMarginTop(precedent,current){var topMostMarginBottom=typeof precedent.styles.nativeBlockRet.marginBottom==='number'?precedent.styles.nativeBlockRet.marginBottom:null;var bottomMostMarginTop=typeof current.styles.nativeBlockRet.marginTop==='number'?current.styles.nativeBlockRet.marginTop:null;if(topMostMarginBottom==null||bottomMostMarginTop==null){return null;}if(topMostMarginBottom<0&&bottomMostMarginTop<0){return Math.min(topMostMarginBottom,bottomMostMarginTop)-topMostMarginBottom;}if(topMostMarginBottom<0||bottomMostMarginTop<0){return topMostMarginBottom+bottomMostMarginTop-topMostMarginBottom;}if(topMostMarginBottom>bottomMostMarginTop){return 0;}return bottomMostMarginTop-topMostMarginBottom;}","map":{"version":3,"mappings":"4GAYe,QAASA,sBAAT,CACbC,SADa,CAEbC,OAFa,CAGE,CACf,GAAMC,oBAAmB,CACvB,MAAOF,UAAS,CAACG,MAAVH,CAAiBI,cAAjBJ,CAAgCK,YAAvC,GAAwD,QAAxD,CACIL,SAAS,CAACG,MAAVH,CAAiBI,cAAjBJ,CAAgCK,YADpC,CAEI,IAHN,CAIA,GAAMC,oBAAmB,CACvB,MAAOL,QAAO,CAACE,MAARF,CAAeG,cAAfH,CAA8BM,SAArC,GAAmD,QAAnD,CACIN,OAAO,CAACE,MAARF,CAAeG,cAAfH,CAA8BM,SADlC,CAEI,IAHN,CAIA,GAAIL,mBAAmB,EAAI,IAAvBA,EAA+BI,mBAAmB,EAAI,IAA1D,CAAgE,CAC9D,MAAO,KAAP,CACD,CACD,GAAIJ,mBAAmB,CAAG,CAAtBA,EAA2BI,mBAAmB,CAAG,CAArD,CAAwD,CACtD,MACEE,KAAI,CAACC,GAALD,CAASN,mBAATM,CAA8BF,mBAA9BE,EAAqDN,mBADvD,CAGD,CACD,GAAIA,mBAAmB,CAAG,CAAtBA,EAA2BI,mBAAmB,CAAG,CAArD,CAAwD,CACtD,MAAOJ,oBAAmB,CAAGI,mBAAtBJ,CAA4CA,mBAAnD,CACD,CACD,GAAIA,mBAAmB,CAAGI,mBAA1B,CAA+C,CAC7C,MAAO,EAAP,CACD,CACD,MAAOA,oBAAmB,CAAGJ,mBAA7B,CACD","names":["getCollapsedMarginTop","precedent","current","topMostMarginBottom","styles","nativeBlockRet","marginBottom","bottomMostMarginTop","marginTop","Math","min"],"sources":["getCollapsedMarginTop.ts"],"sourcesContent":["import { TNode } from '@native-html/transient-render-engine';\n\n/**\n * Compute a TNode top margin to satisfy requirements expressed in CSS\n * standard regarding margin collapsing.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing\n * for a reference.\n *\n * @param precedent - The node above the one for which we need to compute top margin.\n * @param current - The node for which a margin top might collapse.\n */\nexport default function getCollapsedMarginTop(\n  precedent: TNode,\n  current: TNode\n): null | number {\n  const topMostMarginBottom =\n    typeof precedent.styles.nativeBlockRet.marginBottom === 'number'\n      ? precedent.styles.nativeBlockRet.marginBottom\n      : null;\n  const bottomMostMarginTop =\n    typeof current.styles.nativeBlockRet.marginTop === 'number'\n      ? current.styles.nativeBlockRet.marginTop\n      : null;\n  if (topMostMarginBottom == null || bottomMostMarginTop == null) {\n    return null;\n  }\n  if (topMostMarginBottom < 0 && bottomMostMarginTop < 0) {\n    return (\n      Math.min(topMostMarginBottom, bottomMostMarginTop) - topMostMarginBottom\n    );\n  }\n  if (topMostMarginBottom < 0 || bottomMostMarginTop < 0) {\n    return topMostMarginBottom + bottomMostMarginTop - topMostMarginBottom;\n  }\n  if (topMostMarginBottom > bottomMostMarginTop) {\n    return 0;\n  }\n  return bottomMostMarginTop - topMostMarginBottom;\n}\n"]},"metadata":{},"sourceType":"script"}