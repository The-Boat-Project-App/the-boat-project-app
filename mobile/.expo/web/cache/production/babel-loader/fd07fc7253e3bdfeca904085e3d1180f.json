{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onPressIn\",\"onPressOut\",\"android_ripple\",\"pressColor\",\"pressOpacity\",\"style\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{useTheme}from'@react-navigation/native';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import Platform from\"react-native-web/dist/exports/Platform\";import Pressable from\"react-native-web/dist/exports/Pressable\";var AnimatedPressable=Animated.createAnimatedComponent(Pressable);var ANDROID_VERSION_LOLLIPOP=21;var ANDROID_SUPPORTS_RIPPLE=Platform.OS==='android'&&Platform.Version>=ANDROID_VERSION_LOLLIPOP;export default function PlatformPressable(_ref){var onPressIn=_ref.onPressIn,onPressOut=_ref.onPressOut,android_ripple=_ref.android_ripple,pressColor=_ref.pressColor,_ref$pressOpacity=_ref.pressOpacity,pressOpacity=_ref$pressOpacity===void 0?0.3:_ref$pressOpacity,style=_ref.style,rest=_objectWithoutProperties(_ref,_excluded);var _useTheme=useTheme(),dark=_useTheme.dark;var _React$useState=React.useState(function(){return new Animated.Value(1);}),_React$useState2=_slicedToArray(_React$useState,1),opacity=_React$useState2[0];var animateTo=function animateTo(toValue,duration){if(ANDROID_SUPPORTS_RIPPLE){return;}Animated.timing(opacity,{toValue:toValue,duration:duration,easing:Easing.inOut(Easing.quad),useNativeDriver:true}).start();};var handlePressIn=function handlePressIn(e){animateTo(pressOpacity,0);onPressIn===null||onPressIn===void 0?void 0:onPressIn(e);};var handlePressOut=function handlePressOut(e){animateTo(1,200);onPressOut===null||onPressOut===void 0?void 0:onPressOut(e);};return React.createElement(AnimatedPressable,_extends({onPressIn:handlePressIn,onPressOut:handlePressOut,android_ripple:ANDROID_SUPPORTS_RIPPLE?_objectSpread({color:pressColor!==undefined?pressColor:dark?'rgba(255, 255, 255, .32)':'rgba(0, 0, 0, .32)'},android_ripple):undefined,style:[{opacity:!ANDROID_SUPPORTS_RIPPLE?opacity:1},style]},rest));}","map":{"version":3,"mappings":"m1CAAA,OAASA,QAAT,KAAyB,0BAAzB,CACA,MAAO,GAAKC,MAAZ,KAAuB,OAAvB,C,kPAmBA,GAAMC,kBAAiB,CAAGC,QAAQ,CAACC,uBAATD,CAAiCE,SAAjCF,CAA1B,CAEA,GAAMG,yBAAwB,CAAG,EAAjC,CACA,GAAMC,wBAAuB,CAC3BC,QAAQ,CAACC,EAATD,GAAgB,SAAhBA,EAA6BA,QAAQ,CAACE,OAATF,EAAoBF,wBADnD,CAMA,cAAe,SAASK,kBAAT,MAQL,IAPRC,UAOQ,MAPRA,SAOQ,CANRC,UAMQ,MANRA,UAMQ,CALRC,cAKQ,MALRA,cAKQ,CAJRC,UAIQ,MAJRA,UAIQ,wBAHRC,YAGQ,CAHRA,YAGQ,4BAHO,GAGP,mBAFRC,KAEQ,MAFRA,KAEQ,CADLC,IACK,0CACR,cAAiBlB,QAAQ,EAAzB,CAAQmB,IAAR,WAAQA,IAAR,CACA,oBAAkBlB,KAAK,CAACmB,QAANnB,CAAe,iBAAM,IAAIE,SAAQ,CAACkB,KAAb,CAAmB,CAAnB,CAAN,EAAfpB,CAAlB,oDAAOqB,OAAP,qBAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,OAAD,CAAkBC,QAAlB,CAAuC,CACvD,GAAIlB,uBAAJ,CAA6B,CAC3B,OACD,CAEDJ,QAAQ,CAACuB,MAATvB,CAAgBmB,OAAhBnB,CAAyB,CACvBqB,OADuB,CACvBA,OADuB,CAEvBC,QAFuB,CAEvBA,QAFuB,CAGvBE,MAAM,CAAEC,MAAM,CAACC,KAAPD,CAAaA,MAAM,CAACE,IAApBF,CAHe,CAIvBG,eAAe,CAAE,IAJM,CAAzB5B,EAKG6B,KALH7B,GALF,EAaA,GAAM8B,cAAa,CAAIC,QAAjBD,cAAiBC,EAAD,CAA8B,CAClDX,SAAS,CAACP,YAAD,CAAe,CAAf,CAATO,CACAX,SAAS,OAATA,WAAS,SAATA,iBAAS,CAAGsB,CAAH,CAATtB,CAFF,EAKA,GAAMuB,eAAc,CAAID,QAAlBC,eAAkBD,EAAD,CAA8B,CACnDX,SAAS,CAAC,CAAD,CAAI,GAAJ,CAATA,CACAV,UAAU,OAAVA,YAAU,SAAVA,kBAAU,CAAGqB,CAAH,CAAVrB,CAFF,EAKA,MACEZ,qBAACC,iBAAD,WACEU,SAAS,CAAEqB,aADb,CAEEpB,UAAU,CAAEsB,cAFd,CAGErB,cAAc,CACZP,uBAAuB,gBAEjB6B,KAAK,CACHrB,UAAU,GAAKsB,SAAftB,CACIA,UADJA,CAEII,IAAI,CACJ,0BADI,CAEJ,oBAPW,EAQdL,cARc,EAUnBuB,SAdR,CAgBEpB,KAAK,CAAE,CAAC,CAAEK,OAAO,CAAE,CAACf,uBAAD,CAA2Be,OAA3B,CAAqC,CAAhD,CAAD,CAAsDL,KAAtD,CAhBT,EAiBMC,IAjBN,EADF,CAqBD","names":["useTheme","React","AnimatedPressable","Animated","createAnimatedComponent","Pressable","ANDROID_VERSION_LOLLIPOP","ANDROID_SUPPORTS_RIPPLE","Platform","OS","Version","PlatformPressable","onPressIn","onPressOut","android_ripple","pressColor","pressOpacity","style","rest","dark","useState","Value","opacity","animateTo","toValue","duration","timing","easing","Easing","inOut","quad","useNativeDriver","start","handlePressIn","e","handlePressOut","color","undefined"],"sources":["PlatformPressable.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  PressableProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nexport type Props = Omit<PressableProps, 'style'> & {\n  pressColor?: string;\n  pressOpacity?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children: React.ReactNode;\n};\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport default function PlatformPressable({\n  onPressIn,\n  onPressOut,\n  android_ripple,\n  pressColor,\n  pressOpacity = 0.3,\n  style,\n  ...rest\n}: Props) {\n  const { dark } = useTheme();\n  const [opacity] = React.useState(() => new Animated.Value(1));\n\n  const animateTo = (toValue: number, duration: number) => {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    animateTo(pressOpacity, 0);\n    onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    animateTo(1, 200);\n    onPressOut?.(e);\n  };\n\n  return (\n    <AnimatedPressable\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? {\n              color:\n                pressColor !== undefined\n                  ? pressColor\n                  : dark\n                  ? 'rgba(255, 255, 255, .32)'\n                  : 'rgba(0, 0, 0, .32)',\n              ...android_ripple,\n            }\n          : undefined\n      }\n      style={[{ opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1 }, style]}\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}