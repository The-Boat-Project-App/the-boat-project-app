{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{calculatePosition}from\"./calculatePosition\";import{useCallback,useRef,useState}from'react';import{useCloseOnScroll}from\"./useCloseOnScroll\";import{isRTL,useLayoutEffect}from'@react-native-aria/utils';var visualViewport=typeof window!=='undefined'&&window.visualViewport;export function useOverlayPosition(props){var direction=isRTL()?'rtl':undefined;var targetRef=props.targetRef,overlayRef=props.overlayRef,_props$scrollRef=props.scrollRef,scrollRef=_props$scrollRef===void 0?overlayRef:_props$scrollRef,_props$placement=props.placement,placement=_props$placement===void 0?'bottom':_props$placement,_props$containerPaddi=props.containerPadding,containerPadding=_props$containerPaddi===void 0?12:_props$containerPaddi,_props$shouldFlip=props.shouldFlip,shouldFlip=_props$shouldFlip===void 0?true:_props$shouldFlip,_props$boundaryElemen=props.boundaryElement,boundaryElement=_props$boundaryElemen===void 0?typeof document!=='undefined'?document.body:null:_props$boundaryElemen,_props$offset=props.offset,offset=_props$offset===void 0?0:_props$offset,_props$crossOffset=props.crossOffset,crossOffset=_props$crossOffset===void 0?0:_props$crossOffset,_props$shouldUpdatePo=props.shouldUpdatePosition,shouldUpdatePosition=_props$shouldUpdatePo===void 0?true:_props$shouldUpdatePo,_props$isOpen=props.isOpen,isOpen=_props$isOpen===void 0?true:_props$isOpen,_props$shouldOverlapW=props.shouldOverlapWithTrigger,shouldOverlapWithTrigger=_props$shouldOverlapW===void 0?false:_props$shouldOverlapW,onClose=props.onClose;var _useState=useState({position:{},arrowOffsetLeft:undefined,arrowOffsetTop:undefined,maxHeight:undefined,placement:undefined}),_useState2=_slicedToArray(_useState,2),position=_useState2[0],setPosition=_useState2[1];var deps=[shouldUpdatePosition,placement,overlayRef.current,targetRef.current,scrollRef.current,containerPadding,shouldFlip,boundaryElement,offset,crossOffset,isOpen,direction,shouldOverlapWithTrigger];var updatePosition=useCallback(function(){if(shouldUpdatePosition===false||!isOpen||!overlayRef.current||!targetRef.current||!scrollRef.current||!boundaryElement){return;}setPosition(calculatePosition({placement:translateRTL(placement,direction),overlayNode:overlayRef.current,targetNode:targetRef.current,scrollNode:scrollRef.current,padding:containerPadding,shouldFlip:shouldFlip,boundaryElement:boundaryElement,offset:offset,crossOffset:crossOffset,shouldOverlapWithTrigger:shouldOverlapWithTrigger}));},deps);useLayoutEffect(updatePosition,deps);useResize(updatePosition);var isResizing=useRef(false);useLayoutEffect(function(){var timeout;var onResize=function onResize(){isResizing.current=true;clearTimeout(timeout);timeout=setTimeout(function(){isResizing.current=false;},500);updatePosition();};visualViewport===null||visualViewport===void 0?void 0:visualViewport.addEventListener('resize',onResize);return function(){visualViewport===null||visualViewport===void 0?void 0:visualViewport.removeEventListener('resize',onResize);};},[updatePosition]);var close=useCallback(function(){if(!isResizing.current){onClose();}},[onClose,isResizing]);useCloseOnScroll({triggerRef:targetRef,isOpen:isOpen,onClose:onClose?close:undefined});return{rendered:true,overlayProps:{style:_objectSpread(_objectSpread({position:'absolute',zIndex:100000},position.position),{},{maxHeight:position.maxHeight})},placement:position.placement,arrowProps:{style:{left:position.arrowOffsetLeft,top:position.arrowOffsetTop}},updatePosition:updatePosition};}function useResize(onResize){useLayoutEffect(function(){window.addEventListener('resize',onResize,false);return function(){window.removeEventListener('resize',onResize,false);};},[onResize]);}function translateRTL(position,direction){if(direction==='rtl'){return position.replace('start','right').replace('end','left');}return position.replace('start','left').replace('end','right');}","map":{"version":3,"mappings":"y4BAaA,OAASA,iBAAT,2BACA,OAGEC,WAHF,CAIEC,MAJF,CAKEC,QALF,KAMO,OANP,CAQA,OAASC,gBAAT,0BACA,OAASC,KAAT,CAAgBC,eAAhB,KAAuC,0BAAvC,CA4CA,GAAIC,eAAc,CAAG,MAAOC,OAAP,GAAkB,WAAlB,EAAiCA,MAAM,CAACD,cAA7D,CAMA,MAAO,SAASE,mBAAT,CAA4BC,KAA5B,CAAoE,CACzE,GAAMC,UAAS,CAAGN,KAAK,GAAK,KAAL,CAAaO,SAApC,CACA,GACEC,UADF,CAcIH,KAdJ,CACEG,SADF,CAEEC,UAFF,CAcIJ,KAdJ,CAEEI,UAFF,kBAcIJ,KAdJ,CAGEK,SAHF,CAGEA,SAHF,2BAGcD,UAHd,mCAcIJ,KAdJ,CAIEM,SAJF,CAIEA,SAJF,2BAIc,QAJd,wCAcIN,KAdJ,CAKEO,gBALF,CAKEA,gBALF,gCAKqB,EALrB,yCAcIP,KAdJ,CAMEQ,UANF,CAMEA,UANF,4BAMe,IANf,yCAcIR,KAdJ,CAOES,eAPF,CAOEA,eAPF,gCAOoB,MAAOC,SAAP,GAAoB,WAApB,CAAkCA,QAAQ,CAACC,IAA3C,CAAkD,IAPtE,qCAcIX,KAdJ,CAQEY,MARF,CAQEA,MARF,wBAQW,CARX,kCAcIZ,KAdJ,CASEa,WATF,CASEA,WATF,6BASgB,CAThB,0CAcIb,KAdJ,CAUEc,oBAVF,CAUEA,oBAVF,gCAUyB,IAVzB,qCAcId,KAdJ,CAWEe,MAXF,CAWEA,MAXF,wBAWW,IAXX,qCAcIf,KAdJ,CAYEgB,wBAZF,CAYEA,wBAZF,gCAY6B,KAZ7B,uBAaEC,OAbF,CAcIjB,KAdJ,CAaEiB,OAbF,CAeA,cAA8BxB,QAAQ,CAAiB,CACrDyB,QAAQ,CAAE,EAD2C,CAErDC,eAAe,CAAEjB,SAFoC,CAGrDkB,cAAc,CAAElB,SAHqC,CAIrDmB,SAAS,CAAEnB,SAJ0C,CAKrDI,SAAS,CAAEJ,SAL0C,CAAjB,CAAtC,wCAAKgB,QAAL,eAAeI,WAAf,eAQA,GAAIC,KAAI,CAAG,CACTT,oBADS,CAETR,SAFS,CAGTF,UAAU,CAACoB,OAHF,CAITrB,SAAS,CAACqB,OAJD,CAKTnB,SAAS,CAACmB,OALD,CAMTjB,gBANS,CAOTC,UAPS,CAQTC,eARS,CASTG,MATS,CAUTC,WAVS,CAWTE,MAXS,CAYTd,SAZS,CAaTe,wBAbS,CAAX,CAgBA,GAAIS,eAAc,CAAGlC,WAAW,CAAC,UAAM,CACrC,GACEuB,oBAAoB,GAAK,KAAzBA,EACA,CAACC,MADDD,EAEA,CAACV,UAAU,CAACoB,OAFZV,EAGA,CAACX,SAAS,CAACqB,OAHXV,EAIA,CAACT,SAAS,CAACmB,OAJXV,EAKA,CAACL,eANH,CAOE,CACA,OACD,CAEDa,WAAW,CACThC,iBAAiB,CAAC,CAChBgB,SAAS,CAAEoB,YAAY,CAACpB,SAAD,CAAYL,SAAZ,CADP,CAEhB0B,WAAW,CAAEvB,UAAU,CAACoB,OAFR,CAGhBI,UAAU,CAAEzB,SAAS,CAACqB,OAHN,CAIhBK,UAAU,CAAExB,SAAS,CAACmB,OAJN,CAKhBM,OAAO,CAAEvB,gBALO,CAMhBC,UANgB,CAMhBA,UANgB,CAOhBC,eAPgB,CAOhBA,eAPgB,CAQhBG,MARgB,CAQhBA,MARgB,CAShBC,WATgB,CAShBA,WATgB,CAUhBG,iDAVgB,CAAD,CADR,CAAXM,CAZ8B,EA0B7BC,IA1B6B,CAAhC,CA6BA3B,eAAe,CAAC6B,cAAD,CAAiBF,IAAjB,CAAf3B,CAGAmC,SAAS,CAACN,cAAD,CAATM,CAIA,GAAIC,WAAU,CAAGxC,MAAM,CAAC,KAAD,CAAvB,CACAI,eAAe,CAAC,UAAM,CACpB,GAAIqC,QAAJ,CACA,GAAIC,SAAQ,CAAG,QAAXA,SAAW,EAAM,CACnBF,UAAU,CAACR,OAAXQ,CAAqB,IAArBA,CACAG,YAAY,CAACF,OAAD,CAAZE,CAEAF,OAAO,CAAGG,UAAU,CAAC,UAAM,CACzBJ,UAAU,CAACR,OAAXQ,CAAqB,KAArBA,CADkB,EAEjB,GAFiB,CAApBC,CAIAR,cAAc,GARhB,EAWA5B,cAAc,OAAdA,gBAAc,SAAdA,sBAAc,CAAEwC,gBAAhBxC,CAAiC,QAAjCA,CAA2CqC,QAA3CrC,EAEA,MAAO,WAAM,CACXA,cAAc,OAAdA,gBAAc,SAAdA,sBAAc,CAAEyC,mBAAhBzC,CAAoC,QAApCA,CAA8CqC,QAA9CrC,EADF,EAfa,EAkBZ,CAAC4B,cAAD,CAlBY,CAAf7B,CAoBA,GAAI2C,MAAK,CAAGhD,WAAW,CAAC,UAAM,CAC5B,GAAI,CAACyC,UAAU,CAACR,OAAhB,CAAyB,CACvBP,OAAO,GACR,CAHoB,EAIpB,CAACA,OAAD,CAAUe,UAAV,CAJoB,CAAvB,CAQAtC,gBAAgB,CAAC,CACf8C,UAAU,CAAErC,SADG,CAEfY,MAFe,CAEfA,MAFe,CAGfE,OAAO,CAAEA,OAAO,CAAGsB,KAAH,CAAWrC,SAHZ,CAAD,CAAhBR,CAMA,MAAO,CACL+C,QAAQ,CAAE,IADL,CAELC,YAAY,CAAE,CACZC,KAAK,8BACHzB,QAAQ,CAAE,UADP,CAEH0B,MAAM,CAAE,MAFL,EAGA1B,QAAQ,CAACA,QAHT,MAIHG,SAAS,CAAEH,QAAQ,CAACG,SAJjB,EADO,CAFT,CAULf,SAAS,CAAEY,QAAQ,CAACZ,SAVf,CAWLuC,UAAU,CAAE,CACVF,KAAK,CAAE,CACLG,IAAI,CAAE5B,QAAQ,CAACC,eADV,CAEL4B,GAAG,CAAE7B,QAAQ,CAACE,cAFT,CADG,CAXP,CAiBLK,6BAjBK,CAAP,CAmBD,CAED,QAASM,UAAT,CAAmBG,QAAnB,CAA6B,CAC3BtC,eAAe,CAAC,UAAM,CACpBE,MAAM,CAACuC,gBAAPvC,CAAwB,QAAxBA,CAAkCoC,QAAlCpC,CAA4C,KAA5CA,EACA,MAAO,WAAM,CACXA,MAAM,CAACwC,mBAAPxC,CAA2B,QAA3BA,CAAqCoC,QAArCpC,CAA+C,KAA/CA,EADF,EAFa,EAKZ,CAACoC,QAAD,CALY,CAAftC,CAMD,CAED,QAAS8B,aAAT,CAAsBR,QAAtB,CAAgCjB,SAAhC,CAA2C,CACzC,GAAIA,SAAS,GAAK,KAAlB,CAAyB,CACvB,MAAOiB,SAAQ,CAAC8B,OAAT9B,CAAiB,OAAjBA,CAA0B,OAA1BA,EAAmC8B,OAAnC9B,CAA2C,KAA3CA,CAAkD,MAAlDA,CAAP,CACD,CACD,MAAOA,SAAQ,CAAC8B,OAAT9B,CAAiB,OAAjBA,CAA0B,MAA1BA,EAAkC8B,OAAlC9B,CAA0C,KAA1CA,CAAiD,OAAjDA,CAAP,CACD","names":["calculatePosition","useCallback","useRef","useState","useCloseOnScroll","isRTL","useLayoutEffect","visualViewport","window","useOverlayPosition","props","direction","undefined","targetRef","overlayRef","scrollRef","placement","containerPadding","shouldFlip","boundaryElement","document","body","offset","crossOffset","shouldUpdatePosition","isOpen","shouldOverlapWithTrigger","onClose","position","arrowOffsetLeft","arrowOffsetTop","maxHeight","setPosition","deps","current","updatePosition","translateRTL","overlayNode","targetNode","scrollNode","padding","useResize","isResizing","timeout","onResize","clearTimeout","setTimeout","addEventListener","removeEventListener","close","triggerRef","rendered","overlayProps","style","zIndex","arrowProps","left","top","replace"],"sources":["useOverlayPosition.ts"],"sourcesContent":["//@ts-nocheck\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { calculatePosition, PositionResult } from './calculatePosition';\nimport {\n  HTMLAttributes,\n  RefObject,\n  useCallback,\n  useRef,\n  useState,\n} from 'react';\nimport { Placement, PlacementAxis, PositionProps } from '@react-types/overlays';\nimport { useCloseOnScroll } from './useCloseOnScroll';\nimport { isRTL, useLayoutEffect } from '@react-native-aria/utils';\n\ninterface AriaPositionProps extends PositionProps {\n  /**\n   * Element that that serves as the positioning boundary.\n   * @default document.body\n   */\n  boundaryElement?: HTMLElement;\n  /**\n   * The ref for the element which the overlay positions itself with respect to.\n   */\n  targetRef: RefObject<HTMLElement>;\n  /**\n   * The ref for the overlay element.\n   */\n  overlayRef: RefObject<HTMLElement>;\n  /**\n   * A ref for the scrollable region within the overlay.\n   * @default overlayRef\n   */\n  scrollRef?: RefObject<HTMLElement>;\n  /**\n   * Whether the overlay should update its position automatically.\n   * @default true\n   */\n  shouldUpdatePosition?: boolean;\n  /** Handler that is called when the overlay should close. */\n  onClose?: () => void;\n  /** Determines whether the overlay should overlap with the trigger */\n  shouldOverlapWithTrigger?: boolean;\n}\n\ninterface PositionAria {\n  /** Props for the overlay container element. */\n  overlayProps: HTMLAttributes<Element>;\n  /** Props for the overlay tip arrow if any. */\n  arrowProps: HTMLAttributes<Element>;\n  /** Placement of the overlay with respect to the overlay trigger. */\n  placement: PlacementAxis;\n  /** Updates the position of the overlay. */\n  updatePosition(): void;\n}\n\n// @ts-ignore\nlet visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\n/**\n * Handles positioning overlays like popovers and menus relative to a trigger\n * element, and updating the position when the window resizes.\n */\nexport function useOverlayPosition(props: AriaPositionProps): PositionAria {\n  const direction = isRTL() ? 'rtl' : undefined;\n  let {\n    targetRef,\n    overlayRef,\n    scrollRef = overlayRef,\n    placement = 'bottom' as Placement,\n    containerPadding = 12,\n    shouldFlip = true,\n    boundaryElement = typeof document !== 'undefined' ? document.body : null,\n    offset = 0,\n    crossOffset = 0,\n    shouldUpdatePosition = true,\n    isOpen = true,\n    shouldOverlapWithTrigger = false,\n    onClose,\n  } = props;\n  let [position, setPosition] = useState<PositionResult>({\n    position: {},\n    arrowOffsetLeft: undefined,\n    arrowOffsetTop: undefined,\n    maxHeight: undefined,\n    placement: undefined,\n  });\n\n  let deps = [\n    shouldUpdatePosition,\n    placement,\n    overlayRef.current,\n    targetRef.current,\n    scrollRef.current,\n    containerPadding,\n    shouldFlip,\n    boundaryElement,\n    offset,\n    crossOffset,\n    isOpen,\n    direction,\n    shouldOverlapWithTrigger\n  ];\n\n  let updatePosition = useCallback(() => {\n    if (\n      shouldUpdatePosition === false ||\n      !isOpen ||\n      !overlayRef.current ||\n      !targetRef.current ||\n      !scrollRef.current ||\n      !boundaryElement\n    ) {\n      return;\n    }\n\n    setPosition(\n      calculatePosition({\n        placement: translateRTL(placement, direction),\n        overlayNode: overlayRef.current,\n        targetNode: targetRef.current,\n        scrollNode: scrollRef.current,\n        padding: containerPadding,\n        shouldFlip,\n        boundaryElement,\n        offset,\n        crossOffset,\n        shouldOverlapWithTrigger,\n      })\n    );\n  }, deps);\n\n  // Update position when anything changes\n  useLayoutEffect(updatePosition, deps);\n\n  // Update position on window resize\n  useResize(updatePosition);\n\n  // Reposition the overlay and do not close on scroll while the visual viewport is resizing.\n  // This will ensure that overlays adjust their positioning when the iOS virtual keyboard appears.\n  let isResizing = useRef(false);\n  useLayoutEffect(() => {\n    let timeout: NodeJS.Timeout;\n    let onResize = () => {\n      isResizing.current = true;\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        isResizing.current = false;\n      }, 500);\n\n      updatePosition();\n    };\n\n    visualViewport?.addEventListener('resize', onResize);\n\n    return () => {\n      visualViewport?.removeEventListener('resize', onResize);\n    };\n  }, [updatePosition]);\n\n  let close = useCallback(() => {\n    if (!isResizing.current) {\n      onClose();\n    }\n  }, [onClose, isResizing]);\n\n  // When scrolling a parent scrollable region of the trigger (other than the body),\n  // we hide the popover. Otherwise, its position would be incorrect.\n  useCloseOnScroll({\n    triggerRef: targetRef,\n    isOpen,\n    onClose: onClose ? close : undefined,\n  });\n\n  return {\n    rendered: true,\n    overlayProps: {\n      style: {\n        position: 'absolute',\n        zIndex: 100000, // should match the z-index in ModalTrigger\n        ...position.position,\n        maxHeight: position.maxHeight,\n      },\n    },\n    placement: position.placement,\n    arrowProps: {\n      style: {\n        left: position.arrowOffsetLeft,\n        top: position.arrowOffsetTop,\n      },\n    },\n    updatePosition,\n  };\n}\n\nfunction useResize(onResize) {\n  useLayoutEffect(() => {\n    window.addEventListener('resize', onResize, false);\n    return () => {\n      window.removeEventListener('resize', onResize, false);\n    };\n  }, [onResize]);\n}\n\nfunction translateRTL(position, direction) {\n  if (direction === 'rtl') {\n    return position.replace('start', 'right').replace('end', 'left');\n  }\n  return position.replace('start', 'left').replace('end', 'right');\n}\n"]},"metadata":{},"sourceType":"module"}