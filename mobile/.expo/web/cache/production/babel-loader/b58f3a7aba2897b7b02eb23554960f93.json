{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"style\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useEffect}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";var PortalContext=React.createContext(null);var globalOverlayCounter=0;export function PortalProvider(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),items=_React$useState2[0],setItems=_React$useState2[1];var setOverlayItem=function setOverlayItem(item){var overlayId=++globalOverlayCounter;setItems(function(prev){return prev.concat([{id:overlayId,node:item}]);});return overlayId;};var updateOverlayItem=function updateOverlayItem(id,node){setItems(function(prev){return prev.map(function(item){if(item.id===id){return{id:id,node:node};}return item;});});};var removeOverlayItem=function removeOverlayItem(id){setItems(function(prev){var newItems=prev.filter(function(item){return item.id!==id;});return newItems;});};return React.createElement(PortalContext.Provider,{value:{items:items,setOverlayItem:setOverlayItem,removeOverlayItem:removeOverlayItem,updateOverlayItem:updateOverlayItem}},props.children,items.map(function(item){return React.createElement(React.Fragment,{key:item.id},item.node);}));}function OverlayView(_ref){var style=_ref.style,props=_objectWithoutProperties(_ref,_excluded);return React.createElement(View,_extends({pointerEvents:\"box-none\",style:[StyleSheet.absoluteFill,style],collapsable:false},props));}export var OverlayProvider=PortalProvider;export function OverlayContainer(props){var context=usePortalProvider();var overlayId=React.useRef(undefined);var contents=React.createElement(OverlayView,props);useEffect(function(){if(overlayId.current===undefined){overlayId.current=context===null||context===void 0?void 0:context.setOverlayItem(contents);}else{if(overlayId.current){context===null||context===void 0?void 0:context.updateOverlayItem(overlayId.current,contents);}}},[props]);useEffect(function(){return function(){if(overlayId.current){context===null||context===void 0?void 0:context.removeOverlayItem(overlayId.current);}};},[]);return null;}function usePortalProvider(){var context=React.useContext(PortalContext);return context;}","map":{"version":3,"mappings":"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","names":["React","useEffect","PortalContext","createContext","globalOverlayCounter","PortalProvider","props","useState","items","setItems","setOverlayItem","item","overlayId","prev","concat","id","node","updateOverlayItem","map","removeOverlayItem","newItems","filter","Provider","value","children","Fragment","key","OverlayView","style","View","pointerEvents","StyleSheet","absoluteFill","collapsable","OverlayProvider","OverlayContainer","context","usePortalProvider","useRef","undefined","contents","current","useContext"],"sources":["Portal.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport type { ReactNode } from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\n\ntype OverlayItem = {\n  id: number;\n  node: ReactNode;\n};\n\ninterface PortalContext {\n  items: Array<OverlayItem>;\n  setOverlayItem: (node: ReactNode) => number;\n  removeOverlayItem: (id: number) => void;\n  updateOverlayItem: (id: number, node: ReactNode) => void;\n}\n\ninterface ModalProviderProps extends ViewProps {\n  children: ReactNode;\n  provider?: boolean;\n}\n\nconst PortalContext = React.createContext<PortalContext | null>(null);\n\nlet globalOverlayCounter = 0;\n\nexport function PortalProvider(props: { children: ReactNode }) {\n  const [items, setItems] = React.useState<Array<OverlayItem>>([]);\n\n  const setOverlayItem = (item: ReactNode) => {\n    const overlayId = ++globalOverlayCounter;\n    setItems((prev) => prev.concat([{ id: overlayId, node: item }]));\n    return overlayId;\n  };\n\n  const updateOverlayItem = (id: number, node: ReactNode) => {\n    setItems((prev) =>\n      prev.map((item) => {\n        if (item.id === id) {\n          return { id, node };\n        }\n        return item;\n      })\n    );\n  };\n\n  const removeOverlayItem = (id: number) => {\n    setItems((prev) => {\n      const newItems = prev.filter((item) => item.id !== id);\n      return newItems;\n    });\n  };\n\n  return (\n    <PortalContext.Provider\n      value={{ items, setOverlayItem, removeOverlayItem, updateOverlayItem }}\n    >\n      {props.children}\n\n      {/* Render Overlays */}\n      {items.map((item) => {\n        return <React.Fragment key={item.id}>{item.node}</React.Fragment>;\n      })}\n    </PortalContext.Provider>\n  );\n}\n\nfunction OverlayView({style, ...props}: ModalProviderProps) {\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[StyleSheet.absoluteFill, style]}\n      collapsable={false}\n      {...props}\n    />\n  );\n}\n\nexport const OverlayProvider = PortalProvider;\n\nexport function OverlayContainer(props: ModalProviderProps) {\n  const context = usePortalProvider();\n  const overlayId = React.useRef<number | undefined>(undefined);\n  let contents = <OverlayView {...props} />;\n\n  useEffect(\n    () => {\n      // Mount\n      if (overlayId.current === undefined) {\n        overlayId.current = context?.setOverlayItem(contents);\n      }\n      // Update\n      else {\n        if (overlayId.current) {\n          context?.updateOverlayItem(overlayId.current, contents);\n        }\n      }\n    },\n    // To re-render the child\n    [props]\n  );\n\n  // Unmount\n  useEffect(() => {\n    return () => {\n      if (overlayId.current) {\n        context?.removeOverlayItem(overlayId.current);\n      }\n    };\n  }, []);\n\n  return null;\n}\n\nfunction usePortalProvider() {\n  const context = React.useContext(PortalContext);\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}