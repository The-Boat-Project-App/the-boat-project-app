{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{mergeProps as $7CUUz$mergeProps,filterDOMProps as $7CUUz$filterDOMProps}from\"@react-aria/utils\";import{useFocusable as $7CUUz$useFocusable}from\"@react-aria/focus\";import{usePress as $7CUUz$usePress}from\"@react-aria/interactions\";function $d2c8e2b0480f3f34$export$cbe85ee05b554577(props,state,ref){var _props$isDisabled=props.isDisabled,isDisabled=_props$isDisabled===void 0?false:_props$isDisabled,isRequired=props.isRequired,isReadOnly=props.isReadOnly,value=props.value,name=props.name,children=props.children,ariaLabel=props['aria-label'],ariaLabelledby=props['aria-labelledby'],_props$validationStat=props.validationState,validationState=_props$validationStat===void 0?'valid':_props$validationStat;var onChange=function onChange(e){e.stopPropagation();state.setSelected(e.target.checked);};var hasChildren=children!=null;var hasAriaLabel=ariaLabel!=null||ariaLabelledby!=null;if(!hasChildren&&!hasAriaLabel)console.warn('If you do not provide children, you must specify an aria-label for accessibility');var _$7CUUz$usePress=$7CUUz$usePress({isDisabled:isDisabled}),pressProps=_$7CUUz$usePress.pressProps;var _$7CUUz$useFocusable=$7CUUz$useFocusable(props,ref),focusableProps=_$7CUUz$useFocusable.focusableProps;var interactions=$7CUUz$mergeProps(pressProps,focusableProps);var domProps=$7CUUz$filterDOMProps(props,{labelable:true});return{inputProps:$7CUUz$mergeProps(domProps,_objectSpread(_objectSpread({'aria-invalid':validationState==='invalid'||undefined,'aria-errormessage':props['aria-errormessage'],'aria-controls':props['aria-controls'],'aria-readonly':isReadOnly||undefined,'aria-required':isRequired||undefined,onChange:onChange,disabled:isDisabled},value==null?{}:{value:value}),{},{name:name,type:'checkbox'},interactions))};}export{$d2c8e2b0480f3f34$export$cbe85ee05b554577 as useToggle};","map":{"version":3,"mappings":"4jCA6BgBA,2CAAUC,MAAwBC,MAAoBC,IAA8C,CAClH,sBAUIF,KAVJ,CAAKG,UAAL,CACEA,UADF,4BACe,KADf,mBAEEC,UAFF,CAUIJ,KAVJ,CACoBI,UADpB,CAGEC,UAHF,CAUIL,KAVJ,CAEYK,UAFZ,CAIEC,KAJF,CAUIN,KAVJ,CAGYM,KAHZ,CAKEC,IALF,CAUIP,KAVJ,CAIOO,IAJP,CAMEC,QANF,CAUIR,KAVJ,CAKMQ,QALN,CAOgBC,SAPhB,CAUIT,KAVJ,CAOE,YAPF,EAQqBU,cARrB,CAUIV,KAVJ,CAQE,iBARF,wBAUIA,KAVJ,CAQmCW,eARnC,CASEA,eATF,gCASoB,OATpB,uBAYA,GAAIC,SAAQ,SAARA,SAAQ,CAAIC,CAAJ,CAAU,CAGpBA,CAAC,CAACC,eAAF,GACAb,KAAK,CAACc,WAAN,CAAkBF,CAAC,CAACG,MAAF,CAASC,OAA3B,EACD,CALD,CAOA,GAAIC,YAAW,CAAGV,QAAQ,EAAI,IAA9B,CACA,GAAIW,aAAY,CAAGV,SAAS,EAAI,IAAb,EAAqBC,cAAc,EAAI,IAA1D,CACA,GAAE,CAAGQ,WAAH,EAAc,CAAKC,YAArB,CACEC,OAAO,CAACC,IAAR,CAAa,kFAAb,EAIF,qBAAmBC,eAAQ,CAAC,YAC1BnB,UAD0B,CAAD,CAA3B,CAAKoB,UAAL,kBAAKA,UAAL,CAIA,yBAAuBC,mBAAY,CAACxB,KAAD,CAAQE,GAAR,CAAnC,CAAKuB,cAAL,sBAAKA,cAAL,CACA,GAAIC,aAAY,CAAGC,iBAAU,CAACJ,UAAD,CAAaE,cAAb,CAA7B,CACA,GAAIG,SAAQ,CAAGC,qBAAc,CAAC7B,KAAD,CAAQ,CAAC8B,SAAS,CAAE,IAAZ,CAAR,CAA7B,CAEA,MAAO,CACLC,UAAU,CAAEJ,iBAAU,CAACC,QAAD,8BACpB,eAAgBjB,eAAe,GAAK,SAApB,EAAiCqB,SAD7B,CAEpB,oBAAqBhC,KAAK,CAAC,mBAAD,CAFN,CAGpB,gBAAiBA,KAAK,CAAC,eAAD,CAHF,CAIpB,gBAAiBK,UAAU,EAAI2B,SAJX,CAKpB,gBAAiB5B,UAAU,EAAI4B,SALX,UAMpBpB,QANoB,CAOpBqB,QAAQ,CAAE9B,UAPU,EAQhBG,KAAK,EAAI,IAAT,CAAgB,EAAhB,CAAqB,OAACA,KAAD,CARL,WASpBC,IAToB,CAUpB2B,IAAI,CAAE,UAVc,EAWjBR,YAXiB,EADjB,CAAP,CAeD","names":["$d2c8e2b0480f3f34$export$cbe85ee05b554577","props","state","ref","isDisabled","isRequired","isReadOnly","value","name","children","ariaLabel","ariaLabelledby","validationState","onChange","e","stopPropagation","setSelected","target","checked","hasChildren","hasAriaLabel","console","warn","$7CUUz$usePress","pressProps","$7CUUz$useFocusable","focusableProps","interactions","$7CUUz$mergeProps","domProps","$7CUUz$filterDOMProps","labelable","inputProps","undefined","disabled","type"],"sources":["packages/@react-aria/toggle/src/useToggle.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaToggleProps} from '@react-types/checkbox';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {InputHTMLAttributes, RefObject} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface ToggleAria {\n  /**\n   * Props to be spread on the input element.\n   */\n  inputProps: InputHTMLAttributes<HTMLInputElement>\n}\n\n/**\n * Handles interactions for toggle elements, e.g. Checkboxes and Switches.\n */\nexport function useToggle(props: AriaToggleProps, state: ToggleState, ref: RefObject<HTMLInputElement>): ToggleAria {\n  let {\n    isDisabled = false,\n    isRequired,\n    isReadOnly,\n    value,\n    name,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    validationState = 'valid'\n  } = props;\n\n  let onChange = (e) => {\n    // since we spread props on label, onChange will end up there as well as in here.\n    // so we have to stop propagation at the lowest level that we care about\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  // This handles focusing the input on pointer down, which Safari does not do by default.\n  let {pressProps} = usePress({\n    isDisabled\n  });\n\n  let {focusableProps} = useFocusable(props, ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  return {\n    inputProps: mergeProps(domProps, {\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-controls': props['aria-controls'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      onChange,\n      disabled: isDisabled,\n      ...(value == null ? {} : {value}),\n      name,\n      type: 'checkbox',\n      ...interactions\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}