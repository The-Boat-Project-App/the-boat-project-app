{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _wrapNativeSuper from\"@babel/runtime/helpers/wrapNativeSuper\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{useRef as $Qsto2$useRef,useState as $Qsto2$useState,useMemo as $Qsto2$useMemo,useEffect as $Qsto2$useEffect}from\"react\";import{useControlledState as $Qsto2$useControlledState}from\"@react-stately/utils\";var $e40ea825a81a3709$export$52baac22726c72bf=function(_Set){_inherits($e40ea825a81a3709$export$52baac22726c72bf,_Set);var _super=_createSuper($e40ea825a81a3709$export$52baac22726c72bf);function $e40ea825a81a3709$export$52baac22726c72bf(keys,anchorKey,currentKey){var _this;_classCallCheck(this,$e40ea825a81a3709$export$52baac22726c72bf);_this=_super.call(this,keys);if(keys instanceof $e40ea825a81a3709$export$52baac22726c72bf){_this.anchorKey=anchorKey||keys.anchorKey;_this.currentKey=currentKey||keys.currentKey;}else{_this.anchorKey=anchorKey;_this.currentKey=currentKey;}return _this;}return _createClass($e40ea825a81a3709$export$52baac22726c72bf);}(_wrapNativeSuper(Set));function $7af3f5b51489e0b5$var$equalSets(setA,setB){if(setA.size!==setB.size)return false;for(var item of setA){if(!setB.has(item))return false;}return true;}function $7af3f5b51489e0b5$export$253fe78d46329472(props){var _props$selectionMode=props.selectionMode,selectionMode=_props$selectionMode===void 0?'none':_props$selectionMode,disallowEmptySelection=props.disallowEmptySelection,allowDuplicateSelectionEvents=props.allowDuplicateSelectionEvents,_props$selectionBehav=props.selectionBehavior,selectionBehaviorProp=_props$selectionBehav===void 0?'toggle':_props$selectionBehav,_props$disabledBehavi=props.disabledBehavior,disabledBehavior=_props$disabledBehavi===void 0?'all':_props$disabledBehavi;var isFocusedRef=$Qsto2$useRef(false);var _$Qsto2$useState=$Qsto2$useState(false),_$Qsto2$useState2=_slicedToArray(_$Qsto2$useState,2),_setFocused=_$Qsto2$useState2[1];var focusedKeyRef=$Qsto2$useRef(null);var childFocusStrategyRef=$Qsto2$useRef(null);var _$Qsto2$useState3=$Qsto2$useState(null),_$Qsto2$useState4=_slicedToArray(_$Qsto2$useState3,2),_setFocusedKey=_$Qsto2$useState4[1];var selectedKeysProp=$Qsto2$useMemo(function(){return $7af3f5b51489e0b5$var$convertSelection(props.selectedKeys);},[props.selectedKeys]);var defaultSelectedKeys=$Qsto2$useMemo(function(){return $7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys,new $e40ea825a81a3709$export$52baac22726c72bf());},[props.defaultSelectedKeys]);var _$Qsto2$useControlled=$Qsto2$useControlledState(selectedKeysProp,defaultSelectedKeys,props.onSelectionChange),_$Qsto2$useControlled2=_slicedToArray(_$Qsto2$useControlled,2),selectedKeys=_$Qsto2$useControlled2[0],_setSelectedKeys=_$Qsto2$useControlled2[1];var disabledKeysProp=$Qsto2$useMemo(function(){return props.disabledKeys?new Set(props.disabledKeys):new Set();},[props.disabledKeys]);var _$Qsto2$useState5=$Qsto2$useState(selectionBehaviorProp),_$Qsto2$useState6=_slicedToArray(_$Qsto2$useState5,2),selectionBehavior=_$Qsto2$useState6[0],setSelectionBehavior=_$Qsto2$useState6[1];if(selectionBehaviorProp==='replace'&&selectionBehavior==='toggle'&&typeof selectedKeys==='object'&&selectedKeys.size===0)setSelectionBehavior('replace');var lastSelectionBehavior=$Qsto2$useRef(selectionBehaviorProp);$Qsto2$useEffect(function(){if(selectionBehaviorProp!==lastSelectionBehavior.current){setSelectionBehavior(selectionBehaviorProp);lastSelectionBehavior.current=selectionBehaviorProp;}},[selectionBehaviorProp]);return{selectionMode:selectionMode,disallowEmptySelection:disallowEmptySelection,selectionBehavior:selectionBehavior,setSelectionBehavior:setSelectionBehavior,get isFocused(){return isFocusedRef.current;},setFocused:function setFocused(f){isFocusedRef.current=f;_setFocused(f);},get focusedKey(){return focusedKeyRef.current;},get childFocusStrategy(){return childFocusStrategyRef.current;},setFocusedKey:function setFocusedKey(k){var childFocusStrategy=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'first';focusedKeyRef.current=k;childFocusStrategyRef.current=childFocusStrategy;_setFocusedKey(k);},selectedKeys:selectedKeys,setSelectedKeys:function setSelectedKeys(keys){if(allowDuplicateSelectionEvents||!$7af3f5b51489e0b5$var$equalSets(keys,selectedKeys))_setSelectedKeys(keys);},disabledKeys:disabledKeysProp,disabledBehavior:disabledBehavior};}function $7af3f5b51489e0b5$var$convertSelection(selection,defaultValue){if(!selection)return defaultValue;return selection==='all'?'all':new $e40ea825a81a3709$export$52baac22726c72bf(selection);}var $d496c0a20b6e58ec$export$6c8a5aaad13c9852=function(){function $d496c0a20b6e58ec$export$6c8a5aaad13c9852(collection,state,options){_classCallCheck(this,$d496c0a20b6e58ec$export$6c8a5aaad13c9852);this.collection=collection;this.state=state;var ref;this.allowsCellSelection=(ref=options===null||options===void 0?void 0:options.allowsCellSelection)!==null&&ref!==void 0?ref:false;this._isSelectAll=null;}_createClass($d496c0a20b6e58ec$export$6c8a5aaad13c9852,[{key:\"selectionMode\",get:function get(){return this.state.selectionMode;}},{key:\"disallowEmptySelection\",get:function get(){return this.state.disallowEmptySelection;}},{key:\"selectionBehavior\",get:function get(){return this.state.selectionBehavior;}},{key:\"setSelectionBehavior\",value:function setSelectionBehavior(selectionBehavior){this.state.setSelectionBehavior(selectionBehavior);}},{key:\"isFocused\",get:function get(){return this.state.isFocused;}},{key:\"setFocused\",value:function setFocused(isFocused){this.state.setFocused(isFocused);}},{key:\"focusedKey\",get:function get(){return this.state.focusedKey;}},{key:\"childFocusStrategy\",get:function get(){return this.state.childFocusStrategy;}},{key:\"setFocusedKey\",value:function setFocusedKey(key,childFocusStrategy){if(key==null||this.collection.getItem(key))this.state.setFocusedKey(key,childFocusStrategy);}},{key:\"selectedKeys\",get:function get(){return this.state.selectedKeys==='all'?new Set(this.getSelectAllKeys()):this.state.selectedKeys;}},{key:\"rawSelection\",get:function get(){return this.state.selectedKeys;}},{key:\"isSelected\",value:function isSelected(key){if(this.state.selectionMode==='none')return false;key=this.getKey(key);return this.state.selectedKeys==='all'?this.canSelectItem(key):this.state.selectedKeys.has(key);}},{key:\"isEmpty\",get:function get(){return this.state.selectedKeys!=='all'&&this.state.selectedKeys.size===0;}},{key:\"isSelectAll\",get:function get(){if(this.isEmpty)return false;if(this.state.selectedKeys==='all')return true;if(this._isSelectAll!=null)return this._isSelectAll;var allKeys=this.getSelectAllKeys();var selectedKeys=this.state.selectedKeys;this._isSelectAll=allKeys.every(function(k){return selectedKeys.has(k);});return this._isSelectAll;}},{key:\"firstSelectedKey\",get:function get(){var first=null;for(var key of this.state.selectedKeys){var item=this.collection.getItem(key);if(!first||(item===null||item===void 0?void 0:item.index)<first.index)first=item;}return first===null||first===void 0?void 0:first.key;}},{key:\"lastSelectedKey\",get:function get(){var last=null;for(var key of this.state.selectedKeys){var item=this.collection.getItem(key);if(!last||(item===null||item===void 0?void 0:item.index)>last.index)last=item;}return last===null||last===void 0?void 0:last.key;}},{key:\"disabledKeys\",get:function get(){return this.state.disabledKeys;}},{key:\"disabledBehavior\",get:function get(){return this.state.disabledBehavior;}},{key:\"extendSelection\",value:function extendSelection(toKey){if(this.selectionMode==='none')return;if(this.selectionMode==='single'){this.replaceSelection(toKey);return;}toKey=this.getKey(toKey);var selection;if(this.state.selectedKeys==='all')selection=new $e40ea825a81a3709$export$52baac22726c72bf([toKey],toKey,toKey);else{var selectedKeys=this.state.selectedKeys;var anchorKey=selectedKeys.anchorKey||toKey;selection=new $e40ea825a81a3709$export$52baac22726c72bf(selectedKeys,anchorKey,toKey);for(var key of this.getKeyRange(anchorKey,selectedKeys.currentKey||toKey)){selection.delete(key);}for(var key1 of this.getKeyRange(toKey,anchorKey)){if(this.canSelectItem(key1))selection.add(key1);}}this.state.setSelectedKeys(selection);}},{key:\"getKeyRange\",value:function getKeyRange(from,to){var fromItem=this.collection.getItem(from);var toItem=this.collection.getItem(to);if(fromItem&&toItem){if(fromItem.index<=toItem.index)return this.getKeyRangeInternal(from,to);return this.getKeyRangeInternal(to,from);}return[];}},{key:\"getKeyRangeInternal\",value:function getKeyRangeInternal(from,to){var keys=[];var key=from;while(key){var item=this.collection.getItem(key);if(item&&item.type==='item'||item.type==='cell'&&this.allowsCellSelection)keys.push(key);if(key===to)return keys;key=this.collection.getKeyAfter(key);}return[];}},{key:\"getKey\",value:function getKey(key){var item=this.collection.getItem(key);if(!item)return key;if(item.type==='cell'&&this.allowsCellSelection)return key;while(item.type!=='item'&&item.parentKey!=null){item=this.collection.getItem(item.parentKey);}if(!item||item.type!=='item')return null;return item.key;}},{key:\"toggleSelection\",value:function toggleSelection(key){if(this.selectionMode==='none')return;if(this.selectionMode==='single'&&!this.isSelected(key)){this.replaceSelection(key);return;}key=this.getKey(key);if(key==null)return;var keys=new $e40ea825a81a3709$export$52baac22726c72bf(this.state.selectedKeys==='all'?this.getSelectAllKeys():this.state.selectedKeys);if(keys.has(key))keys.delete(key);else if(this.canSelectItem(key)){keys.add(key);keys.anchorKey=key;keys.currentKey=key;}if(this.disallowEmptySelection&&keys.size===0)return;this.state.setSelectedKeys(keys);}},{key:\"replaceSelection\",value:function replaceSelection(key){if(this.selectionMode==='none')return;key=this.getKey(key);if(key==null)return;var selection=this.canSelectItem(key)?new $e40ea825a81a3709$export$52baac22726c72bf([key],key,key):new $e40ea825a81a3709$export$52baac22726c72bf();this.state.setSelectedKeys(selection);}},{key:\"setSelectedKeys\",value:function setSelectedKeys(keys){if(this.selectionMode==='none')return;var selection=new $e40ea825a81a3709$export$52baac22726c72bf();for(var key of keys){key=this.getKey(key);if(key!=null){selection.add(key);if(this.selectionMode==='single')break;}}this.state.setSelectedKeys(selection);}},{key:\"getSelectAllKeys\",value:function getSelectAllKeys(){var _this2=this;var keys=[];var addKeys=function addKeys(key){while(key){if(_this2.canSelectItem(key)){var item=_this2.collection.getItem(key);if(item.type==='item')keys.push(key);if(item.hasChildNodes&&(_this2.allowsCellSelection||item.type!=='item'))addKeys(_toConsumableArray(item.childNodes)[0].key);}key=_this2.collection.getKeyAfter(key);}};addKeys(this.collection.getFirstKey());return keys;}},{key:\"selectAll\",value:function selectAll(){if(this.selectionMode==='multiple')this.state.setSelectedKeys('all');}},{key:\"clearSelection\",value:function clearSelection(){if(!this.disallowEmptySelection&&(this.state.selectedKeys==='all'||this.state.selectedKeys.size>0))this.state.setSelectedKeys(new $e40ea825a81a3709$export$52baac22726c72bf());}},{key:\"toggleSelectAll\",value:function toggleSelectAll(){if(this.isSelectAll)this.clearSelection();else this.selectAll();}},{key:\"select\",value:function select(key,e){if(this.selectionMode==='none')return;if(this.selectionMode==='single'){if(this.isSelected(key)&&!this.disallowEmptySelection)this.toggleSelection(key);else this.replaceSelection(key);}else if(this.selectionBehavior==='toggle'||e&&(e.pointerType==='touch'||e.pointerType==='virtual'))this.toggleSelection(key);else this.replaceSelection(key);}},{key:\"isSelectionEqual\",value:function isSelectionEqual(selection){if(selection===this.state.selectedKeys)return true;var selectedKeys=this.selectedKeys;if(selection.size!==selectedKeys.size)return false;for(var key of selection){if(!selectedKeys.has(key))return false;}for(var key2 of selectedKeys){if(!selection.has(key2))return false;}return true;}},{key:\"canSelectItem\",value:function canSelectItem(key){if(this.state.selectionMode==='none'||this.state.disabledKeys.has(key))return false;var item=this.collection.getItem(key);if(!item||item.type==='cell'&&!this.allowsCellSelection)return false;return true;}},{key:\"isDisabled\",value:function isDisabled(key){return this.state.disabledKeys.has(key)&&this.state.disabledBehavior==='all';}}]);return $d496c0a20b6e58ec$export$6c8a5aaad13c9852;}();export{$7af3f5b51489e0b5$export$253fe78d46329472 as useMultipleSelectionState,$d496c0a20b6e58ec$export$6c8a5aaad13c9852 as SelectionManager};","map":{"version":3,"mappings":"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","names":["$e40ea825a81a3709$export$52baac22726c72bf","keys","anchorKey","currentKey","Set","$7af3f5b51489e0b5$var$equalSets","setA","setB","size","item","has","$7af3f5b51489e0b5$export$253fe78d46329472","props","selectionMode","disallowEmptySelection","allowDuplicateSelectionEvents","selectionBehavior","selectionBehaviorProp","disabledBehavior","isFocusedRef","$Qsto2$useRef","$Qsto2$useState","setFocused","focusedKeyRef","childFocusStrategyRef","setFocusedKey","selectedKeysProp","$Qsto2$useMemo","$7af3f5b51489e0b5$var$convertSelection","selectedKeys","defaultSelectedKeys","$Qsto2$useControlledState","onSelectionChange","setSelectedKeys","disabledKeysProp","disabledKeys","setSelectionBehavior","lastSelectionBehavior","$Qsto2$useEffect","current","isFocused","f","focusedKey","childFocusStrategy","k","selection","defaultValue","$d496c0a20b6e58ec$export$6c8a5aaad13c9852","collection","state","options","ref","allowsCellSelection","_isSelectAll","key","getItem","getSelectAllKeys","getKey","canSelectItem","isEmpty","allKeys","every","first","index","last","toKey","replaceSelection","getKeyRange","delete","key1","add","from","to","fromItem","toItem","getKeyRangeInternal","type","push","getKeyAfter","parentKey","isSelected","addKeys","hasChildNodes","childNodes","getFirstKey","isSelectAll","clearSelection","selectAll","e","toggleSelection","pointerType","key2"],"sources":["packages/@react-stately/selection/src/Selection.ts","packages/@react-stately/selection/src/useMultipleSelectionState.ts","packages/@react-stately/selection/src/SelectionManager.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from 'react';\n\n/**\n * A Selection is a special Set containing Keys, which also has an anchor\n * and current selected key for use when range selecting.\n */\nexport class Selection extends Set<Key> {\n  anchorKey: Key;\n  currentKey: Key;\n\n  constructor(keys?: Iterable<Key> | Selection, anchorKey?: Key, currentKey?: Key) {\n    super(keys);\n    if (keys instanceof Selection) {\n      this.anchorKey = anchorKey || keys.anchorKey;\n      this.currentKey = currentKey || keys.currentKey;\n    } else {\n      this.anchorKey = anchorKey;\n      this.currentKey = currentKey;\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DisabledBehavior, MultipleSelection, SelectionBehavior, SelectionMode} from '@react-types/shared';\nimport {Key, useEffect, useMemo, useRef, useState} from 'react';\nimport {MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\nimport {useControlledState} from '@react-stately/utils';\n\nfunction equalSets(setA, setB) {\n  if (setA.size !== setB.size) {\n    return false;\n  }\n\n  for (let item of setA) {\n    if (!setB.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport interface MultipleSelectionStateProps extends MultipleSelection {\n  /** How multiple selection should behave in the collection. */\n  selectionBehavior?: SelectionBehavior,\n  /** Whether onSelectionChange should fire even if the new set of keys is the same as the last. */\n  allowDuplicateSelectionEvents?: boolean,\n  /** Whether `disabledKeys` applies to all interactions, or only selection. */\n  disabledBehavior?: DisabledBehavior\n}\n\n/**\n * Manages state for multiple selection and focus in a collection.\n */\nexport function useMultipleSelectionState(props: MultipleSelectionStateProps): MultipleSelectionState {\n  let {\n    selectionMode = 'none' as SelectionMode,\n    disallowEmptySelection,\n    allowDuplicateSelectionEvents,\n    selectionBehavior: selectionBehaviorProp = 'toggle',\n    disabledBehavior = 'all'\n  } = props;\n\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a react re-render. So, we have both a ref (sync) and state (async).\n  let isFocusedRef = useRef(false);\n  let [, setFocused] = useState(false);\n  let focusedKeyRef = useRef(null);\n  let childFocusStrategyRef = useRef(null);\n  let [, setFocusedKey] = useState(null);\n  let selectedKeysProp = useMemo(() => convertSelection(props.selectedKeys), [props.selectedKeys]);\n  let defaultSelectedKeys = useMemo(() => convertSelection(props.defaultSelectedKeys, new Selection()), [props.defaultSelectedKeys]);\n  let [selectedKeys, setSelectedKeys] = useControlledState(\n    selectedKeysProp,\n    defaultSelectedKeys,\n    props.onSelectionChange\n  );\n  let disabledKeysProp = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n  let [selectionBehavior, setSelectionBehavior] = useState(selectionBehaviorProp);\n\n  // If the selectionBehavior prop is set to replace, but the current state is toggle (e.g. due to long press\n  // to enter selection mode on touch), and the selection becomes empty, reset the selection behavior.\n  if (selectionBehaviorProp === 'replace' && selectionBehavior === 'toggle' && typeof selectedKeys === 'object' && selectedKeys.size === 0) {\n    setSelectionBehavior('replace');\n  }\n\n  // If the selectionBehavior prop changes, update the state as well.\n  let lastSelectionBehavior = useRef(selectionBehaviorProp);\n  useEffect(() => {\n    if (selectionBehaviorProp !== lastSelectionBehavior.current) {\n      setSelectionBehavior(selectionBehaviorProp);\n      lastSelectionBehavior.current = selectionBehaviorProp;\n    }\n  }, [selectionBehaviorProp]);\n\n  return {\n    selectionMode,\n    disallowEmptySelection,\n    selectionBehavior,\n    setSelectionBehavior,\n    get isFocused() {\n      return isFocusedRef.current;\n    },\n    setFocused(f) {\n      isFocusedRef.current = f;\n      setFocused(f);\n    },\n    get focusedKey() {\n      return focusedKeyRef.current;\n    },\n    get childFocusStrategy() {\n      return childFocusStrategyRef.current;\n    },\n    setFocusedKey(k, childFocusStrategy = 'first') {\n      focusedKeyRef.current = k;\n      childFocusStrategyRef.current = childFocusStrategy;\n      setFocusedKey(k);\n    },\n    selectedKeys,\n    setSelectedKeys(keys) {\n      if (allowDuplicateSelectionEvents || !equalSets(keys, selectedKeys)) {\n        setSelectedKeys(keys);\n      }\n    },\n    disabledKeys: disabledKeysProp,\n    disabledBehavior\n  };\n}\n\nfunction convertSelection(selection: 'all' | Iterable<Key>, defaultValue?: Selection): 'all' | Selection {\n  if (!selection) {\n    return defaultValue;\n  }\n\n  return selection === 'all'\n    ? 'all'\n    : new Selection(selection);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  Collection,\n  DisabledBehavior,\n  FocusStrategy,\n  Selection as ISelection,\n  LongPressEvent,\n  Node,\n  PressEvent,\n  SelectionBehavior,\n  SelectionMode\n} from '@react-types/shared';\nimport {Key} from 'react';\nimport {MultipleSelectionManager, MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\n\ninterface SelectionManagerOptions {\n  allowsCellSelection?: boolean\n}\n\n/**\n * An interface for reading and updating multiple selection state.\n */\nexport class SelectionManager implements MultipleSelectionManager {\n  private collection: Collection<Node<unknown>>;\n  private state: MultipleSelectionState;\n  private allowsCellSelection: boolean;\n  private _isSelectAll: boolean;\n\n  constructor(collection: Collection<Node<unknown>>, state: MultipleSelectionState, options?: SelectionManagerOptions) {\n    this.collection = collection;\n    this.state = state;\n    this.allowsCellSelection = options?.allowsCellSelection ?? false;\n    this._isSelectAll = null;\n  }\n\n  /**\n   * The type of selection that is allowed in the collection.\n   */\n  get selectionMode(): SelectionMode {\n    return this.state.selectionMode;\n  }\n\n  /**\n   * Whether the collection allows empty selection.\n   */\n  get disallowEmptySelection(): boolean {\n    return this.state.disallowEmptySelection;\n  }\n\n  /**\n   * The selection behavior for the collection.\n   */\n  get selectionBehavior(): SelectionBehavior {\n    return this.state.selectionBehavior;\n  }\n\n  /**\n   * Sets the selection behavior for the collection.\n   */\n  setSelectionBehavior(selectionBehavior: SelectionBehavior) {\n    this.state.setSelectionBehavior(selectionBehavior);\n  }\n\n  /**\n   * Whether the collection is currently focused.\n   */\n  get isFocused(): boolean {\n    return this.state.isFocused;\n  }\n\n  /**\n   * Sets whether the collection is focused.\n   */\n  setFocused(isFocused: boolean) {\n    this.state.setFocused(isFocused);\n  }\n\n  /**\n   * The current focused key in the collection.\n   */\n  get focusedKey(): Key {\n    return this.state.focusedKey;\n  }\n\n  /** Whether the first or last child of the focused key should receive focus. */\n  get childFocusStrategy(): FocusStrategy {\n    return this.state.childFocusStrategy;\n  }\n\n  /**\n   * Sets the focused key.\n   */\n  setFocusedKey(key: Key, childFocusStrategy?: FocusStrategy) {\n    if (key == null || this.collection.getItem(key)) {\n      this.state.setFocusedKey(key, childFocusStrategy);\n    }\n  }\n\n  /**\n   * The currently selected keys in the collection.\n   */\n  get selectedKeys(): Set<Key> {\n    return this.state.selectedKeys === 'all'\n      ? new Set(this.getSelectAllKeys())\n      : this.state.selectedKeys;\n  }\n\n  /**\n   * The raw selection value for the collection.\n   * Either 'all' for select all, or a set of keys.\n   */\n  get rawSelection(): ISelection {\n    return this.state.selectedKeys;\n  }\n\n  /**\n   * Returns whether a key is selected.\n   */\n  isSelected(key: Key) {\n    if (this.state.selectionMode === 'none') {\n      return false;\n    }\n\n    key = this.getKey(key);\n    return this.state.selectedKeys === 'all'\n      ? this.canSelectItem(key)\n      : this.state.selectedKeys.has(key);\n  }\n\n  /**\n   * Whether the selection is empty.\n   */\n  get isEmpty(): boolean {\n    return this.state.selectedKeys !== 'all' && this.state.selectedKeys.size === 0;\n  }\n\n  /**\n   * Whether all items in the collection are selected.\n   */\n  get isSelectAll(): boolean {\n    if (this.isEmpty) {\n      return false;\n    }\n\n    if (this.state.selectedKeys === 'all') {\n      return true;\n    }\n\n    if (this._isSelectAll != null) {\n      return this._isSelectAll;\n    }\n\n    let allKeys = this.getSelectAllKeys();\n    let selectedKeys = this.state.selectedKeys;\n    this._isSelectAll = allKeys.every(k => selectedKeys.has(k));\n    return this._isSelectAll;\n  }\n\n  get firstSelectedKey(): Key | null {\n    let first: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!first || item?.index < first.index) {\n        first = item;\n      }\n    }\n\n    return first?.key;\n  }\n\n  get lastSelectedKey(): Key | null {\n    let last: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!last || item?.index > last.index) {\n        last = item;\n      }\n    }\n\n    return last?.key;\n  }\n\n  get disabledKeys(): Set<Key> {\n    return this.state.disabledKeys;\n  }\n\n  get disabledBehavior(): DisabledBehavior {\n    return this.state.disabledBehavior;\n  }\n\n  /**\n   * Extends the selection to the given key.\n   */\n  extendSelection(toKey: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      this.replaceSelection(toKey);\n      return;\n    }\n\n    toKey = this.getKey(toKey);\n\n    let selection: Selection;\n\n    // Only select the one key if coming from a select all.\n    if (this.state.selectedKeys === 'all') {\n      selection = new Selection([toKey], toKey, toKey);\n    } else {\n      let selectedKeys = this.state.selectedKeys as Selection;\n      let anchorKey = selectedKeys.anchorKey || toKey;\n      selection = new Selection(selectedKeys, anchorKey, toKey);\n      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey)) {\n        selection.delete(key);\n      }\n\n      for (let key of this.getKeyRange(toKey, anchorKey)) {\n        if (this.canSelectItem(key)) {\n          selection.add(key);\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getKeyRange(from: Key, to: Key) {\n    let fromItem = this.collection.getItem(from);\n    let toItem = this.collection.getItem(to);\n    if (fromItem && toItem) {\n      if (fromItem.index <= toItem.index) {\n        return this.getKeyRangeInternal(from, to);\n      }\n\n      return this.getKeyRangeInternal(to, from);\n    }\n\n    return [];\n  }\n\n  private getKeyRangeInternal(from: Key, to: Key) {\n    let keys: Key[] = [];\n    let key = from;\n    while (key) {\n      let item = this.collection.getItem(key);\n      if (item && item.type === 'item' || (item.type === 'cell' && this.allowsCellSelection)) {\n        keys.push(key);\n      }\n\n      if (key === to) {\n        return keys;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n\n    return [];\n  }\n\n  private getKey(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      // ¯\\_(ツ)_/¯\n      return key;\n    }\n\n    // If cell selection is allowed, just return the key.\n    if (item.type === 'cell' && this.allowsCellSelection) {\n      return key;\n    }\n\n    // Find a parent item to select\n    while (item.type !== 'item' && item.parentKey != null) {\n      item = this.collection.getItem(item.parentKey);\n    }\n\n    if (!item || item.type !== 'item') {\n      return null;\n    }\n\n    return item.key;\n  }\n\n  /**\n   * Toggles whether the given key is selected.\n   */\n  toggleSelection(key: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single' && !this.isSelected(key)) {\n      this.replaceSelection(key);\n      return;\n    }\n\n    key = this.getKey(key);\n    if (key == null) {\n      return;\n    }\n\n    let keys = new Selection(this.state.selectedKeys === 'all' ? this.getSelectAllKeys() : this.state.selectedKeys);\n    if (keys.has(key)) {\n      keys.delete(key);\n      // TODO: move anchor to last selected key...\n      // Does `current` need to move here too?\n    } else if (this.canSelectItem(key)) {\n      keys.add(key);\n      keys.anchorKey = key;\n      keys.currentKey = key;\n    }\n\n    if (this.disallowEmptySelection && keys.size === 0) {\n      return;\n    }\n\n    this.state.setSelectedKeys(keys);\n  }\n\n  /**\n   * Replaces the selection with only the given key.\n   */\n  replaceSelection(key: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    key = this.getKey(key);\n    if (key == null) {\n      return;\n    }\n\n    let selection = this.canSelectItem(key)\n      ? new Selection([key], key, key)\n      : new Selection();\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  /**\n   * Replaces the selection with the given keys.\n   */\n  setSelectedKeys(keys: Iterable<Key>) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    let selection = new Selection();\n    for (let key of keys) {\n      key = this.getKey(key);\n      if (key != null) {\n        selection.add(key);\n        if (this.selectionMode === 'single') {\n          break;\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getSelectAllKeys() {\n    let keys: Key[] = [];\n    let addKeys = (key: Key) => {\n      while (key) {\n        if (this.canSelectItem(key)) {\n          let item = this.collection.getItem(key);\n          if (item.type === 'item') {\n            keys.push(key);\n          }\n\n          // Add child keys. If cell selection is allowed, then include item children too.\n          if (item.hasChildNodes && (this.allowsCellSelection || item.type !== 'item')) {\n            addKeys([...item.childNodes][0].key);\n          }\n        }\n\n        key = this.collection.getKeyAfter(key);\n      }\n    };\n\n    addKeys(this.collection.getFirstKey());\n    return keys;\n  }\n\n  /**\n   * Selects all items in the collection.\n   */\n  selectAll() {\n    if (this.selectionMode === 'multiple') {\n      this.state.setSelectedKeys('all');\n    }\n  }\n\n  /**\n   * Removes all keys from the selection.\n   */\n  clearSelection() {\n    if (!this.disallowEmptySelection && (this.state.selectedKeys === 'all' || this.state.selectedKeys.size > 0)) {\n      this.state.setSelectedKeys(new Selection());\n    }\n  }\n\n  /**\n   * Toggles between select all and an empty selection.\n   */\n  toggleSelectAll() {\n    if (this.isSelectAll) {\n      this.clearSelection();\n    } else {\n      this.selectAll();\n    }\n  }\n\n  select(key: Key, e?: PressEvent | LongPressEvent | PointerEvent) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      if (this.isSelected(key) && !this.disallowEmptySelection) {\n        this.toggleSelection(key);\n      } else {\n        this.replaceSelection(key);\n      }\n    } else if (this.selectionBehavior === 'toggle' || (e && (e.pointerType === 'touch' || e.pointerType === 'virtual'))) {\n      // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n      this.toggleSelection(key);\n    } else {\n      this.replaceSelection(key);\n    }\n  }\n\n  /**\n   * Returns whether the current selection is equal to the given selection.\n   */\n  isSelectionEqual(selection: Set<Key>) {\n    if (selection === this.state.selectedKeys) {\n      return true;\n    }\n\n    // Check if the set of keys match.\n    let selectedKeys = this.selectedKeys;\n    if (selection.size !== selectedKeys.size) {\n      return false;\n    }\n\n    for (let key of selection) {\n      if (!selectedKeys.has(key)) {\n        return false;\n      }\n    }\n\n    for (let key of selectedKeys) {\n      if (!selection.has(key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  canSelectItem(key: Key) {\n    if (this.state.selectionMode === 'none' || this.state.disabledKeys.has(key)) {\n      return false;\n    }\n\n    let item = this.collection.getItem(key);\n    if (!item || (item.type === 'cell' && !this.allowsCellSelection)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isDisabled(key: Key) {\n    return this.state.disabledKeys.has(key) && this.state.disabledBehavior === 'all';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}