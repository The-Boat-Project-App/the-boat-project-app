{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as stateChangeTypes from\"./types\";import{getDefaultValue}from\"./utils\";export function useTypeaheadReducer(state,action){var type=action.type,props=action.props;var changes;switch(type){case stateChangeTypes.ItemClick:changes={isOpen:getDefaultValue(props,'isOpen'),selectedItem:props.items[action.index],inputValue:props.itemToString(props.items[action.index])};break;case stateChangeTypes.InputBlur:if(state.isOpen){changes={isOpen:false};}break;case stateChangeTypes.InputChange:changes={isOpen:true,inputValue:action.inputValue};break;case stateChangeTypes.ToggleButtonClick:case stateChangeTypes.FunctionToggleMenu:changes={isOpen:!state.isOpen};break;case stateChangeTypes.FunctionOpenMenu:changes={isOpen:true};break;case stateChangeTypes.FunctionCloseMenu:changes={isOpen:false};break;case stateChangeTypes.FunctionSelectItem:changes={selectedItem:action.selectedItem,inputValue:props.itemToString(action.selectedItem)};break;case stateChangeTypes.ControlledPropUpdatedSelectedItem:case stateChangeTypes.FunctionSetInputValue:changes={inputValue:action.inputValue};break;case stateChangeTypes.FunctionReset:changes={isOpen:getDefaultValue(props,'isOpen'),selectedItem:getDefaultValue(props,'selectedItem'),inputValue:getDefaultValue(props,'inputValue')};break;default:throw new Error('Reducer called without proper action type.');}return _objectSpread(_objectSpread({},state),changes);}","map":{"version":3,"mappings":"w0BAAA,MAAO,GAAKA,iBAAZ,eACA,OAASC,eAAT,eAQA,MAAO,SAASC,oBAAT,CAA6BC,KAA7B,CAA4CC,MAA5C,CAAyD,CAC9D,GAAQC,KAAR,CAAwBD,MAAxB,CAAQC,IAAR,CAAcC,KAAd,CAAwBF,MAAxB,CAAcE,KAAd,CACA,GAAIC,QAAJ,CAEA,OAAQF,IAAR,EACE,IAAKL,iBAAgB,CAACQ,SAAtB,CACED,OAAO,CAAG,CACRE,MAAM,CAAER,eAAe,CAACK,KAAD,CAAQ,QAAR,CADf,CAERI,YAAY,CAAEJ,KAAK,CAACK,KAANL,CAAYF,MAAM,CAACQ,KAAnBN,CAFN,CAGRO,UAAU,CAAEP,KAAK,CAACQ,YAANR,CAAmBA,KAAK,CAACK,KAANL,CAAYF,MAAM,CAACQ,KAAnBN,CAAnBA,CAHJ,CAAVC,CAKA,MACF,IAAKP,iBAAgB,CAACe,SAAtB,CACE,GAAIZ,KAAK,CAACM,MAAV,CAAkB,CAChBF,OAAO,CAAG,CACRE,MAAM,CAAE,KADA,CAAVF,CAGD,CACD,MACF,IAAKP,iBAAgB,CAACgB,WAAtB,CACET,OAAO,CAAG,CACRE,MAAM,CAAE,IADA,CAERI,UAAU,CAAET,MAAM,CAACS,UAFX,CAAVN,CAIA,MAEF,IAAKP,iBAAgB,CAACiB,iBAAtB,CACA,IAAKjB,iBAAgB,CAACkB,kBAAtB,CACEX,OAAO,CAAG,CACRE,MAAM,CAAE,CAACN,KAAK,CAACM,MADP,CAAVF,CAGA,MACF,IAAKP,iBAAgB,CAACmB,gBAAtB,CACEZ,OAAO,CAAG,CACRE,MAAM,CAAE,IADA,CAAVF,CAGA,MACF,IAAKP,iBAAgB,CAACoB,iBAAtB,CACEb,OAAO,CAAG,CACRE,MAAM,CAAE,KADA,CAAVF,CAGA,MAEF,IAAKP,iBAAgB,CAACqB,kBAAtB,CACEd,OAAO,CAAG,CACRG,YAAY,CAAEN,MAAM,CAACM,YADb,CAERG,UAAU,CAAEP,KAAK,CAACQ,YAANR,CAAmBF,MAAM,CAACM,YAA1BJ,CAFJ,CAAVC,CAIA,MACF,IAAKP,iBAAgB,CAACsB,iCAAtB,CACA,IAAKtB,iBAAgB,CAACuB,qBAAtB,CACEhB,OAAO,CAAG,CACRM,UAAU,CAAET,MAAM,CAACS,UADX,CAAVN,CAGA,MACF,IAAKP,iBAAgB,CAACwB,aAAtB,CACEjB,OAAO,CAAG,CACRE,MAAM,CAAER,eAAe,CAACK,KAAD,CAAQ,QAAR,CADf,CAERI,YAAY,CAAET,eAAe,CAACK,KAAD,CAAQ,cAAR,CAFrB,CAGRO,UAAU,CAAEZ,eAAe,CAACK,KAAD,CAAQ,YAAR,CAHnB,CAAVC,CAKA,MACF,QACE,KAAM,IAAIkB,MAAJ,CAAU,4CAAV,CAAN,CA3DJ,CA8DA,sCACKtB,KADL,EAEKI,OAFL,EAID","names":["stateChangeTypes","getDefaultValue","useTypeaheadReducer","state","action","type","props","changes","ItemClick","isOpen","selectedItem","items","index","inputValue","itemToString","InputBlur","InputChange","ToggleButtonClick","FunctionToggleMenu","FunctionOpenMenu","FunctionCloseMenu","FunctionSelectItem","ControlledPropUpdatedSelectedItem","FunctionSetInputValue","FunctionReset","Error"],"sources":["reducer.tsx"],"sourcesContent":["import * as stateChangeTypes from './types';\nimport { getDefaultValue } from './utils';\n\ntype IState = {\n  isOpen: boolean;\n  selectedItem: any;\n  inputValue: string;\n};\n\nexport function useTypeaheadReducer(state: IState, action: any) {\n  const { type, props } = action;\n  let changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index]),\n      };\n      break;\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false,\n        };\n      }\n      break;\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue,\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n      };\n      break;\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n      };\n      break;\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false,\n      };\n      break;\n\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem),\n      };\n      break;\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue,\n      };\n      break;\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue'),\n      };\n      break;\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return {\n    ...state,\n    ...changes,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}