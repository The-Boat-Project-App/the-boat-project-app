{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import NavigationContext from\"./NavigationContext\";import{PrivateValueStore}from\"./types\";import UnhandledActionContext from\"./UnhandledActionContext\";PrivateValueStore;export default function useNavigationHelpers(_ref){var navigatorId=_ref.id,onAction=_ref.onAction,getState=_ref.getState,emitter=_ref.emitter,router=_ref.router;var onUnhandledAction=React.useContext(UnhandledActionContext);var parentNavigationHelpers=React.useContext(NavigationContext);return React.useMemo(function(){var dispatch=function dispatch(op){var action=typeof op==='function'?op(getState()):op;var handled=onAction(action);if(!handled){onUnhandledAction===null||onUnhandledAction===void 0?void 0:onUnhandledAction(action);}};var actions=_objectSpread(_objectSpread({},router.actionCreators),CommonActions);var helpers=Object.keys(actions).reduce(function(acc,name){acc[name]=function(){return dispatch(actions[name].apply(actions,arguments));};return acc;},{});var navigationHelpers=_objectSpread(_objectSpread(_objectSpread({},parentNavigationHelpers),helpers),{},{dispatch:dispatch,emit:emitter.emit,isFocused:parentNavigationHelpers?parentNavigationHelpers.isFocused:function(){return true;},canGoBack:function canGoBack(){var state=getState();return router.getStateForAction(state,CommonActions.goBack(),{routeNames:state.routeNames,routeParamList:{},routeGetIdList:{}})!==null||(parentNavigationHelpers===null||parentNavigationHelpers===void 0?void 0:parentNavigationHelpers.canGoBack())||false;},getId:function getId(){return navigatorId;},getParent:function getParent(id){if(id!==undefined){var current=navigationHelpers;while(current&&id!==current.getId()){current=current.getParent();}return current;}return parentNavigationHelpers;},getState:getState});return navigationHelpers;},[navigatorId,emitter.emit,getState,onAction,onUnhandledAction,parentNavigationHelpers,router]);}","map":{"version":3,"mappings":"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","names":["CommonActions","React","NavigationContext","PrivateValueStore","UnhandledActionContext","useNavigationHelpers","navigatorId","id","onAction","getState","emitter","router","onUnhandledAction","useContext","parentNavigationHelpers","useMemo","dispatch","op","action","handled","actions","actionCreators","helpers","Object","keys","reduce","acc","name","arguments","navigationHelpers","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList","routeGetIdList","getId","getParent","undefined","current"],"sources":["useNavigationHelpers.tsx"],"sourcesContent":["import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationContext from './NavigationContext';\nimport { NavigationHelpers, PrivateValueStore } from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  id: string | undefined;\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({\n  id: navigatorId,\n  onAction,\n  getState,\n  emitter,\n  router,\n}: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce((acc, name) => {\n      // @ts-expect-error: name is a valid key, but TypeScript is dumb\n      acc[name] = (...args: any) => dispatch(actions[name](...args));\n      return acc;\n    }, {} as ActionHelpers);\n\n    const navigationHelpers = {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n            routeGetIdList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      getId: () => navigatorId,\n      getParent: (id?: string) => {\n        if (id !== undefined) {\n          let current = navigationHelpers;\n\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n\n          return current;\n        }\n\n        return parentNavigationHelpers;\n      },\n      getState,\n    } as NavigationHelpers<ParamListBase, EventMap> & ActionHelpers;\n\n    return navigationHelpers;\n  }, [\n    navigatorId,\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    parentNavigationHelpers,\n    router,\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}