{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import*as Font from\"expo-font\";import React from\"react\";import Text from\"react-native-web/dist/exports/Text\";import createIconSet from\"./vendor/react-native-vector-icons/lib/create-icon-set\";import createIconButtonComponent from\"./vendor/react-native-vector-icons/lib/icon-button\";import{jsx as _jsx}from\"react/jsx-runtime\";export{DEFAULT_ICON_COLOR,DEFAULT_ICON_SIZE}from\"./vendor/react-native-vector-icons/lib/create-icon-set\";export default function(glyphMap,fontName,expoAssetId,fontStyle){var _a;var font=_defineProperty({},fontName,expoAssetId);var RNVIconComponent=createIconSet(glyphMap,fontName,null,fontStyle);return _a=function(_React$Component){_inherits(Icon,_React$Component);var _super=_createSuper(Icon);function Icon(){var _this;_classCallCheck(this,Icon);_this=_super.apply(this,arguments);_this._mounted=false;_this.state={fontIsLoaded:Font.isLoaded(fontName)};return _this;}_createClass(Icon,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(function*(){this._mounted=true;if(!this.state.fontIsLoaded){yield Font.loadAsync(font);this._mounted&&this.setState({fontIsLoaded:true});}});function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._mounted=false;}},{key:\"setNativeProps\",value:function setNativeProps(props){if(this._icon){this._icon.setNativeProps(props);}}},{key:\"render\",value:function render(){var _this2=this;if(__DEV__&&this.props.name&&!(this.props.name in glyphMap)){console.warn(\"\\\"\"+this.props.name+\"\\\" is not a valid icon name for family \\\"\"+fontName+\"\\\"\");}if(!this.state.fontIsLoaded){return _jsx(Text,{});}return _jsx(RNVIconComponent,_objectSpread({ref:function ref(view){_this2._icon=view;}},this.props));}}]);return Icon;}(React.Component),_a.defaultProps=RNVIconComponent.defaultProps,_a.Button=createIconButtonComponent(_a),_a.glyphMap=glyphMap,_a.getRawGlyphMap=function(){return glyphMap;},_a.getFontFamily=function(){return fontName;},_a.loadFont=function(){return Font.loadAsync(font);},_a.font=font,_a;}","map":{"version":3,"mappings":"o5DAAA,MAAO,GAAKA,KAAZ,KAAsB,WAAtB,CACA,MAAOC,MAAP,KAAsC,OAAtC,C,qDAWA,MAAOC,cAAP,8DACA,MAAOC,0BAAP,0D,2CAEA,OACEC,kBADF,CAEEC,iBAFF,8DAuFA,cAAc,UACZC,QADY,CAEZC,QAFY,CAGZC,WAHY,CAIZC,SAJY,CAIG,QAEf,GAAMC,KAAI,oBAAMH,QAAN,CAAiBC,WAAjB,CAAV,CACA,GAAMG,iBAAgB,CAAGT,aAAa,CAACI,QAAD,CAAWC,QAAX,CAAqB,IAArB,CAA2BE,SAA3B,CAAtC,CAEA,oGAAO,wFASL,eAAW,KAAX,CAGA,YAAQ,CACNG,YAAY,CAAEZ,IAAI,CAACa,QAAL,CAAcN,QAAd,CADR,CAAR,CAZK,aAsDN,CAtDD,sGAgBE,WAAuB,CACrB,KAAKO,QAAL,CAAgB,IAAhB,CACA,GAAI,CAAC,KAAKC,KAAL,CAAWH,YAAhB,CAA8B,CAC5B,KAAMZ,KAAI,CAACgB,SAAL,CAAeN,IAAf,CAAN,CACA,KAAKI,QAAL,EAAiB,KAAKG,QAAL,CAAc,CAAEL,YAAY,CAAE,IAAhB,CAAd,CAAjB,CACD,CACF,CAtBH,gJAwBE,+BAAoB,CAClB,KAAKE,QAAL,CAAgB,KAAhB,CACD,CA1BH,8BA4BE,wBAAeI,KAAf,CAAoB,CAClB,GAAI,KAAKC,KAAT,CAAgB,CACd,KAAKA,KAAL,CAAWC,cAAX,CAA0BF,KAA1B,EACD,CACF,CAhCH,sBAkCE,iBAAM,iBACJ,GAAIG,OAAO,EAAI,KAAKH,KAAL,CAAWI,IAAtB,EAA8B,EAAE,KAAKJ,KAAL,CAAWI,IAAX,GAAmBhB,SAArB,CAAlC,CAAkE,CAChEiB,OAAO,CAACC,IAAR,MACM,KAAKN,KAAL,CAAWI,IADjB,6CAC+Df,QAD/D,OAGD,CAED,GAAI,CAAC,KAAKQ,KAAL,CAAWH,YAAhB,CAA8B,CAC5B,MAAO,MAAC,IAAD,IAAP,CACD,CAED,MACE,MAAC,gBAAD,gBACE,GAAG,CAAE,aAACa,IAAD,CAAS,CACZ,MAAI,CAACN,KAAL,CAAaM,IAAb,CACD,CAHH,EAIM,KAAKP,KAJX,EADF,CAQD,CArDH,kBAA0BjB,KAAK,CAACyB,SAAhC,EACSC,gBAAehB,gBAAgB,CAACiB,YADzC,CAESD,UAASxB,yBAAyB,CAACwB,EAAD,CAF3C,CAGSA,YAAWrB,QAHpB,CAISqB,kBAAiB,iBAAMrB,SAAN,EAJ1B,CAKSqB,iBAAgB,iBAAMpB,SAAN,EALzB,CAMSoB,YAAW,iBAAM3B,KAAI,CAACgB,SAAL,CAAeN,IAAf,CAAN,EANpB,CAOSiB,QAAOjB,IAPhB,IAuDD","names":["Font","React","createIconSet","createIconButtonComponent","DEFAULT_ICON_COLOR","DEFAULT_ICON_SIZE","glyphMap","fontName","expoAssetId","fontStyle","font","RNVIconComponent","fontIsLoaded","isLoaded","_mounted","state","loadAsync","setState","props","_icon","setNativeProps","__DEV__","name","console","warn","view","Component","_a","defaultProps"],"sourceRoot":"","sources":["../src/createIconSet.tsx"],"sourcesContent":["import * as Font from \"expo-font\";\nimport React, { ComponentClass } from \"react\";\nimport {\n  Text,\n  TextProps,\n  TouchableHighlightProps,\n  ViewProps,\n  OpaqueColorValue,\n  TextStyle,\n  ViewStyle,\n} from \"react-native\";\n\nimport createIconSet from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\nimport createIconButtonComponent from \"./vendor/react-native-vector-icons/lib/icon-button\";\n\nexport {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from \"./vendor/react-native-vector-icons/lib/create-icon-set\";\n\nexport interface IconProps<GLYPHS extends string> extends TextProps {\n  /**\n   * Size of the icon, can also be passed as fontSize in the style object.\n   *\n   * @default 12\n   */\n  size?: number;\n\n  /**\n   * Name of the icon to show\n   *\n   * See Icon Explorer app\n   * {@link https://expo.github.io/vector-icons/}\n   */\n  name: GLYPHS;\n\n  /**\n   * Color of the icon. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   */\n  color?: string | OpaqueColorValue;\n}\n\nexport interface IconButtonProps<GLYPHS extends string>\n  extends IconProps<GLYPHS>,\n    ViewProps,\n    TouchableHighlightProps {\n  /**\n   * Text and icon color\n   * Use iconStyle or nest a Text component if you need different colors.\n   * Can be a string or OpaqueColorValue (returned from PlatformColor(..))\n   *\n   *  @default 'white'\n   */\n  color?: string | OpaqueColorValue;\n\n  /**\n   * Border radius of the button\n   * Set to 0 to disable.\n   *\n   * @default 5\n   */\n  borderRadius?: number;\n\n  /**\n   * Styles applied to the icon only\n   * Good for setting margins or a different color.\n   *\n   * @default {marginRight: 10}\n   */\n  iconStyle?: TextStyle;\n\n  /**\n   * Style prop inherited from TextProps and TouchableWithoutFeedbackProperties\n   * Only exist here so we can have ViewStyle or TextStyle\n   *\n   */\n  style?: ViewStyle | TextStyle;\n\n  /**\n   * Background color of the button. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   * @default '#007AFF'\n   */\n  backgroundColor?: string | OpaqueColorValue;\n}\n\nexport type GlyphMap<G extends string> = { [K in G]: number | string };\n\nexport interface Icon<G extends string, FN extends string> {\n  defaultProps: any;\n  Button: ComponentClass<IconButtonProps<G>>;\n  glyphMap: GlyphMap<G>;\n  getRawGlyphMap: () => GlyphMap<G>;\n  getFontFamily: () => FN;\n  loadFont: () => Promise<void>;\n  font: { [x: string]: any };\n  new (props: IconProps<G>): React.Component<IconProps<G>>;\n}\n\nexport default function <G extends string, FN extends string>(\n  glyphMap: GlyphMap<G>,\n  fontName: FN,\n  expoAssetId,\n  fontStyle?: any\n): Icon<G, FN> {\n  const font = { [fontName]: expoAssetId };\n  const RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n\n  return class Icon extends React.Component<IconProps<G>> {\n    static defaultProps = RNVIconComponent.defaultProps;\n    static Button = createIconButtonComponent(Icon);\n    static glyphMap = glyphMap;\n    static getRawGlyphMap = () => glyphMap;\n    static getFontFamily = () => fontName;\n    static loadFont = () => Font.loadAsync(font);\n    static font = font;\n\n    _mounted = false;\n    _icon?: any;\n\n    state = {\n      fontIsLoaded: Font.isLoaded(fontName),\n    };\n\n    async componentDidMount() {\n      this._mounted = true;\n      if (!this.state.fontIsLoaded) {\n        await Font.loadAsync(font);\n        this._mounted && this.setState({ fontIsLoaded: true });\n      }\n    }\n\n    componentWillUnmount() {\n      this._mounted = false;\n    }\n\n    setNativeProps(props) {\n      if (this._icon) {\n        this._icon.setNativeProps(props);\n      }\n    }\n\n    render() {\n      if (__DEV__ && this.props.name && !(this.props.name in glyphMap)) {\n        console.warn(\n          `\"${this.props.name}\" is not a valid icon name for family \"${fontName}\"`\n        );\n      }\n\n      if (!this.state.fontIsLoaded) {\n        return <Text />;\n      }\n\n      return (\n        <RNVIconComponent\n          ref={(view) => {\n            this._icon = view;\n          }}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}