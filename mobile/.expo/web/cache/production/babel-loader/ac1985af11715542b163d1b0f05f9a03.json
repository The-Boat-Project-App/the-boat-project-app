{"ast":null,"code":"'use strict';import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var _EventSubscription=function(){function _EventSubscription(subscriber){_classCallCheck(this,_EventSubscription);this.subscriber=subscriber;}_createClass(_EventSubscription,[{key:\"remove\",value:function remove(){this.subscriber.removeSubscription(this);}}]);return _EventSubscription;}();export default _EventSubscription;","map":{"version":3,"names":["_EventSubscription","subscriber","removeSubscription"],"sources":["/Users/matthieu/Documents/boatproject/node_modules/react-native-web/dist/vendor/react-native/emitter/_EventSubscription.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\nclass _EventSubscription {\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n  constructor(subscriber) {\n    this.subscriber = subscriber;\n  }\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n\n  remove() {\n    this.subscriber.removeSubscription(this);\n  }\n\n}\n\nexport default _EventSubscription;"],"mappings":"AASA,a,mIAMMA,mB,YAKJ,4BAAYC,UAAZ,CAAwB,0CACtB,KAAKA,UAAL,CAAkBA,UAAlB,CACD,C,qDAMD,iBAAS,CACP,KAAKA,UAAL,CAAgBC,kBAAhB,CAAmC,IAAnC,EACD,C,kCAIH,cAAeF,mBAAf"},"metadata":{},"sourceType":"module"}