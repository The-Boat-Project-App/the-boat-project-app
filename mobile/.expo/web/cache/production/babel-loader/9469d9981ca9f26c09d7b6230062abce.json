{"ast":null,"code":"import React from'react';import{useFocusManager}from'@react-aria/focus';import{useId}from'@react-native-aria/utils';import Platform from\"react-native-web/dist/exports/Platform\";import{ResponsiveQueryContext}from\"../../../utils/useResponsiveQuery/ResponsiveQueryProvider\";import{uniqueId}from'lodash';export var useMenuTrigger=function useMenuTrigger(_ref){var handleOpen=_ref.handleOpen,isOpen=_ref.isOpen;var menuTriggerId=uniqueId();var responsiveQueryContext=React.useContext(ResponsiveQueryContext);var disableCSSMediaQueries=responsiveQueryContext.disableCSSMediaQueries;if(!disableCSSMediaQueries){menuTriggerId=useId();}return{'onKeyDownCapture':function onKeyDownCapture(event){if([' ','Enter','ArrowUp','ArrowDown'].includes(event.key)){event.preventDefault();handleOpen();}},'aria-haspopup':'menu','aria-expanded':isOpen?true:undefined,'nativeID':menuTriggerId};};export var useMenu=function useMenu(){var focusManager=useFocusManager();var onKeyDown=function onKeyDown(e){switch(e.key){case'ArrowDown':{e.preventDefault();focusManager.focusNext({wrap:true});break;}case'ArrowUp':{e.preventDefault();focusManager.focusPrevious({wrap:true});break;}}};return{onKeyDown:onKeyDown,accessibilityRole:'menu'};};export var useMenuItem=function useMenuItem(_ref2){var textValue=_ref2.textValue,ref=_ref2.ref;return{accessibilityRole:'menuitem',dataSet:{nativebaseMenuItem:textValue},onHoverIn:function onHoverIn(){if(ref.current&&Platform.OS==='web')ref.current.focus();}};};export var useMenuOptionItem=function useMenuOptionItem(_ref3){var isChecked=_ref3.isChecked,type=_ref3.type;return{accessibilityRole:'menuitem'+(Platform.OS==='web'?type:''),accessibilityState:{checked:isChecked},accessibilityChecked:isChecked};};var ITEM_ATTR='data-nativebase-menu-item';var getValue=function getValue(element){var _element$getAttribute;return(_element$getAttribute=element.getAttribute(ITEM_ATTR))!==null&&_element$getAttribute!==void 0?_element$getAttribute:'';};export var useMenuTypeahead=function useMenuTypeahead(props){return{onKeyDown:function onKeyDown(event){if(props.onKeyDown){props.onKeyDown(event);}if(event.key.length===1&&!(event.ctrlKey||event.altKey||event.metaKey)){var container=event.currentTarget;var values=Array.from(container.querySelectorAll(\"[\".concat(ITEM_ATTR,\"]\"))).map(getValue);var searchKey=event.key;var foundValue=values.find(function(value){return value.toLowerCase().startsWith(searchKey);});var newItem=container.querySelector(\"[\".concat(ITEM_ATTR,\"=\\\"\").concat(foundValue,\"\\\"]\"));if(newItem){setTimeout(function(){return newItem.focus();});}}}};};","map":{"version":3,"mappings":"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","names":["React","useFocusManager","useId","ResponsiveQueryContext","uniqueId","useMenuTrigger","handleOpen","isOpen","menuTriggerId","responsiveQueryContext","useContext","disableCSSMediaQueries","event","includes","key","preventDefault","undefined","useMenu","focusManager","onKeyDown","e","focusNext","wrap","focusPrevious","accessibilityRole","useMenuItem","textValue","ref","dataSet","nativebaseMenuItem","onHoverIn","current","Platform","OS","focus","useMenuOptionItem","isChecked","type","accessibilityState","checked","accessibilityChecked","ITEM_ATTR","getValue","element","getAttribute","useMenuTypeahead","props","length","ctrlKey","altKey","metaKey","container","currentTarget","values","Array","from","querySelectorAll","map","searchKey","foundValue","find","value","toLowerCase","startsWith","newItem","querySelector","setTimeout"],"sources":["useMenu.tsx"],"sourcesContent":["import React from 'react';\nimport { useFocusManager } from '@react-aria/focus';\nimport { useId } from '@react-native-aria/utils';\nimport { AccessibilityRole, Platform } from 'react-native';\nimport { ResponsiveQueryContext } from '../../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport { uniqueId } from 'lodash';\n\ntype IMenuTriggerProps = {\n  handleOpen: () => void;\n  isOpen: boolean;\n};\n\nexport const useMenuTrigger = ({ handleOpen, isOpen }: IMenuTriggerProps) => {\n  let menuTriggerId = uniqueId();\n\n  // let id = uniqueId();\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  if (!disableCSSMediaQueries) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    menuTriggerId = useId();\n  }\n  return {\n    'onKeyDownCapture': (event: KeyboardEvent) => {\n      if ([' ', 'Enter', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault();\n        handleOpen();\n      }\n    },\n    'aria-haspopup': 'menu',\n    'aria-expanded': isOpen ? true : undefined,\n    'nativeID': menuTriggerId,\n  };\n};\n\nexport const useMenu = () => {\n  const focusManager = useFocusManager();\n  const onKeyDown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'ArrowDown': {\n        e.preventDefault();\n        focusManager.focusNext({ wrap: true });\n        break;\n      }\n      case 'ArrowUp': {\n        e.preventDefault();\n        focusManager.focusPrevious({ wrap: true });\n        break;\n      }\n    }\n  };\n\n  return {\n    onKeyDown,\n    accessibilityRole: 'menu' as AccessibilityRole,\n  };\n};\n\nexport const useMenuItem = ({\n  textValue,\n  ref,\n}: {\n  textValue: string;\n  ref: any;\n}) => {\n  return {\n    accessibilityRole: 'menuitem' as AccessibilityRole,\n    dataSet: {\n      nativebaseMenuItem: textValue,\n    },\n    onHoverIn: () => {\n      if (ref.current && Platform.OS === 'web') ref.current.focus();\n    },\n  };\n};\n\nexport const useMenuOptionItem = ({\n  isChecked,\n  type,\n}: {\n  isChecked: boolean;\n  type: 'checkbox' | 'radio';\n}) => {\n  return {\n    accessibilityRole: ('menuitem' +\n      (Platform.OS === 'web' ? type : '')) as AccessibilityRole,\n    accessibilityState: {\n      checked: isChecked,\n    },\n    accessibilityChecked: isChecked,\n  };\n};\n\nconst ITEM_ATTR = 'data-nativebase-menu-item';\nconst getValue = (element: Element) => element.getAttribute(ITEM_ATTR) ?? '';\n\nexport const useMenuTypeahead = (props: any): any => {\n  return {\n    onKeyDown(event: KeyboardEvent) {\n      if (props.onKeyDown) {\n        props.onKeyDown(event);\n      }\n\n      if (\n        event.key.length === 1 &&\n        !(event.ctrlKey || event.altKey || event.metaKey)\n      ) {\n        const container = event.currentTarget as HTMLElement;\n        const values = Array.from(\n          container.querySelectorAll(`[${ITEM_ATTR}]`)\n        ).map(getValue);\n\n        const searchKey = event.key;\n\n        const foundValue = values.find((value) =>\n          value.toLowerCase().startsWith(searchKey)\n        );\n        const newItem = container.querySelector(\n          `[${ITEM_ATTR}=\"${foundValue}\"]`\n        );\n\n        if (newItem) {\n          /**\n           * Imperative focus during keydown is risky so we prevent React's batching updates\n           * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n           */\n          setTimeout(() => (newItem as HTMLElement).focus());\n        }\n      }\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}