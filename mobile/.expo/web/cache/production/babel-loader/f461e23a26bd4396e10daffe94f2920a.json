{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"startIcon\",\"rightIcon\",\"leftIcon\",\"endIcon\",\"spinner\",\"isDisabled\",\"isLoading\",\"isHovered\",\"isPressed\",\"isFocused\",\"isFocusVisible\",\"spinnerPlacement\"],_excluded2=[\"onPressIn\",\"onPressOut\",\"onHoverIn\",\"onHoverOut\",\"onFocus\",\"onBlur\",\"_text\",\"_stack\",\"_spinner\",\"isLoadingText\",\"_icon\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Spinner from\"../Spinner\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{default as Box}from\"../Box\";import HStack from\"../Stack/HStack\";import{Pressable}from\"../Pressable\";import{composeEventHandlers}from\"../../../utils\";import{useHover,useFocus,useIsPressed}from\"../../primitives/Pressable/Pressable\";import{useFocusRing}from'@react-native-aria/focus';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Button=function Button(_ref,ref){var children=_ref.children,startIcon=_ref.startIcon,rightIcon=_ref.rightIcon,leftIcon=_ref.leftIcon,endIcon=_ref.endIcon,spinner=_ref.spinner,isDisabled=_ref.isDisabled,isLoading=_ref.isLoading,isHoveredProp=_ref.isHovered,isPressedProp=_ref.isPressed,isFocusedProp=_ref.isFocused,isFocusVisibleProp=_ref.isFocusVisible,_ref$spinnerPlacement=_ref.spinnerPlacement,spinnerPlacement=_ref$spinnerPlacement===void 0?'start':_ref$spinnerPlacement,props=_objectWithoutProperties(_ref,_excluded);var _props$accessibilityR;var _useHover=useHover(),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _useIsPressed=useIsPressed(),pressableProps=_useIsPressed.pressableProps,isPressed=_useIsPressed.isPressed;var _useFocus=useFocus(),focusProps=_useFocus.focusProps,isFocused=_useFocus.isFocused;var _useFocusRing=useFocusRing(),isFocusVisible=_useFocusRing.isFocusVisible,focusRingProps=_useFocusRing.focusProps;var _usePropsResolution=usePropsResolution('Button',props,{isDisabled:isDisabled,isHovered:isHoveredProp||isHovered,isFocused:isFocusedProp||isFocused,isPressed:isPressedProp||isPressed,isLoading:isLoading,isFocusVisible:isFocusVisibleProp||isFocusVisible}),onPressIn=_usePropsResolution.onPressIn,onPressOut=_usePropsResolution.onPressOut,onHoverIn=_usePropsResolution.onHoverIn,onHoverOut=_usePropsResolution.onHoverOut,onFocus=_usePropsResolution.onFocus,onBlur=_usePropsResolution.onBlur,_text=_usePropsResolution._text,_stack=_usePropsResolution._stack,_spinner=_usePropsResolution._spinner,isLoadingText=_usePropsResolution.isLoadingText,_icon=_usePropsResolution._icon,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);if(useHasResponsiveProps(props)){return null;}if(leftIcon){startIcon=leftIcon;}if(rightIcon){endIcon=rightIcon;}if(endIcon&&React.isValidElement(endIcon)){endIcon=React.Children.map(endIcon,function(child,index){return React.cloneElement(child,_objectSpread(_objectSpread({key:\"button-end-icon-\".concat(index)},_icon),child.props));});}if(startIcon&&React.isValidElement(startIcon)){startIcon=React.Children.map(startIcon,function(child,index){return React.cloneElement(child,_objectSpread(_objectSpread({key:\"button-start-icon-\".concat(index)},_icon),child.props));});}var spinnerElement=spinner?spinner:React.createElement(Spinner,_extends({color:_text===null||_text===void 0?void 0:_text.color},_spinner));var boxChildren=function boxChildren(child){return child?React.createElement(Box,{_text:_text},child):null;};return React.createElement(Pressable,_extends({disabled:isDisabled||isLoading,ref:ref,onPressIn:composeEventHandlers(onPressIn,pressableProps.onPressIn),onPressOut:composeEventHandlers(onPressOut,pressableProps.onPressOut),onHoverIn:composeEventHandlers(onHoverIn,hoverProps.onHoverIn),onHoverOut:composeEventHandlers(onHoverOut,hoverProps.onHoverOut),onFocus:composeEventHandlers(composeEventHandlers(onFocus,focusProps.onFocus),focusRingProps.onFocus),onBlur:composeEventHandlers(composeEventHandlers(onBlur,focusProps.onBlur),focusRingProps.onBlur)},resolvedProps,{accessibilityRole:(_props$accessibilityR=props.accessibilityRole)!==null&&_props$accessibilityR!==void 0?_props$accessibilityR:'button'}),React.createElement(HStack,_extends({},_stack,{test:true}),startIcon&&!isLoading?startIcon:null,isLoading&&spinnerPlacement==='start'?spinnerElement:null,isLoading?isLoadingText?boxChildren(isLoadingText):null:boxChildren(children),endIcon&&!isLoading?endIcon:null,isLoading&&spinnerPlacement==='end'?spinnerElement:null));};export default memo(forwardRef(Button));","map":{"version":3,"mappings":"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","names":["React","memo","forwardRef","Spinner","usePropsResolution","default","Box","HStack","Pressable","composeEventHandlers","useHover","useFocus","useIsPressed","useFocusRing","useHasResponsiveProps","Button","ref","children","startIcon","rightIcon","leftIcon","endIcon","spinner","isDisabled","isLoading","isHoveredProp","isHovered","isPressedProp","isPressed","isFocusedProp","isFocused","isFocusVisibleProp","isFocusVisible","spinnerPlacement","props","hoverProps","pressableProps","focusProps","focusRingProps","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","_text","_stack","_spinner","isLoadingText","_icon","resolvedProps","isValidElement","Children","map","child","index","cloneElement","key","spinnerElement","color","boxChildren","disabled","accessibilityRole","test"],"sources":["Button.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Spinner from '../Spinner';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { default as Box, IBoxProps } from '../Box';\nimport HStack from '../Stack/HStack';\nimport { Pressable } from '../Pressable';\nimport type { IButtonProps } from './types';\nimport { composeEventHandlers } from '../../../utils';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Button = (\n  {\n    //@ts-ignore\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n    spinner,\n    isDisabled,\n    isLoading,\n    isHovered: isHoveredProp,\n    isPressed: isPressedProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    spinnerPlacement = 'start',\n    ...props\n  }: IButtonProps & IBoxProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    _text,\n    _stack,\n    _spinner,\n    isLoadingText,\n    _icon,\n    ...resolvedProps\n  } = usePropsResolution('Button', props, {\n    isDisabled,\n    isHovered: isHoveredProp || isHovered,\n    isFocused: isFocusedProp || isFocused,\n    isPressed: isPressedProp || isPressed,\n    isLoading,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  const spinnerElement = spinner ? (\n    spinner\n  ) : (\n    <Spinner color={_text?.color} {..._spinner} />\n  );\n\n  const boxChildren = (child: any) => {\n    return child ? <Box _text={_text}>{child}</Box> : null;\n  };\n\n  return (\n    <Pressable\n      disabled={isDisabled || isLoading}\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n      accessibilityRole={props.accessibilityRole ?? 'button'}\n    >\n      <HStack {..._stack} test={true}>\n        {startIcon && !isLoading ? startIcon : null}\n        {isLoading && spinnerPlacement === 'start' ? spinnerElement : null}\n        {isLoading\n          ? isLoadingText\n            ? boxChildren(isLoadingText)\n            : null\n          : boxChildren(children)}\n\n        {endIcon && !isLoading ? endIcon : null}\n        {isLoading && spinnerPlacement === 'end' ? spinnerElement : null}\n      </HStack>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Button));\n"]},"metadata":{},"sourceType":"module"}