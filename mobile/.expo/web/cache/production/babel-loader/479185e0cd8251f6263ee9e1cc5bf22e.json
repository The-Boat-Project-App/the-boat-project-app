{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import{ChevronDownIcon,ChevronUpIcon}from\"../../primitives/Icon/Icons\";import{AccordionItemContext}from\"./Context\";import{useThemeProps}from\"../../../hooks\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var AccordionIcon=function AccordionIcon(_ref,ref){var props=Object.assign({},_ref);var _React$useContext=React.useContext(AccordionItemContext),isOpen=_React$useContext.isOpen;var _useThemeProps=useThemeProps('AccordionIcon',props),newProps=Object.assign({},_useThemeProps);if(useHasResponsiveProps(props)){return null;}return isOpen?React.createElement(ChevronUpIcon,_extends({color:\"white\"},newProps,{ref:ref})):React.createElement(ChevronDownIcon,_extends({},newProps,{ref:ref}));};export default React.memo(React.forwardRef(AccordionIcon));","map":{"version":3,"mappings":"uRAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,CAA0BC,aAA1B,mCAEA,OAASC,oBAAT,iBACA,OAASC,aAAT,sBACA,OAASC,qBAAT,4CAEA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,MAAoCC,GAApC,CAAkD,IAA5CC,MAA4C,wBACtE,sBAA+CR,KAAK,CAACS,UAANT,CAC7CG,oBAD6CH,CAA/C,CAAQU,MAAR,mBAAQA,MAAR,CAGA,mBAAwBN,aAAa,CAAC,eAAD,CAAkBI,KAAlB,CAArC,CAAWG,QAAX,kCAEA,GAAIN,qBAAqB,CAACG,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAOE,OAAM,CACXV,oBAACE,aAAD,WAAeU,KAAK,CAAC,OAArB,EAAiCD,QAAjC,EAA2CJ,GAAG,CAAEA,GAAhD,GADW,CAGXP,oBAACC,eAAD,aAAqBU,QAArB,EAA+BJ,GAAG,CAAEA,GAApC,GAHF,CATF,EAgBA,cAAeP,MAAK,CAACa,IAANb,CAAWA,KAAK,CAACc,UAANd,CAAiBM,aAAjBN,CAAXA,CAAf","names":["React","ChevronDownIcon","ChevronUpIcon","AccordionItemContext","useThemeProps","useHasResponsiveProps","AccordionIcon","ref","props","useContext","isOpen","newProps","color","memo","forwardRef"],"sources":["AccordionIcon.tsx"],"sourcesContent":["import React from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '../../primitives/Icon/Icons';\nimport type { IAccordionIconProps, IAccordionItemContextProps } from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionIcon = ({ ...props }: IAccordionIconProps, ref?: any) => {\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const { ...newProps } = useThemeProps('AccordionIcon', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return isOpen ? (\n    <ChevronUpIcon color=\"white\" {...newProps} ref={ref} />\n  ) : (\n    <ChevronDownIcon {...newProps} ref={ref} />\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionIcon));\n"]},"metadata":{},"sourceType":"module"}