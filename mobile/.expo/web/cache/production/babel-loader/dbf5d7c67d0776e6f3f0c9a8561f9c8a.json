{"ast":null,"code":"import{MessageDictionary,MessageFormatter}from'@internationalized/message';import{useCallback,useMemo}from'react';import{useLocale}from\"../\";var cache=new WeakMap();function getCachedDictionary(strings){var dictionary=cache.get(strings);if(!dictionary){dictionary=new MessageDictionary(strings);cache.set(strings,dictionary);}return dictionary;}export function useMessageFormatter(strings){var _useLocale=useLocale(),locale=_useLocale.locale;var dictionary=useMemo(function(){return getCachedDictionary(strings);},[strings]);var formatter=useMemo(function(){return new MessageFormatter(locale,dictionary);},[locale,dictionary]);return useCallback(function(key,variables){return formatter.format(key,variables);},[formatter]);}","map":{"version":3,"names":["MessageDictionary","MessageFormatter","useCallback","useMemo","useLocale","cache","WeakMap","getCachedDictionary","strings","dictionary","get","set","useMessageFormatter","locale","formatter","key","variables","format"],"sources":["/Users/matthieu/Documents/boatproject/node_modules/@react-aria/i18n/dist/useMessageFormatter.module.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { MessageDictionary, MessageFormatter } from '@internationalized/message';\nimport { useCallback, useMemo } from 'react';\nimport { useLocale } from '../';\nconst cache = new WeakMap();\n\nfunction getCachedDictionary(strings) {\n  let dictionary = cache.get(strings);\n\n  if (!dictionary) {\n    dictionary = new MessageDictionary(strings);\n    cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n/**\n * Handles formatting ICU Message strings to create localized strings for the current locale.\n * Automatically updates when the locale changes, and handles caching of messages for performance.\n * @param strings - A mapping of languages to strings by key.\n * @deprecated - use useLocalizedStringFormatter instead.\n */\n\n\nexport function useMessageFormatter(strings) {\n  let {\n    locale\n  } = useLocale();\n  let dictionary = useMemo(() => getCachedDictionary(strings), [strings]);\n  let formatter = useMemo(() => new MessageFormatter(locale, dictionary), [locale, dictionary]);\n  return useCallback((key, variables) => formatter.format(key, variables), [formatter]);\n}\n"],"mappings":"AAWA,OAASA,iBAAT,CAA4BC,gBAA5B,KAAoD,4BAApD,CACA,OAASC,WAAT,CAAsBC,OAAtB,KAAqC,OAArC,CACA,OAASC,SAAT,WACA,GAAMC,MAAK,CAAG,GAAIC,QAAJ,EAAd,CAEA,QAASC,oBAAT,CAA6BC,OAA7B,CAAsC,CACpC,GAAIC,WAAU,CAAGJ,KAAK,CAACK,GAAN,CAAUF,OAAV,CAAjB,CAEA,GAAI,CAACC,UAAL,CAAiB,CACfA,UAAU,CAAG,GAAIT,kBAAJ,CAAsBQ,OAAtB,CAAb,CACAH,KAAK,CAACM,GAAN,CAAUH,OAAV,CAAmBC,UAAnB,EACD,CAED,MAAOA,WAAP,CACD,CASD,MAAO,SAASG,oBAAT,CAA6BJ,OAA7B,CAAsC,CAC3C,eAEIJ,SAAS,EAFb,CACES,MADF,YACEA,MADF,CAGA,GAAIJ,WAAU,CAAGN,OAAO,CAAC,iBAAMI,oBAAmB,CAACC,OAAD,CAAzB,EAAD,CAAqC,CAACA,OAAD,CAArC,CAAxB,CACA,GAAIM,UAAS,CAAGX,OAAO,CAAC,iBAAM,IAAIF,iBAAJ,CAAqBY,MAArB,CAA6BJ,UAA7B,CAAN,EAAD,CAAiD,CAACI,MAAD,CAASJ,UAAT,CAAjD,CAAvB,CACA,MAAOP,YAAW,CAAC,SAACa,GAAD,CAAMC,SAAN,QAAoBF,UAAS,CAACG,MAAV,CAAiBF,GAAjB,CAAsBC,SAAtB,CAApB,EAAD,CAAuD,CAACF,SAAD,CAAvD,CAAlB,CACD"},"metadata":{},"sourceType":"module"}