{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{useThemeProps}from\"../../../hooks\";import Box from\"../../primitives/Box\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Code=function Code(_ref,ref){var props=Object.assign({},_ref);var _useThemeProps=useThemeProps('Code',props),newProps=Object.assign({},_useThemeProps);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({_text:{fontFamily:Platform.OS==='ios'?'Courier':'monospace'}},newProps,{ref:ref}));};export default React.memo(React.forwardRef(Code));","map":{"version":3,"mappings":"uRAAA,MAAOA,MAAP,KAAkB,OAAlB,C,6DAEA,OAASC,aAAT,sBACA,MAAOC,IAAP,4BAEA,OAASC,qBAAT,4CAEA,GAAMC,KAAI,CAAG,QAAPA,KAAO,MAA2BC,GAA3B,CAAyC,IAAnCC,MAAmC,wBACpD,mBAAsBL,aAAa,CAAC,MAAD,CAASK,KAAT,CAAnC,CAASC,QAAT,kCAEA,GAAIJ,qBAAqB,CAACG,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACEN,qBAACE,GAAD,WACEM,KAAK,CAAE,CACLC,UAAU,CAAEC,QAAQ,CAACC,EAATD,GAAgB,KAAhBA,CAAwB,SAAxBA,CAAoC,WAD3C,CADT,EAIMH,QAJN,EAKEF,GAAG,CAAEA,GALP,GADF,CANF,EAkBA,cAAeL,MAAK,CAACY,IAANZ,CAAWA,KAAK,CAACa,UAANb,CAAiBI,IAAjBJ,CAAXA,CAAf","names":["React","useThemeProps","Box","useHasResponsiveProps","Code","ref","props","newProps","_text","fontFamily","Platform","OS","memo","forwardRef"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\nimport { useThemeProps } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { ICodeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Code = ({ ...props }: ICodeProps, ref?: any) => {\n  let { ...newProps } = useThemeProps('Code', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      _text={{\n        fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace',\n      }}\n      {...newProps}\n      ref={ref}\n    />\n  );\n};\n\nexport type { ICodeProps };\nexport default React.memo(React.forwardRef(Code));\n"]},"metadata":{},"sourceType":"module"}