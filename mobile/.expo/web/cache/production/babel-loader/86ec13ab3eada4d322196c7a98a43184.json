{"ast":null,"code":"import get from'lodash.get';import isEmpty from'lodash.isempty';import Color from'tinycolor2';export function mode(light,dark){return function(props){return props.colorMode==='dark'?dark:light;};}export var transparentize=function transparentize(color,opacity){return function(theme){var raw=getColor(theme,color);return Color(raw).setAlpha(opacity).toRgbString();};};export var getColor=function getColor(theme,color,fallback){var hex=get(theme,\"colors.\".concat(color),color);var isValid=Color(hex).isValid();return isValid?hex:fallback;};export var tone=function tone(color){return function(theme){var hex=getColor(theme,color);var isDark=Color(hex).isDark();return isDark?'dark':'light';};};export var isDark=function isDark(color){return function(theme){return tone(color)(theme)==='dark';};};export var isLight=function isLight(color){return function(theme){return tone(color)(theme)==='light';};};export function randomColor(opts){var fallback=Color.random().toHexString();if(!opts||isEmpty(opts)){return fallback;}if(opts.string&&opts.colors){return randomColorFromList(opts.string,opts.colors);}if(opts.string&&!opts.colors){return randomColorFromString(opts.string);}if(opts.colors&&!opts.string){return randomFromList(opts.colors);}return fallback;}function randomFromList(list){return list[Math.floor(Math.random()*list.length)];}function randomColorFromList(str,list){var index=0;if(str.length===0)return list[0];for(var i=0;i<str.length;i++){index=str.charCodeAt(i)+((index<<5)-index);index=index&index;}index=(index%list.length+list.length)%list.length;return list[index];}function randomColorFromString(str){var hash=0;if(str.length===0)return hash.toString();for(var i=0;i<str.length;i++){hash=str.charCodeAt(i)+((hash<<5)-hash);hash=hash&hash;}var color='#';for(var j=0;j<3;j++){var value=hash>>j*8&255;color+=('00'+value.toString(16)).substr(-2);}return color;}","map":{"version":3,"mappings":"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","names":["get","isEmpty","Color","mode","light","dark","props","colorMode","transparentize","color","opacity","theme","raw","getColor","setAlpha","toRgbString","fallback","hex","isValid","tone","isDark","isLight","randomColor","opts","random","toHexString","string","colors","randomColorFromList","randomColorFromString","randomFromList","list","Math","floor","length","str","index","i","charCodeAt","hash","toString","j","value","substr"],"sources":["colors.ts"],"sourcesContent":["import get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport Color from 'tinycolor2';\nimport type { Dict } from './utils';\n\nexport function mode(light: any, dark: any) {\n  return (props: any) => (props.colorMode === 'dark' ? dark : light);\n}\n\nexport const transparentize = (color: string, opacity: number) => (\n  theme: Dict\n) => {\n  const raw = getColor(theme, color);\n  return Color(raw).setAlpha(opacity).toRgbString();\n};\n\nexport const getColor = (theme: Dict, color: string, fallback?: string) => {\n  const hex = get(theme, `colors.${color}`, color);\n  const isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\n\nexport const tone = (color: string) => (theme: Dict) => {\n  const hex = getColor(theme, color);\n  const isDark = Color(hex).isDark();\n  return isDark ? 'dark' : 'light';\n};\n\nexport const isDark = (color: string) => (theme: Dict) =>\n  tone(color)(theme) === 'dark';\n\nexport const isLight = (color: string) => (theme: Dict) =>\n  tone(color)(theme) === 'light';\n\ninterface RandomColorOptions {\n  /**\n   * If passed, string will be used to generate\n   * random color\n   */\n  string?: string;\n  /**\n   * List of colors to pick from at random\n   */\n  colors?: string[];\n}\nexport function randomColor(opts?: RandomColorOptions) {\n  const fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list: string[]) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str: string, list: string[]) {\n  let index = 0;\n  if (str.length === 0) return list[0];\n  for (let i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n  index = ((index % list.length) + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str: string) {\n  let hash = 0;\n  if (str.length === 0) return hash.toString();\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  let color = '#';\n  for (let j = 0; j < 3; j++) {\n    const value = (hash >> (j * 8)) & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n}\n"]},"metadata":{},"sourceType":"module"}