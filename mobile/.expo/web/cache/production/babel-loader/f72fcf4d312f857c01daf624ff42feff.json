{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.TDefaultTextRenderer=exports.TDefaultPhrasingRenderer=exports.TDefaultBlockRenderer=void 0;var _react=_interopRequireWildcard(require(\"react\"));var _SharedPropsProvider=require(\"./context/SharedPropsProvider\");var _useAssembledCommonProps=_interopRequireDefault(require(\"./hooks/useAssembledCommonProps\"));var _TChildrenRendererContext=require(\"./context/TChildrenRendererContext\");var _renderTextualContent=_interopRequireDefault(require(\"./renderTextualContent\"));var _RenderRegistryProvider=require(\"./context/RenderRegistryProvider\");var _renderBlockContent=_interopRequireDefault(require(\"./renderBlockContent\"));var _renderEmptyContent=_interopRequireDefault(require(\"./renderEmptyContent\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var TDefaultBlockRenderer=_renderBlockContent.default.bind(null);exports.TDefaultBlockRenderer=TDefaultBlockRenderer;TDefaultBlockRenderer.displayName='TDefaultBlockRenderer';var TDefaultPhrasingRenderer=_renderTextualContent.default.bind(null);exports.TDefaultPhrasingRenderer=TDefaultPhrasingRenderer;TDefaultPhrasingRenderer.displayName='TDefaultPhrasingRenderer';var TDefaultTextRenderer=_renderTextualContent.default.bind(null);exports.TDefaultTextRenderer=TDefaultTextRenderer;TDefaultTextRenderer.displayName='TDefaultTextRenderer';function isGhostTNode(tnode){return tnode.type==='text'&&(tnode.data===''||tnode.data===' ')||tnode.type==='empty';}var TNodeRenderer=(0,_react.memo)(function MemoizedTNodeRenderer(props){var tnode=props.tnode;var sharedProps=(0,_SharedPropsProvider.useSharedProps)();var renderRegistry=(0,_RenderRegistryProvider.useRendererRegistry)();var TNodeChildrenRenderer=(0,_TChildrenRendererContext.useTNodeChildrenRenderer)();var tnodeProps=_objectSpread(_objectSpread({},props),{},{TNodeChildrenRenderer:TNodeChildrenRenderer,sharedProps:sharedProps});var renderer=tnode.type==='block'||tnode.type==='document'?TDefaultBlockRenderer:tnode.type==='text'?TDefaultTextRenderer:tnode.type==='phrasing'?TDefaultPhrasingRenderer:_renderEmptyContent.default;var _ref=(0,_useAssembledCommonProps.default)(tnodeProps,renderer),assembledProps=_ref.assembledProps,Renderer=_ref.Renderer;switch(tnode.type){case'empty':return(0,_renderEmptyContent.default)(assembledProps);case'text':var InternalTextRenderer=renderRegistry.getInternalTextRenderer(props.tnode.tagName);if(InternalTextRenderer){return _react.default.createElement(InternalTextRenderer,tnodeProps);}if(tnodeProps.tnode.data===''&&tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention){return null;}break;case'phrasing':if(tnodeProps.sharedProps.bypassAnonymousTPhrasingNodes&&tnodeProps.tnode.tagName==null&&tnodeProps.tnode.children.length<=1){return _react.default.createElement(TNodeChildrenRenderer,{tnode:props.tnode});}if(tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention&&tnodeProps.tnode.tagName==null&&tnodeProps.tnode.children.every(isGhostTNode)){return null;}break;}var renderFn=tnode.type==='block'||tnode.type==='document'?_renderBlockContent.default:_renderTextualContent.default;return Renderer===null?renderFn(assembledProps):_react.default.createElement(Renderer,assembledProps);});var defaultProps={propsFromParent:{collapsedMarginTop:null}};TNodeRenderer.defaultProps=defaultProps;var _default=TNodeRenderer;exports.default=_default;","map":{"version":3,"mappings":"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","names":["TDefaultBlockRenderer","renderBlockContent","bind","displayName","TDefaultPhrasingRenderer","renderTextualContent","TDefaultTextRenderer","isGhostTNode","tnode","type","data","TNodeRenderer","MemoizedTNodeRenderer","props","sharedProps","renderRegistry","TNodeChildrenRenderer","tnodeProps","renderer","renderEmptyContent","assembledProps","Renderer","InternalTextRenderer","getInternalTextRenderer","tagName","React","createElement","enableExperimentalGhostLinesPrevention","bypassAnonymousTPhrasingNodes","children","length","every","renderFn","defaultProps","propsFromParent","collapsedMarginTop"],"sources":["TNodeRenderer.tsx"],"sourcesContent":["import React, { memo, ReactElement } from 'react';\nimport { TDefaultRenderer, TNodeRendererProps } from './shared-types';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport {\n  TText,\n  TBlock,\n  TNode,\n  TPhrasing\n} from '@native-html/transient-render-engine';\nimport useAssembledCommonProps from './hooks/useAssembledCommonProps';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport renderTextualContent from './renderTextualContent';\nimport { useRendererRegistry } from './context/RenderRegistryProvider';\nimport renderBlockContent from './renderBlockContent';\nimport renderEmptyContent from './renderEmptyContent';\n\nexport type { TNodeRendererProps } from './shared-types';\n\nconst TDefaultBlockRenderer: TDefaultRenderer<TBlock> =\n  renderBlockContent.bind(null);\n\nTDefaultBlockRenderer.displayName = 'TDefaultBlockRenderer';\n\nconst TDefaultPhrasingRenderer: TDefaultRenderer<TPhrasing> =\n  renderTextualContent.bind(null);\n\nTDefaultPhrasingRenderer.displayName = 'TDefaultPhrasingRenderer';\n\nconst TDefaultTextRenderer: TDefaultRenderer<TText> =\n  renderTextualContent.bind(null);\n\nTDefaultTextRenderer.displayName = 'TDefaultTextRenderer';\n\nfunction isGhostTNode(tnode: TNode) {\n  return (\n    (tnode.type === 'text' && (tnode.data === '' || tnode.data === ' ')) ||\n    tnode.type === 'empty'\n  );\n}\n\n/**\n * A component to render any {@link TNode}.\n */\nconst TNodeRenderer = memo(function MemoizedTNodeRenderer(\n  props: TNodeRendererProps<any>\n): ReactElement | null {\n  const { tnode } = props;\n  const sharedProps = useSharedProps();\n  const renderRegistry = useRendererRegistry();\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const tnodeProps = {\n    ...props,\n    TNodeChildrenRenderer,\n    sharedProps\n  };\n  const renderer =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? TDefaultBlockRenderer\n      : tnode.type === 'text'\n      ? TDefaultTextRenderer\n      : tnode.type === 'phrasing'\n      ? TDefaultPhrasingRenderer\n      : renderEmptyContent;\n\n  const { assembledProps, Renderer } = useAssembledCommonProps(\n    tnodeProps,\n    renderer as any\n  );\n  switch (tnode.type) {\n    case 'empty':\n      return renderEmptyContent(assembledProps);\n    case 'text':\n      const InternalTextRenderer = renderRegistry.getInternalTextRenderer(\n        props.tnode.tagName\n      );\n\n      if (InternalTextRenderer) {\n        return React.createElement(InternalTextRenderer, tnodeProps);\n      }\n      // If ghost line prevention is enabled and the text data is empty, render\n      // nothing to avoid React Native painting a 20px height line.\n      // See also https://git.io/JErwX\n      if (\n        tnodeProps.tnode.data === '' &&\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention\n      ) {\n        return null;\n      }\n      break;\n    case 'phrasing':\n      // When a TPhrasing node is anonymous and has only one child, its\n      // rendering amounts to rendering its only child.\n      if (\n        tnodeProps.sharedProps.bypassAnonymousTPhrasingNodes &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.length <= 1\n      ) {\n        return React.createElement(TNodeChildrenRenderer, {\n          tnode: props.tnode\n        });\n      }\n      // If ghost line prevention is enabled and the tnode is an anonymous empty\n      // phrasing node, render nothing to avoid React Native painting a 20px\n      // height line. See also https://git.io/JErwX\n      if (\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.every(isGhostTNode)\n      ) {\n        return null;\n      }\n      break;\n  }\n  const renderFn =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? renderBlockContent\n      : renderTextualContent;\n  return Renderer === null\n    ? renderFn(assembledProps)\n    : React.createElement(Renderer as any, assembledProps);\n});\n\nconst defaultProps: Required<Pick<TNodeRendererProps<any>, 'propsFromParent'>> =\n  {\n    propsFromParent: {\n      collapsedMarginTop: null\n    }\n  };\n\n// @ts-expect-error default props must be defined\nTNodeRenderer.defaultProps = defaultProps;\n\nexport {\n  TDefaultBlockRenderer,\n  TDefaultPhrasingRenderer,\n  TDefaultTextRenderer\n};\n\nexport default TNodeRenderer;\n"]},"metadata":{},"sourceType":"script"}