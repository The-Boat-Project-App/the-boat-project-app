{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=DisclosureClosedSymbolRenderer;var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _useSymbolicMarkerRendererStyles=_interopRequireDefault(require(\"./useSymbolicMarkerRendererStyles\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function DisclosureClosedSymbolRenderer(props){var _ref=(0,_useSymbolicMarkerRendererStyles.default)(props,1),top=_ref.prefixStyle.top,prefixSize=_ref.prefixSize;return _react.default.createElement(_reactNative.View,{style:{top:top,width:0,height:0,borderStyle:'solid',borderLeftWidth:prefixSize,borderLeftColor:props.color,borderTopWidth:prefixSize/2,borderTopColor:'transparent',borderBottomWidth:prefixSize/2,borderBottomColor:'transparent'}});}","map":{"version":3,"mappings":"qHAAA,oD,wDAGA,6LAEe,QAASA,+BAAT,CACbC,KADa,CAEb,CACA,SAGI,6CAA+BA,KAA/B,CAAsC,CAAtC,CAHJ,CACiBC,GADjB,MACEC,WADF,CACiBD,GADjB,CAEEE,UAFF,MAEEA,UAFF,CAIA,MAAOC,gBAAMC,aAAND,CAAoBE,iBAApBF,CAA0B,CAC/BG,KAAK,CAAE,CACLN,GADK,CACLA,GADK,CAELO,KAAK,CAAE,CAFF,CAGLC,MAAM,CAAE,CAHH,CAILC,WAAW,CAAE,OAJR,CAKLC,eAAe,CAAER,UALZ,CAMLS,eAAe,CAAEZ,KAAK,CAACa,KANlB,CAOLC,cAAc,CAAEX,UAAU,CAAG,CAPxB,CAQLY,cAAc,CAAE,aARX,CASLC,iBAAiB,CAAEb,UAAU,CAAG,CAT3B,CAULc,iBAAiB,CAAE,aAVd,CADwB,CAA1Bb,CAAP,CAcD","names":["DisclosureClosedSymbolRenderer","props","top","prefixStyle","prefixSize","React","createElement","View","style","width","height","borderStyle","borderLeftWidth","borderLeftColor","color","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor"],"sources":["DisclosureClosedSymbolRenderer.tsx"],"sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { UnitaryCounterRendererProps } from '../../shared-types';\nimport useSymbolicMarkerRendererProps from './useSymbolicMarkerRendererStyles';\n\nexport default function DisclosureClosedSymbolRenderer(\n  props: UnitaryCounterRendererProps\n) {\n  const {\n    prefixStyle: { top },\n    prefixSize\n  } = useSymbolicMarkerRendererProps(props, 1);\n  return React.createElement(View, {\n    style: {\n      top,\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n      borderLeftWidth: prefixSize,\n      borderLeftColor: props.color,\n      borderTopWidth: prefixSize / 2,\n      borderTopColor: 'transparent',\n      borderBottomWidth: prefixSize / 2,\n      borderBottomColor: 'transparent'\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}