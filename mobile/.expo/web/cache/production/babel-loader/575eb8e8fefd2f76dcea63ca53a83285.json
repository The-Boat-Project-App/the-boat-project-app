{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=require(\"react\");var _identity=_interopRequireDefault(require(\"ramda/src/identity\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var useProfiler=typeof __DEV__==='boolean'&&__DEV__&&typeof performance==='object'?function useProfiler(_ref){var name=_ref.name,prop=_ref.prop;var lastUpdate=(0,_react.useRef)(0);var profile=(0,_react.useCallback)(function onUpdate(){var now=performance.now();var diff=now-lastUpdate.current;if(diff<60){console.warn(\"You seem to update \"+(prop?\"the \"+prop+\" prop(s)\":'props')+\" of the \\\"\"+(name?name:'RenderHTML')+\"\\\" component in short periods of time, causing costly tree rerenders (last update was \"+diff.toFixed(2)+\"ms ago). See https://stackoverflow.com/q/68966120/2779871\");}lastUpdate.current=now;},[name,prop]);return profile;}:function useProfiler(){return _identity.default;};var _default=useProfiler;exports.default=_default;","map":{"version":3,"mappings":"6FAAA,4BACA,uJAIA,GAAMA,YAAW,CACf,MAAOC,QAAP,GAAmB,SAAnB,EAAgCA,OAAhC,EAA2C,MAAOC,YAAP,GAAuB,QAAlE,CACI,QAASF,YAAT,MAAuE,IAAhDG,KAAgD,MAAhDA,IAAgD,CAA1CC,IAA0C,MAA1CA,IAA0C,CACrE,GAAMC,WAAU,CAAG,kBAAO,CAAP,CAAnB,CACA,GAAMC,QAAO,CAAG,uBACd,QAASC,SAAT,EAAoB,CAClB,GAAMC,IAAG,CAAGN,WAAW,CAACM,GAAZN,EAAZ,CACA,GAAMO,KAAI,CAAGD,GAAG,CAAGH,UAAU,CAACK,OAA9B,CACA,GAAID,IAAI,CAAG,EAAX,CAAe,CACbE,OAAO,CAACC,IAARD,wBAEIP,IAAI,QAAUA,IAAV,YAA2B,OAFnCO,gBAIIR,IAAI,CAAGA,IAAH,CAAU,YAJlBQ,2FAK0FF,IAAI,CAACI,OAALJ,CACtF,CADsFA,CAL1FE,8DASD,CACDN,UAAU,CAACK,OAAXL,CAAqBG,GAArBH,CAfY,EAiBd,CAACF,IAAD,CAAOC,IAAP,CAjBc,CAAhB,CAmBA,MAAOE,QAAP,CAtBN,EAyBI,QAASN,YAAT,EAAuB,CACrB,MAAOc,kBAAP,CA3BR,eA8Bed","names":["useProfiler","__DEV__","performance","name","prop","lastUpdate","profile","onUpdate","now","diff","current","console","warn","toFixed","identity"],"sources":["useProfiler.ts"],"sourcesContent":["import { useCallback, useRef } from 'react';\nimport identity from 'ramda/src/identity';\n\ndeclare const performance: { now: () => number };\n\nconst useProfiler =\n  typeof __DEV__ === 'boolean' && __DEV__ && typeof performance === 'object'\n    ? function useProfiler({ name, prop }: { name?: string; prop?: string }) {\n        const lastUpdate = useRef(0);\n        const profile = useCallback(\n          function onUpdate() {\n            const now = performance.now();\n            const diff = now - lastUpdate.current;\n            if (diff < 60) {\n              console.warn(\n                `You seem to update ${\n                  prop ? `the ${prop} prop(s)` : 'props'\n                } of the \"${\n                  name ? name : 'RenderHTML'\n                }\" component in short periods of time, causing costly tree rerenders (last update was ${diff.toFixed(\n                  2\n                )}ms ago). See https://stackoverflow.com/q/68966120/2779871`\n              );\n            }\n            lastUpdate.current = now;\n          },\n          [name, prop]\n        );\n        return profile;\n      }\n    : /* istanbul ignore next */\n      function useProfiler() {\n        return identity as () => void;\n      };\n\nexport default useProfiler;\n"]},"metadata":{},"sourceType":"script"}