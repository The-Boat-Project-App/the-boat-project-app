{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";export var useKeyboardBottomInset=function useKeyboardBottomInset(){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),bottom=_React$useState2[0],setBottom=_React$useState2[1];var subscriptions=React.useRef([]);React.useEffect(function(){function onKeyboardChange(e){if(e.startCoordinates&&e.endCoordinates.screenY<=e.startCoordinates.screenY)setBottom(e.endCoordinates.height/2);else setBottom(0);}if(Platform.OS==='ios'){subscriptions.current=[Keyboard.addListener('keyboardWillChangeFrame',onKeyboardChange)];}else{subscriptions.current=[Keyboard.addListener('keyboardDidHide',onKeyboardChange),Keyboard.addListener('keyboardDidShow',onKeyboardChange)];}return function(){subscriptions.current.forEach(function(subscription){subscription.remove();});};},[setBottom,subscriptions]);return bottom;};","map":{"version":3,"mappings":"iEAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,C,0HAGA,MAAO,IAAMC,uBAAsB,CAAG,QAAzBA,uBAAyB,EAAM,CAC1C,oBAA4BD,KAAK,CAACE,QAANF,CAAe,CAAfA,CAA5B,oDAAOG,MAAP,qBAAeC,SAAf,qBACA,GAAMC,cAAa,CAAGL,KAAK,CAACM,MAANN,CAAoB,EAApBA,CAAtB,CAEAA,KAAK,CAACO,SAANP,CAAgB,UAAM,CACpB,QAASQ,iBAAT,CAA0BC,CAA1B,CAA4C,CAC1C,GACEA,CAAC,CAACC,gBAAFD,EACAA,CAAC,CAACE,cAAFF,CAAiBG,OAAjBH,EAA4BA,CAAC,CAACC,gBAAFD,CAAmBG,OAFjD,CAIER,SAAS,CAACK,CAAC,CAACE,cAAFF,CAAiBI,MAAjBJ,CAA0B,CAA3B,CAATL,CAJF,IAKKA,UAAS,CAAC,CAAD,CAATA,CACN,CAED,GAAIU,QAAQ,CAACC,EAATD,GAAgB,KAApB,CAA2B,CACzBT,aAAa,CAACW,OAAdX,CAAwB,CACtBY,QAAQ,CAACC,WAATD,CAAqB,yBAArBA,CAAgDT,gBAAhDS,CADsB,CAAxBZ,CADF,KAIO,CACLA,aAAa,CAACW,OAAdX,CAAwB,CACtBY,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,CAAwCT,gBAAxCS,CADsB,CAEtBA,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,CAAwCT,gBAAxCS,CAFsB,CAAxBZ,CAID,CACD,MAAO,WAAM,CACXA,aAAa,CAACW,OAAdX,CAAsBc,OAAtBd,CAA+Be,qBAAD,CAAkB,CAC9CA,YAAY,CAACC,MAAbD,GADF,GADF,EApBF,EAyBG,CAAChB,SAAD,CAAYC,aAAZ,CAzBHL,EA2BA,MAAOG,OAAP,CA/BK","names":["React","useKeyboardBottomInset","useState","bottom","setBottom","subscriptions","useRef","useEffect","onKeyboardChange","e","startCoordinates","endCoordinates","screenY","height","Platform","OS","current","Keyboard","addListener","forEach","subscription","remove"],"sources":["useKeyboardBottomInset.ts"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform, KeyboardEvent } from 'react-native';\n\nexport const useKeyboardBottomInset = () => {\n  const [bottom, setBottom] = React.useState(0);\n  const subscriptions = React.useRef<any[]>([]);\n\n  React.useEffect(() => {\n    function onKeyboardChange(e: KeyboardEvent) {\n      if (\n        e.startCoordinates &&\n        e.endCoordinates.screenY <= e.startCoordinates.screenY\n      )\n        setBottom(e.endCoordinates.height / 2);\n      else setBottom(0);\n    }\n\n    if (Platform.OS === 'ios') {\n      subscriptions.current = [\n        Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange),\n      ];\n    } else {\n      subscriptions.current = [\n        Keyboard.addListener('keyboardDidHide', onKeyboardChange),\n        Keyboard.addListener('keyboardDidShow', onKeyboardChange),\n      ];\n    }\n    return () => {\n      subscriptions.current.forEach((subscription) => {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n\n  return bottom;\n};\n"]},"metadata":{},"sourceType":"module"}