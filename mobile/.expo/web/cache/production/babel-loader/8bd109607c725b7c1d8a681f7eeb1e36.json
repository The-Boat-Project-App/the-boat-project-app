{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";export function resolve(styleProp,cleanedProps){if(styleProp){return StyleSheet?[styleProp,cleanedProps]:styleProp[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]?Object.assign.apply(Object,[{}].concat(_toConsumableArray(styleProp),[cleanedProps])):Object.assign({},styleProp,cleanedProps);}else{return cleanedProps;}}","map":{"version":3,"mappings":"0IAGA,MAAO,SAASA,QAAT,CAAoBC,SAApB,CAA4CC,YAA5C,CAA6D,CAClE,GAAID,SAAJ,CAAe,CACb,MAAOE,WAAU,CACb,CAACF,SAAD,CAAYC,YAAZ,CADa,CAGfD,SAAS,4BAACG,MAAM,CAACC,QAAR,cAATJ,CACEK,MAAM,CAACC,MAAPD,aAAM,EAAQ,EAAR,4BAAeL,SAAf,GAA0BC,YAA1B,GADRD,CAEEK,MAAM,CAACC,MAAPD,CAAc,EAAdA,CAAkBL,SAAlBK,CAA6BJ,YAA7BI,CALJ,CADF,KAOO,CACL,MAAOJ,aAAP,CAEH","names":["resolve","styleProp","cleanedProps","StyleSheet","Symbol","iterator","Object","assign"],"sources":["resolve.ts"],"sourcesContent":["import { StyleSheet } from 'react-native';\n\n// Kept in separate file, to avoid name collision with Symbol element\nexport function resolve<T>(styleProp: Iterable<T>, cleanedProps: T) {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}