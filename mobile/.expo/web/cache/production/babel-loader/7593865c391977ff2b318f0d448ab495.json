{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Box from\"../../primitives/Box\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var AvatarBadge=memo(forwardRef(function(props,ref){var resolvedProps=usePropsResolution('AvatarBadge',props);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({},resolvedProps,{ref:ref}));}));AvatarBadge.displayName='AvatarBadge';export default AvatarBadge;","map":{"version":3,"mappings":"uRAAA,MAAOA,MAAP,EAAgBC,IAAhB,CAAsBC,UAAtB,KAAwC,OAAxC,CACA,MAAOC,IAAP,4BACA,OAASC,kBAAT,oCAEA,OAASC,qBAAT,4CAEA,GAAMC,YAAW,CAAGL,IAAI,CACtBC,UAAU,CAAC,SAACK,KAAD,CAA2BC,GAA3B,CAAyC,CAClD,GAAMC,cAAa,CAAGL,kBAAkB,CAAC,aAAD,CAAgBG,KAAhB,CAAxC,CAEA,GAAIF,qBAAqB,CAACE,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAOP,qBAACG,GAAD,aAASM,aAAT,EAAwBD,GAAG,CAAEA,GAA7B,GAAP,CANQ,EADY,CAAxB,CAWAF,WAAW,CAACI,WAAZJ,CAA0B,aAA1BA,CACA,cAAeA,YAAf","names":["React","memo","forwardRef","Box","usePropsResolution","useHasResponsiveProps","AvatarBadge","props","ref","resolvedProps","displayName"],"sources":["Badge.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarBadgeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AvatarBadge = memo(\n  forwardRef((props: IAvatarBadgeProps, ref?: any) => {\n    const resolvedProps = usePropsResolution('AvatarBadge', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return <Box {...resolvedProps} ref={ref} />;\n  })\n);\n\nAvatarBadge.displayName = 'AvatarBadge';\nexport default AvatarBadge as (props: IAvatarBadgeProps, ref?: any) => any;\n"]},"metadata":{},"sourceType":"module"}