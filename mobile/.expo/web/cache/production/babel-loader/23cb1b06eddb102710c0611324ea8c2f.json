{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{nanoid}from'nanoid/non-secure';import BaseRouter from\"./BaseRouter\";var TYPE_ROUTE='route';export var TabActions={jumpTo:function jumpTo(name,params){return{type:'JUMP_TO',payload:{name:name,params:params}};}};var getRouteHistory=function getRouteHistory(routes,index,backBehavior,initialRouteName){var history=[{type:TYPE_ROUTE,key:routes[index].key}];var initialRouteIndex;switch(backBehavior){case'order':for(var i=index;i>0;i--){history.unshift({type:TYPE_ROUTE,key:routes[i-1].key});}break;case'firstRoute':if(index!==0){history.unshift({type:TYPE_ROUTE,key:routes[0].key});}break;case'initialRoute':initialRouteIndex=routes.findIndex(function(route){return route.name===initialRouteName;});initialRouteIndex=initialRouteIndex===-1?0:initialRouteIndex;if(index!==initialRouteIndex){history.unshift({type:TYPE_ROUTE,key:routes[initialRouteIndex].key});}break;case'history':break;}return history;};var changeIndex=function changeIndex(state,index,backBehavior,initialRouteName){var history;if(backBehavior==='history'){var currentKey=state.routes[index].key;history=state.history.filter(function(it){return it.type==='route'?it.key!==currentKey:false;}).concat({type:TYPE_ROUTE,key:currentKey});}else{history=getRouteHistory(state.routes,index,backBehavior,initialRouteName);}return _objectSpread(_objectSpread({},state),{},{index:index,history:history});};export default function TabRouter(_ref){var initialRouteName=_ref.initialRouteName,_ref$backBehavior=_ref.backBehavior,backBehavior=_ref$backBehavior===void 0?'firstRoute':_ref$backBehavior;var router=_objectSpread(_objectSpread({},BaseRouter),{},{type:'tab',getInitialState:function getInitialState(_ref2){var routeNames=_ref2.routeNames,routeParamList=_ref2.routeParamList;var index=initialRouteName!==undefined&&routeNames.includes(initialRouteName)?routeNames.indexOf(initialRouteName):0;var routes=routeNames.map(function(name){return{name:name,key:name+\"-\"+nanoid(),params:routeParamList[name]};});var history=getRouteHistory(routes,index,backBehavior,initialRouteName);return{stale:false,type:'tab',key:\"tab-\"+nanoid(),index:index,routeNames:routeNames,history:history,routes:routes};},getRehydratedState:function getRehydratedState(partialState,_ref3){var _state$routes,_state$index,_state$history$filter,_state$history;var routeNames=_ref3.routeNames,routeParamList=_ref3.routeParamList;var state=partialState;if(state.stale===false){return state;}var routes=routeNames.map(function(name){var route=state.routes.find(function(r){return r.name===name;});return _objectSpread(_objectSpread({},route),{},{name:name,key:route&&route.name===name&&route.key?route.key:name+\"-\"+nanoid(),params:routeParamList[name]!==undefined?_objectSpread(_objectSpread({},routeParamList[name]),route?route.params:undefined):route?route.params:undefined});});var index=Math.min(Math.max(routeNames.indexOf((_state$routes=state.routes[(_state$index=state===null||state===void 0?void 0:state.index)!==null&&_state$index!==void 0?_state$index:0])===null||_state$routes===void 0?void 0:_state$routes.name),0),routes.length-1);var history=(_state$history$filter=(_state$history=state.history)===null||_state$history===void 0?void 0:_state$history.filter(function(it){return routes.find(function(r){return r.key===it.key;});}))!==null&&_state$history$filter!==void 0?_state$history$filter:[];return changeIndex({stale:false,type:'tab',key:\"tab-\"+nanoid(),index:index,routeNames:routeNames,history:history,routes:routes},index,backBehavior,initialRouteName);},getStateForRouteNamesChange:function getStateForRouteNamesChange(state,_ref4){var routeNames=_ref4.routeNames,routeParamList=_ref4.routeParamList,routeKeyChanges=_ref4.routeKeyChanges;var routes=routeNames.map(function(name){return state.routes.find(function(r){return r.name===name&&!routeKeyChanges.includes(r.name);})||{name:name,key:name+\"-\"+nanoid(),params:routeParamList[name]};});var index=Math.max(0,routeNames.indexOf(state.routes[state.index].name));var history=state.history.filter(function(it){return it.type!=='route'||routes.find(function(r){return r.key===it.key;});});if(!history.length){history=getRouteHistory(routes,index,backBehavior,initialRouteName);}return _objectSpread(_objectSpread({},state),{},{history:history,routeNames:routeNames,routes:routes,index:index});},getStateForRouteFocus:function getStateForRouteFocus(state,key){var index=state.routes.findIndex(function(r){return r.key===key;});if(index===-1||index===state.index){return state;}return changeIndex(state,index,backBehavior,initialRouteName);},getStateForAction:function getStateForAction(state,action,_ref5){var routeParamList=_ref5.routeParamList;switch(action.type){case'JUMP_TO':case'NAVIGATE':{var index=-1;if(action.type==='NAVIGATE'&&action.payload.key){index=state.routes.findIndex(function(route){return route.key===action.payload.key;});}else{index=state.routes.findIndex(function(route){return route.name===action.payload.name;});}if(index===-1){return null;}return changeIndex(_objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(route,i){if(i!==index){return route;}var params;if(action.type==='NAVIGATE'&&action.payload.merge){params=action.payload.params!==undefined||routeParamList[route.name]!==undefined?_objectSpread(_objectSpread(_objectSpread({},routeParamList[route.name]),route.params),action.payload.params):route.params;}else{params=routeParamList[route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[route.name]),action.payload.params):action.payload.params;}var path=action.type==='NAVIGATE'&&action.payload.path!=null?action.payload.path:route.path;return params!==route.params||path!==route.path?_objectSpread(_objectSpread({},route),{},{path:path,params:params}):route;})}),index,backBehavior,initialRouteName);}case'GO_BACK':{if(state.history.length===1){return null;}var previousKey=state.history[state.history.length-2].key;var _index=state.routes.findIndex(function(route){return route.key===previousKey;});if(_index===-1){return null;}return _objectSpread(_objectSpread({},state),{},{history:state.history.slice(0,-1),index:_index});}default:return BaseRouter.getStateForAction(state,action);}},shouldActionChangeFocus:function shouldActionChangeFocus(action){return action.type==='NAVIGATE';},actionCreators:TabActions});return router;}","map":{"version":3,"mappings":"w0BAAA,OAASA,MAAT,KAAuB,mBAAvB,CAEA,MAAOC,WAAP,oBAyDA,GAAMC,WAAU,CAAG,OAAnB,CAEA,MAAO,IAAMC,WAAU,CAAG,CACxBC,MADwB,iBACjBC,IADiB,CACHC,MADG,CAC6B,CACnD,MAAO,CAAEC,IAAI,CAAE,SAAR,CAAmBC,OAAO,CAAE,CAAEH,IAAF,CAAEA,IAAF,CAAQC,aAAR,CAA5B,CAAP,CACD,CAHuB,CAAnB,CAMP,GAAMG,gBAAe,CAAG,QAAlBA,gBAAkB,CACtBC,MADsB,CAEtBC,KAFsB,CAGtBC,YAHsB,CAItBC,gBAJsB,CAKnB,CACH,GAAMC,QAAO,CAAG,CAAC,CAAEP,IAAI,CAAEL,UAAR,CAAoBa,GAAG,CAAEL,MAAM,CAACC,KAAD,CAAND,CAAcK,GAAvC,CAAD,CAAhB,CACA,GAAIC,kBAAJ,CAEA,OAAQJ,YAAR,EACE,IAAK,OAAL,CACE,IAAK,GAAIK,EAAC,CAAGN,KAAb,CAAoBM,CAAC,CAAG,CAAxB,CAA2BA,CAAC,EAA5B,CAAgC,CAC9BH,OAAO,CAACI,OAARJ,CAAgB,CAAEP,IAAI,CAAEL,UAAR,CAAoBa,GAAG,CAAEL,MAAM,CAACO,CAAC,CAAG,CAAL,CAANP,CAAcK,GAAvC,CAAhBD,EACD,CACD,MACF,IAAK,YAAL,CACE,GAAIH,KAAK,GAAK,CAAd,CAAiB,CACfG,OAAO,CAACI,OAARJ,CAAgB,CACdP,IAAI,CAAEL,UADQ,CAEda,GAAG,CAAEL,MAAM,CAAC,CAAD,CAANA,CAAUK,GAFD,CAAhBD,EAID,CACD,MACF,IAAK,cAAL,CACEE,iBAAiB,CAAGN,MAAM,CAACS,SAAPT,CACjBU,cAAD,QAAWA,MAAK,CAACf,IAANe,GAAeP,gBAA1B,EADkBH,CAApBM,CAGAA,iBAAiB,CAAGA,iBAAiB,GAAK,CAAC,CAAvBA,CAA2B,CAA3BA,CAA+BA,iBAAnDA,CAEA,GAAIL,KAAK,GAAKK,iBAAd,CAAiC,CAC/BF,OAAO,CAACI,OAARJ,CAAgB,CACdP,IAAI,CAAEL,UADQ,CAEda,GAAG,CAAEL,MAAM,CAACM,iBAAD,CAANN,CAA0BK,GAFjB,CAAhBD,EAID,CACD,MACF,IAAK,SAAL,CAEE,MA7BJ,CAgCA,MAAOA,QAAP,CAzCF,EA4CA,GAAMO,YAAW,CAAG,QAAdA,YAAc,CAClBC,KADkB,CAElBX,KAFkB,CAGlBC,YAHkB,CAIlBC,gBAJkB,CAKf,CACH,GAAIC,QAAJ,CAEA,GAAIF,YAAY,GAAK,SAArB,CAAgC,CAC9B,GAAMW,WAAU,CAAGD,KAAK,CAACZ,MAANY,CAAaX,KAAbW,EAAoBP,GAAvC,CAEAD,OAAO,CAAGQ,KAAK,CAACR,OAANQ,CACPE,MADOF,CACCG,WAAD,QAASA,GAAE,CAAClB,IAAHkB,GAAY,OAAZA,CAAsBA,EAAE,CAACV,GAAHU,GAAWF,UAAjCE,CAA8C,KAAvD,EADAH,EAEPI,MAFOJ,CAEA,CAAEf,IAAI,CAAEL,UAAR,CAAoBa,GAAG,CAAEQ,UAAzB,CAFAD,CAAVR,CAHF,KAMO,CACLA,OAAO,CAAGL,eAAe,CACvBa,KAAK,CAACZ,MADiB,CAEvBC,KAFuB,CAGvBC,YAHuB,CAIvBC,gBAJuB,CAAzBC,CAMD,CAED,sCACKQ,KADL,MAEEX,KAFK,CAELA,KAFF,CAGEG,eAHF,GAvBF,EA8BA,cAAe,SAASa,UAAT,MAGM,IAFnBd,iBAEmB,MAFnBA,gBAEmB,wBADnBD,YACmB,CADnBA,YACmB,4BADJ,YACI,mBACnB,GAAMgB,OAGL,gCACI3B,UADJ,MAGCM,IAAI,CAAE,KAHP,CAKCsB,eALD,0BAKgBC,KALhB,CAKiD,IAA9BC,WAA8B,OAA9BA,UAA8B,CAAlBC,cAAkB,OAAlBA,cAAkB,CAC9C,GAAMrB,MAAK,CACTE,gBAAgB,GAAKoB,SAArBpB,EAAkCkB,UAAU,CAACG,QAAXH,CAAoBlB,gBAApBkB,CAAlClB,CACIkB,UAAU,CAACI,OAAXJ,CAAmBlB,gBAAnBkB,CADJlB,CAEI,CAHN,CAKA,GAAMH,OAAM,CAAGqB,UAAU,CAACK,GAAXL,CAAgB1B,aAAD,QAAW,CACvCA,IADuC,CACvCA,IADuC,CAEvCU,GAAG,CAAKV,IAAL,KAAaL,MAAM,EAFiB,CAGvCM,MAAM,CAAE0B,cAAc,CAAC3B,IAAD,CAHiB,CAAX,EAAf0B,CAAf,CAMA,GAAMjB,QAAO,CAAGL,eAAe,CAC7BC,MAD6B,CAE7BC,KAF6B,CAG7BC,YAH6B,CAI7BC,gBAJ6B,CAA/B,CAOA,MAAO,CACLwB,KAAK,CAAE,KADF,CAEL9B,IAAI,CAAE,KAFD,CAGLQ,GAAG,QAASf,MAAM,EAHb,CAILW,KAJK,CAILA,KAJK,CAKLoB,UALK,CAKLA,UALK,CAMLjB,OANK,CAMLA,OANK,CAOLJ,aAPK,CAAP,CAxBA,CAAH,CAmCC4B,kBAnCD,6BAmCoBC,YAnCpB,CAmCmBC,KAnCnB,CAmCkE,wEAA9BT,WAA8B,OAA9BA,UAA8B,CAAlBC,cAAkB,OAAlBA,cAAkB,CAC/D,GAAIV,MAAK,CAAGiB,YAAZ,CAEA,GAAIjB,KAAK,CAACe,KAANf,GAAgB,KAApB,CAA2B,CACzB,MAAOA,MAAP,CACD,CAED,GAAMZ,OAAM,CAAGqB,UAAU,CAACK,GAAXL,CAAgB1B,aAAD,CAAU,CACtC,GAAMe,MAAK,CACTE,KADY,CAEZZ,MADAY,CACOmB,IADPnB,CACaoB,UAAD,QAAOA,EAAC,CAACrC,IAAFqC,GAAWrC,IAAlB,EADZiB,CADF,CAIA,sCACKF,KADL,MAEEf,IAFK,CAELA,IAFF,CAGEU,GAAG,CACDK,KAAK,EAAIA,KAAK,CAACf,IAANe,GAAef,IAAxBe,EAAgCA,KAAK,CAACL,GAAtCK,CACIA,KAAK,CAACL,GADVK,CAEOf,IAFPe,KAEepB,MAAM,EANzB,CAOEM,MAAM,CACJ0B,cAAc,CAAC3B,IAAD,CAAd2B,GAAyBC,SAAzBD,gCAESA,cAAc,CAAC3B,IAAD,CAFvB2B,EAGUZ,KAAK,CAAGA,KAAK,CAACd,MAAT,CAAkB2B,SAHjCD,EAKIZ,KAAK,CACLA,KAAK,CAACd,MADD,CAEL2B,SAfR,GALa,EAAf,CAwBA,GAAMtB,MAAK,CAAGgC,IAAI,CAACC,GAALD,CACZA,IAAI,CAACE,GAALF,CAASZ,UAAU,CAACI,OAAXJ,gBAAmBT,KAAK,CAACZ,MAANY,eAAaA,KAAb,OAAaA,OAAb,SAAaA,CAAb,MAAaA,MAAK,CAAEX,KAApB,6CAA6B,CAA7BW,CAAnB,wCAAmBwB,cAAiCzC,IAApD0B,CAATY,CAAoE,CAApEA,CADYA,CAEZjC,MAAM,CAACqC,MAAPrC,CAAgB,CAFJiC,CAAd,CAKA,GAAM7B,QAAO,wCACXQ,KAAK,CAACR,OADK,yCACXkC,eAAexB,MAAf,CAAuBC,WAAD,QAAQf,OAAM,CAAC+B,IAAP/B,CAAagC,UAAD,QAAOA,EAAC,CAAC3B,GAAF2B,GAAUjB,EAAE,CAACV,GAApB,EAAZL,CAAR,EAAtB,CADW,+DAEX,EAFF,CAIA,MAAOW,YAAW,CAChB,CACEgB,KAAK,CAAE,KADT,CAEE9B,IAAI,CAAE,KAFR,CAGEQ,GAAG,QAASf,MAAM,EAHpB,CAIEW,KAJF,CAIEA,KAJF,CAKEoB,UALF,CAKEA,UALF,CAMEjB,OANF,CAMEA,OANF,CAOEJ,aAPF,CADgB,CAUhBC,KAVgB,CAWhBC,YAXgB,CAYhBC,gBAZgB,CAAlB,CA3EA,CAAH,CA2FCoC,2BA3FD,sCA4FG3B,KA5FH,CA2F4B4B,KA3F5B,CA8FG,IADEnB,WACF,OADEA,UACF,CADcC,cACd,OADcA,cACd,CAD8BmB,eAC9B,OAD8BA,eAC9B,CACA,GAAMzC,OAAM,CAAGqB,UAAU,CAACK,GAAXL,CACZ1B,aAAD,QACEiB,MAAK,CAACZ,MAANY,CAAamB,IAAbnB,CACGoB,UAAD,QAAOA,EAAC,CAACrC,IAAFqC,GAAWrC,IAAXqC,EAAmB,CAACS,eAAe,CAACjB,QAAhBiB,CAAyBT,CAAC,CAACrC,IAA3B8C,CAA3B,EADF7B,GAEK,CACHjB,IADG,CACHA,IADG,CAEHU,GAAG,CAAKV,IAAL,KAAaL,MAAM,EAFnB,CAGHM,MAAM,CAAE0B,cAAc,CAAC3B,IAAD,CAHnB,CAHP,EADa0B,CAAf,CAWA,GAAMpB,MAAK,CAAGgC,IAAI,CAACE,GAALF,CACZ,CADYA,CAEZZ,UAAU,CAACI,OAAXJ,CAAmBT,KAAK,CAACZ,MAANY,CAAaA,KAAK,CAACX,KAAnBW,EAA0BjB,IAA7C0B,CAFYY,CAAd,CAKA,GAAI7B,QAAO,CAAGQ,KAAK,CAACR,OAANQ,CAAcE,MAAdF,CAEXG,WAAD,QAAQA,GAAE,CAAClB,IAAHkB,GAAY,OAAZA,EAAuBf,MAAM,CAAC+B,IAAP/B,CAAagC,UAAD,QAAOA,EAAC,CAAC3B,GAAF2B,GAAUjB,EAAE,CAACV,GAApB,EAAZL,CAA/B,EAFYY,CAAd,CAKA,GAAI,CAACR,OAAO,CAACiC,MAAb,CAAqB,CACnBjC,OAAO,CAAGL,eAAe,CACvBC,MADuB,CAEvBC,KAFuB,CAGvBC,YAHuB,CAIvBC,gBAJuB,CAAzBC,CAMD,CAED,sCACKQ,KADL,MAEER,OAFK,CAELA,OAFF,CAGEiB,UAHK,CAGLA,UAHF,CAIErB,MAJK,CAILA,MAJF,CAKEC,WALF,GA7HA,CAAH,CAsICyC,qBAtID,gCAsIuB9B,KAtIvB,CAsI8BP,GAtI9B,CAsImC,CAChC,GAAMJ,MAAK,CAAGW,KAAK,CAACZ,MAANY,CAAaH,SAAbG,CAAwBoB,UAAD,QAAOA,EAAC,CAAC3B,GAAF2B,GAAU3B,GAAjB,EAAvBO,CAAd,CAEA,GAAIX,KAAK,GAAK,CAAC,CAAXA,EAAgBA,KAAK,GAAKW,KAAK,CAACX,KAApC,CAA2C,CACzC,MAAOW,MAAP,CACD,CAED,MAAOD,YAAW,CAACC,KAAD,CAAQX,KAAR,CAAeC,YAAf,CAA6BC,gBAA7B,CAAlB,CA7IA,CAAH,CAgJCwC,iBAhJD,4BAgJmB/B,KAhJnB,CAgJ0BgC,MAhJ1B,CAgJkBC,KAhJlB,CAgJsD,IAAlBvB,eAAkB,OAAlBA,cAAkB,CACnD,OAAQsB,MAAM,CAAC/C,IAAf,EACE,IAAK,SAAL,CACA,IAAK,UAAL,CAAiB,CACf,GAAII,MAAK,CAAG,CAAC,CAAb,CAEA,GAAI2C,MAAM,CAAC/C,IAAP+C,GAAgB,UAAhBA,EAA8BA,MAAM,CAAC9C,OAAP8C,CAAevC,GAAjD,CAAsD,CACpDJ,KAAK,CAAGW,KAAK,CAACZ,MAANY,CAAaH,SAAbG,CACLF,cAAD,QAAWA,MAAK,CAACL,GAANK,GAAckC,MAAM,CAAC9C,OAAP8C,CAAevC,GAAxC,EADMO,CAARX,CADF,KAIO,CACLA,KAAK,CAAGW,KAAK,CAACZ,MAANY,CAAaH,SAAbG,CACLF,cAAD,QAAWA,MAAK,CAACf,IAANe,GAAekC,MAAM,CAAC9C,OAAP8C,CAAejD,IAAzC,EADMiB,CAARX,CAGD,CAED,GAAIA,KAAK,GAAK,CAAC,CAAf,CAAkB,CAChB,MAAO,KAAP,CACD,CAED,MAAOU,YAAW,gCAEXC,KAFW,MAGdZ,MAAM,CAAEY,KAAK,CAACZ,MAANY,CAAac,GAAbd,CAAiB,SAACF,KAAD,CAAQH,CAAR,CAAc,CACrC,GAAIA,CAAC,GAAKN,KAAV,CAAiB,CACf,MAAOS,MAAP,CACD,CAED,GAAId,OAAJ,CAEA,GAAIgD,MAAM,CAAC/C,IAAP+C,GAAgB,UAAhBA,EAA8BA,MAAM,CAAC9C,OAAP8C,CAAeE,KAAjD,CAAwD,CACtDlD,MAAM,CACJgD,MAAM,CAAC9C,OAAP8C,CAAehD,MAAfgD,GAA0BrB,SAA1BqB,EACAtB,cAAc,CAACZ,KAAK,CAACf,IAAP,CAAd2B,GAA+BC,SAD/BqB,8CAGStB,cAAc,CAACZ,KAAK,CAACf,IAAP,CAHvBiD,EAISlC,KAAK,CAACd,MAJfgD,EAKSA,MAAM,CAAC9C,OAAP8C,CAAehD,MALxBgD,EAOIlC,KAAK,CAACd,MARZA,CADF,KAUO,CACLA,MAAM,CACJ0B,cAAc,CAACZ,KAAK,CAACf,IAAP,CAAd2B,GAA+BC,SAA/BD,gCAESA,cAAc,CAACZ,KAAK,CAACf,IAAP,CAFvB2B,EAGSsB,MAAM,CAAC9C,OAAP8C,CAAehD,MAHxB0B,EAKIsB,MAAM,CAAC9C,OAAP8C,CAAehD,MANrBA,CAOD,CAED,GAAMmD,KAAI,CACRH,MAAM,CAAC/C,IAAP+C,GAAgB,UAAhBA,EAA8BA,MAAM,CAAC9C,OAAP8C,CAAeG,IAAfH,EAAuB,IAArDA,CACIA,MAAM,CAAC9C,OAAP8C,CAAeG,IADnBH,CAEIlC,KAAK,CAACqC,IAHZ,CAKA,MAAOnD,OAAM,GAAKc,KAAK,CAACd,MAAjBA,EAA2BmD,IAAI,GAAKrC,KAAK,CAACqC,IAA1CnD,gCACEc,KADFd,MACSmD,IAAZ,CAAYA,IADTnD,CACeA,aADfA,GAEHc,KAFJ,CAhCM,EAHM,GAwChBT,KAxCgB,CAyChBC,YAzCgB,CA0ChBC,gBA1CgB,CAAlB,CA4CD,CAED,IAAK,SAAL,CAAgB,CACd,GAAIS,KAAK,CAACR,OAANQ,CAAcyB,MAAdzB,GAAyB,CAA7B,CAAgC,CAC9B,MAAO,KAAP,CACD,CAED,GAAMoC,YAAW,CAAGpC,KAAK,CAACR,OAANQ,CAAcA,KAAK,CAACR,OAANQ,CAAcyB,MAAdzB,CAAuB,CAArCA,EAAwCP,GAA5D,CACA,GAAMJ,OAAK,CAAGW,KAAK,CAACZ,MAANY,CAAaH,SAAbG,CACXF,cAAD,QAAWA,MAAK,CAACL,GAANK,GAAcsC,WAAzB,EADYpC,CAAd,CAIA,GAAIX,MAAK,GAAK,CAAC,CAAf,CAAkB,CAChB,MAAO,KAAP,CACD,CAED,sCACKW,KADL,MAEER,OAAO,CAAEQ,KAAK,CAACR,OAANQ,CAAcqC,KAAdrC,CAAoB,CAApBA,CAAuB,CAAC,CAAxBA,CAFX,CAGEX,YAHF,GAKD,CAED,QACE,MAAOV,WAAU,CAACoD,iBAAXpD,CAA6BqB,KAA7BrB,CAAoCqD,MAApCrD,CAAP,CAvFJ,CAjJA,CAAH,CA4OC2D,uBA5OD,kCA4OyBN,MA5OzB,CA4OiC,CAC9B,MAAOA,OAAM,CAAC/C,IAAP+C,GAAgB,UAAvB,CA7OA,CAAH,CAgPCO,cAAc,CAAE1D,UAhPjB,EAHD,CAsPA,MAAOyB,OAAP,CACD","names":["nanoid","BaseRouter","TYPE_ROUTE","TabActions","jumpTo","name","params","type","payload","getRouteHistory","routes","index","backBehavior","initialRouteName","history","key","initialRouteIndex","i","unshift","findIndex","route","changeIndex","state","currentKey","filter","it","concat","TabRouter","router","getInitialState","_ref2","routeNames","routeParamList","undefined","includes","indexOf","map","stale","getRehydratedState","partialState","_ref3","find","r","Math","min","max","_state$routes","length","_state$history","getStateForRouteNamesChange","_ref4","routeKeyChanges","getStateForRouteFocus","getStateForAction","action","_ref5","merge","path","previousKey","slice","shouldActionChangeFocus","actionCreators"],"sources":["TabRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'firstRoute',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (\n          state as PartialState<TabNavigationState<ParamListBase>>\n        ).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find(\n            (r) => r.name === name && !routeKeyChanges.includes(r.name)\n          ) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes: state.routes.map((route, i) => {\n                if (i !== index) {\n                  return route;\n                }\n\n                let params;\n\n                if (action.type === 'NAVIGATE' && action.payload.merge) {\n                  params =\n                    action.payload.params !== undefined ||\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...route.params,\n                          ...action.payload.params,\n                        }\n                      : route.params;\n                } else {\n                  params =\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params;\n                }\n\n                const path =\n                  action.type === 'NAVIGATE' && action.payload.path != null\n                    ? action.payload.path\n                    : route.path;\n\n                return params !== route.params || path !== route.path\n                  ? { ...route, path, params }\n                  : route;\n              }),\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"]},"metadata":{},"sourceType":"module"}