{"ast":null,"code":"import{getColorScheme}from\"../tools\";var baseStyle={flexDirection:'row',justifyContent:'center',space:1,px:'2',py:'0.5',alignItems:'center',_text:{fontSize:'xs',fontWeight:'medium'}};function variantSolid(props){var colorScheme=getColorScheme(props);return{_text:{color:'text.50'},_icon:{color:'text.50'},bg:\"\".concat(colorScheme,\".600\"),borderWidth:'1',borderColor:'transparent',borderRadius:'2'};}function variantSubtle(props){var colorScheme=getColorScheme(props);return{_text:{color:\"\".concat(colorScheme,\".900\")},_icon:{color:\"\".concat(colorScheme,\".900\")},bg:\"\".concat(colorScheme,\".100\"),_dark:{bg:\"\".concat(colorScheme,\".300\")},borderWidth:'1',borderRadius:'2',borderColor:'transparent'};}function variantOutline(props){var colorScheme=getColorScheme(props);return{_text:{color:\"\".concat(colorScheme,\".600\")},_icon:{color:\"\".concat(colorScheme,\".600\")},borderColor:\"\".concat(colorScheme,\".600\"),_dark:{_text:{color:\"\".concat(colorScheme,\".300\")},_icon:{color:\"\".concat(colorScheme,\".300\")},borderColor:\"\".concat(colorScheme,\".300\")},borderRadius:'2',borderWidth:'1'};}var variants={solid:variantSolid,subtle:variantSubtle,outline:variantOutline};var defaultProps={variant:'subtle',colorScheme:'muted',size:'md'};export default{baseStyle:baseStyle,variants:variants,defaultProps:defaultProps};","map":{"version":3,"mappings":"AAAA,OAASA,cAAT,gBAEA,GAAMC,UAAS,CAAG,CAChBC,aAAa,CAAE,KADC,CAEhBC,cAAc,CAAE,QAFA,CAGhBC,KAAK,CAAE,CAHS,CAIhBC,EAAE,CAAE,GAJY,CAKhBC,EAAE,CAAE,KALY,CAMhBC,UAAU,CAAE,QANI,CAOhBC,KAAK,CAAE,CAAEC,QAAQ,CAAE,IAAZ,CAAkBC,UAAU,CAAE,QAA9B,CAPS,CAAlB,CAUA,QAASC,aAAT,CAAsBC,KAAtB,CAAyE,CACvE,GAAMC,YAAW,CAAGb,cAAc,CAACY,KAAD,CAAlC,CACA,MAAO,CACLJ,KAAK,CAAE,CACLM,KAAK,CAAE,SADF,CADF,CAILC,KAAK,CAAE,CACLD,KAAK,CAAE,SADF,CAJF,CAOLE,EAAE,WAAKH,WAAL,QAPG,CAQLI,WAAW,CAAE,GARR,CASLC,WAAW,CAAE,aATR,CAULC,YAAY,CAAE,GAVT,CAAP,CAYD,CAED,QAASC,cAAT,CAAuBR,KAAvB,CAA0E,CACxE,GAAMC,YAAW,CAAGb,cAAc,CAACY,KAAD,CAAlC,CACA,MAAO,CACLJ,KAAK,CAAE,CAAEM,KAAK,WAAKD,WAAL,QAAP,CADF,CAELE,KAAK,CAAE,CAAED,KAAK,WAAKD,WAAL,QAAP,CAFF,CAGLG,EAAE,WAAKH,WAAL,QAHG,CAILQ,KAAK,CAAE,CAAEL,EAAE,WAAKH,WAAL,QAAJ,CAJF,CAKLI,WAAW,CAAE,GALR,CAMLE,YAAY,CAAE,GANT,CAOLD,WAAW,CAAE,aAPR,CAAP,CASD,CAED,QAASI,eAAT,CAAwBV,KAAxB,CAA2E,CACzE,GAAMC,YAAW,CAAGb,cAAc,CAACY,KAAD,CAAlC,CACA,MAAO,CACLJ,KAAK,CAAE,CAAEM,KAAK,WAAKD,WAAL,QAAP,CADF,CAELE,KAAK,CAAE,CAAED,KAAK,WAAKD,WAAL,QAAP,CAFF,CAGLK,WAAW,WAAKL,WAAL,QAHN,CAILQ,KAAK,CAAE,CACLb,KAAK,CAAE,CACLM,KAAK,WAAKD,WAAL,QADA,CADF,CAILE,KAAK,CAAE,CACLD,KAAK,WAAKD,WAAL,QADA,CAJF,CAOLK,WAAW,WAAKL,WAAL,QAPN,CAJF,CAaLM,YAAY,CAAE,GAbT,CAcLF,WAAW,CAAE,GAdR,CAAP,CAgBD,CAED,GAAMM,SAAQ,CAAG,CACfC,KAAK,CAAEb,YADQ,CAEfc,MAAM,CAAEL,aAFO,CAGfM,OAAO,CAAEJ,cAHM,CAAjB,CAMA,GAAMK,aAAY,CAAG,CACnBC,OAAO,CAAE,QADU,CAEnBf,WAAW,CAAE,OAFM,CAGnBgB,IAAI,CAAE,IAHa,CAArB,CAMA,cAAe,CACb5B,SADa,CACbA,SADa,CAEbsB,QAFa,CAEbA,QAFa,CAGbI,yBAHa,CAAf","names":["getColorScheme","baseStyle","flexDirection","justifyContent","space","px","py","alignItems","_text","fontSize","fontWeight","variantSolid","props","colorScheme","color","_icon","bg","borderWidth","borderColor","borderRadius","variantSubtle","_dark","variantOutline","variants","solid","subtle","outline","defaultProps","variant","size"],"sources":["badge.ts"],"sourcesContent":["import { getColorScheme } from '../tools';\nimport type { InterfaceBadgeProps } from '../../components/composites/Badge/types';\nconst baseStyle = {\n  flexDirection: 'row',\n  justifyContent: 'center',\n  space: 1,\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: { fontSize: 'xs', fontWeight: 'medium' },\n};\n\nfunction variantSolid(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: {\n      color: 'text.50',\n    },\n    _icon: {\n      color: 'text.50',\n    },\n    bg: `${colorScheme}.600`,\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2',\n  };\n}\n\nfunction variantSubtle(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: { color: `${colorScheme}.900` },\n    _icon: { color: `${colorScheme}.900` },\n    bg: `${colorScheme}.100`,\n    _dark: { bg: `${colorScheme}.300` },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantOutline(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: { color: `${colorScheme}.600` },\n    _icon: { color: `${colorScheme}.600` },\n    borderColor: `${colorScheme}.600`,\n    _dark: {\n      _text: {\n        color: `${colorScheme}.300`,\n      },\n      _icon: {\n        color: `${colorScheme}.300`,\n      },\n      borderColor: `${colorScheme}.300`,\n    },\n    borderRadius: '2',\n    borderWidth: '1',\n  };\n}\n\nconst variants = {\n  solid: variantSolid as any,\n  subtle: variantSubtle as any,\n  outline: variantOutline as any,\n};\n\nconst defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'muted',\n  size: 'md',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}