{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useMemo as $58Phs$useMemo,useEffect as $58Phs$useEffect}from\"react\";import{useMultipleSelectionState as $58Phs$useMultipleSelectionState,SelectionManager as $58Phs$SelectionManager}from\"@react-stately/selection\";import{useCollection as $58Phs$useCollection}from\"@react-stately/collections\";import{useControlledState as $58Phs$useControlledState}from\"@react-stately/utils\";var tmp=Symbol.iterator;var $a02d57049d202695$export$d085fb9e920b5ca7=function(){function $a02d57049d202695$export$d085fb9e920b5ca7(nodes){var _this=this;_classCallCheck(this,$a02d57049d202695$export$d085fb9e920b5ca7);this.keyMap=new Map();this.iterable=nodes;var visit=function visit(node){_this.keyMap.set(node.key,node);if(node.childNodes&&node.type==='section')for(var child of node.childNodes){visit(child);}};for(var node2 of nodes){visit(node2);}var last;var index=0;for(var _ref of this.keyMap){var _ref2=_slicedToArray(_ref,2);var key=_ref2[0];var node1=_ref2[1];if(last){last.nextKey=key;node1.prevKey=last.key;}else{this.firstKey=key;node1.prevKey=undefined;}if(node1.type==='item')node1.index=index++;last=node1;last.nextKey=undefined;}this.lastKey=last===null||last===void 0?void 0:last.key;}_createClass($a02d57049d202695$export$d085fb9e920b5ca7,[{key:tmp,value:function*value(){yield*this.iterable;}},{key:\"size\",get:function get(){return this.keyMap.size;}},{key:\"getKeys\",value:function getKeys(){return this.keyMap.keys();}},{key:\"getKeyBefore\",value:function getKeyBefore(key){var node=this.keyMap.get(key);return node?node.prevKey:null;}},{key:\"getKeyAfter\",value:function getKeyAfter(key){var node=this.keyMap.get(key);return node?node.nextKey:null;}},{key:\"getFirstKey\",value:function getFirstKey(){return this.firstKey;}},{key:\"getLastKey\",value:function getLastKey(){return this.lastKey;}},{key:\"getItem\",value:function getItem(key){return this.keyMap.get(key);}},{key:\"at\",value:function at(idx){var keys=_toConsumableArray(this.getKeys());return this.getItem(keys[idx]);}}]);return $a02d57049d202695$export$d085fb9e920b5ca7;}();function $e72dd72e1c76a225$export$2f645645f7bca764(props){var filter=props.filter;var selectionState=$58Phs$useMultipleSelectionState(props);var disabledKeys=$58Phs$useMemo(function(){return props.disabledKeys?new Set(props.disabledKeys):new Set();},[props.disabledKeys]);var factory=function factory(nodes){return filter?new $a02d57049d202695$export$d085fb9e920b5ca7(filter(nodes)):new $a02d57049d202695$export$d085fb9e920b5ca7(nodes);};var context=$58Phs$useMemo(function(){return{suppressTextValueWarning:props.suppressTextValueWarning};},[props.suppressTextValueWarning]);var collection=$58Phs$useCollection(props,factory,context,[filter]);$58Phs$useEffect(function(){if(selectionState.focusedKey!=null&&!collection.getItem(selectionState.focusedKey))selectionState.setFocusedKey(null);},[collection,selectionState.focusedKey]);return{collection:collection,disabledKeys:disabledKeys,selectionManager:new $58Phs$SelectionManager(collection,selectionState)};}function $a0d645289fe9b86b$export$e7f05e985daf4b5f(props){var _defaultSelectedKey;var _$58Phs$useControlled=$58Phs$useControlledState(props.selectedKey,(_defaultSelectedKey=props.defaultSelectedKey)!==null&&_defaultSelectedKey!==void 0?_defaultSelectedKey:null,props.onSelectionChange),_$58Phs$useControlled2=_slicedToArray(_$58Phs$useControlled,2),selectedKey=_$58Phs$useControlled2[0],setSelectedKey=_$58Phs$useControlled2[1];var selectedKeys=$58Phs$useMemo(function(){return selectedKey!=null?[selectedKey]:[];},[selectedKey]);var _$e72dd72e1c76a225$ex=$e72dd72e1c76a225$export$2f645645f7bca764(_objectSpread(_objectSpread({},props),{},{selectionMode:'single',disallowEmptySelection:true,allowDuplicateSelectionEvents:true,selectedKeys:selectedKeys,onSelectionChange:function onSelectionChange(keys){var key=keys.values().next().value;if(key===selectedKey&&props.onSelectionChange)props.onSelectionChange(key);setSelectedKey(key);}})),collection=_$e72dd72e1c76a225$ex.collection,disabledKeys=_$e72dd72e1c76a225$ex.disabledKeys,selectionManager=_$e72dd72e1c76a225$ex.selectionManager;var selectedItem=selectedKey!=null?collection.getItem(selectedKey):null;return{collection:collection,disabledKeys:disabledKeys,selectionManager:selectionManager,selectedKey:selectedKey,setSelectedKey:setSelectedKey,selectedItem:selectedItem};}export{$e72dd72e1c76a225$export$2f645645f7bca764 as useListState,$a0d645289fe9b86b$export$e7f05e985daf4b5f as useSingleSelectListState,$a02d57049d202695$export$d085fb9e920b5ca7 as ListCollection};","map":{"version":3,"mappings":"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","names":["Symbol","iterator","$a02d57049d202695$export$d085fb9e920b5ca7","nodes","keyMap","Map","iterable","visit","node","set","key","childNodes","type","child","node2","last","index","node1","nextKey","prevKey","firstKey","undefined","lastKey","size","keys","get","idx","getKeys","getItem","$e72dd72e1c76a225$export$2f645645f7bca764","props","filter","selectionState","$58Phs$useMultipleSelectionState","disabledKeys","$58Phs$useMemo","Set","factory","context","suppressTextValueWarning","collection","$58Phs$useCollection","$58Phs$useEffect","focusedKey","setFocusedKey","selectionManager","$58Phs$SelectionManager","$a0d645289fe9b86b$export$e7f05e985daf4b5f","_defaultSelectedKey","$58Phs$useControlledState","selectedKey","defaultSelectedKey","onSelectionChange","setSelectedKey","selectedKeys","selectionMode","disallowEmptySelection","allowDuplicateSelectionEvents","values","next","value","selectedItem"],"sources":["packages/@react-stately/list/src/ListCollection.ts","packages/@react-stately/list/src/useListState.ts","packages/@react-stately/list/src/useSingleSelectListState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Node} from '@react-types/shared';\nimport {Key} from 'react';\n\nexport class ListCollection<T> implements Collection<Node<T>> {\n  private keyMap: Map<Key, Node<T>> = new Map();\n  private iterable: Iterable<Node<T>>;\n  private firstKey: Key;\n  private lastKey: Key;\n\n  constructor(nodes: Iterable<Node<T>>) {\n    this.iterable = nodes;\n\n    let visit = (node: Node<T>) => {\n      this.keyMap.set(node.key, node);\n\n      if (node.childNodes && node.type === 'section') {\n        for (let child of node.childNodes) {\n          visit(child);\n        }\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let last: Node<T>;\n    let index = 0;\n    for (let [key, node] of this.keyMap) {\n      if (last) {\n        last.nextKey = key;\n        node.prevKey = last.key;\n      } else {\n        this.firstKey = key;\n        node.prevKey = undefined;\n      }\n\n      if (node.type === 'item') {\n        node.index = index++;\n      }\n\n      last = node;\n\n      // Set nextKey as undefined since this might be the last node\n      // If it isn't the last node, last.nextKey will properly set at start of new loop\n      last.nextKey = undefined;\n    }\n\n    this.lastKey = last?.key;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.iterable;\n  }\n\n  get size() {\n    return this.keyMap.size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.prevKey : null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.nextKey : null;\n  }\n\n  getFirstKey() {\n    return this.firstKey;\n  }\n\n  getLastKey() {\n    return this.lastKey;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key);\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionBase, Node} from '@react-types/shared';\nimport {Key, useEffect, useMemo} from 'react';\nimport {ListCollection} from './ListCollection';\nimport {MultipleSelectionStateProps, SelectionManager, useMultipleSelectionState} from '@react-stately/selection';\nimport {useCollection} from '@react-stately/collections';\n\nexport interface ListProps<T> extends CollectionBase<T>, MultipleSelectionStateProps {\n  /** Filter function to generate a filtered list of nodes. */\n  filter?: (nodes: Iterable<Node<T>>) => Iterable<Node<T>>,\n  /** @private */\n  suppressTextValueWarning?: boolean\n}\n\nexport interface ListState<T> {\n  /** A collection of items in the list. */\n  collection: Collection<Node<T>>,\n\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\n/**\n * Provides state management for list-like components. Handles building a collection\n * of items from props, and manages multiple selection state.\n */\nexport function useListState<T extends object>(props: ListProps<T>): ListState<T>  {\n  let {filter} = props;\n\n  let selectionState = useMultipleSelectionState(props);\n  let disabledKeys = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n\n  let factory = nodes => filter ? new ListCollection(filter(nodes)) : new ListCollection(nodes as Iterable<Node<T>>);\n  let context = useMemo(() => ({suppressTextValueWarning: props.suppressTextValueWarning}), [props.suppressTextValueWarning]);\n\n  let collection = useCollection(props, factory, context, [filter]);\n\n  // Reset focused key if that item is deleted from the collection.\n  useEffect(() => {\n    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {\n      selectionState.setFocusedKey(null);\n    }\n  }, [collection, selectionState.focusedKey]);\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager: new SelectionManager(collection, selectionState)\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, SingleSelection} from '@react-types/shared';\nimport {Key, useMemo} from 'react';\nimport {ListState, useListState} from './useListState';\nimport {Node} from '@react-types/shared';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface SingleSelectListProps<T> extends CollectionBase<T>, Omit<SingleSelection, 'disallowEmptySelection'> {\n  /** Filter function to generate a filtered list of nodes. */\n  filter?: (nodes: Iterable<Node<T>>) => Iterable<Node<T>>,\n  /** @private */\n  suppressTextValueWarning?: boolean\n}\n\nexport interface SingleSelectListState<T> extends ListState<T> {\n  /** The key for the currently selected item. */\n  readonly selectedKey: Key,\n\n  /** Sets the selected key. */\n  setSelectedKey(key: Key): void,\n\n  /** The value of the currently selected item. */\n  readonly selectedItem: Node<T>\n}\n\n/**\n * Provides state management for list-like components with single selection.\n * Handles building a collection of items from props, and manages selection state.\n */\nexport function useSingleSelectListState<T extends object>(props: SingleSelectListProps<T>): SingleSelectListState<T>  {\n  let [selectedKey, setSelectedKey] = useControlledState(props.selectedKey, props.defaultSelectedKey ?? null, props.onSelectionChange);\n  let selectedKeys = useMemo(() => selectedKey != null ? [selectedKey] : [], [selectedKey]);\n  let {collection, disabledKeys, selectionManager} = useListState({\n    ...props,\n    selectionMode: 'single',\n    disallowEmptySelection: true,\n    allowDuplicateSelectionEvents: true,\n    selectedKeys,\n    onSelectionChange: (keys: Set<Key>) => {\n      let key = keys.values().next().value;\n\n      // Always fire onSelectionChange, even if the key is the same\n      // as the current key (useControlledState does not).\n      if (key === selectedKey && props.onSelectionChange) {\n        props.onSelectionChange(key);\n      }\n\n      setSelectedKey(key);\n    }\n  });\n\n  let selectedItem = selectedKey != null\n    ? collection.getItem(selectedKey)\n    : null;\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager,\n    selectedKey,\n    setSelectedKey,\n    selectedItem\n  };\n}\n"]},"metadata":{},"sourceType":"module"}