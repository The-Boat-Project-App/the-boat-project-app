{"ast":null,"code":"var _window$document;export var isDOMAvailable=typeof window!=='undefined'&&!!((_window$document=window.document)!=null&&_window$document.createElement);export var canUseEventListeners=isDOMAvailable&&!!(window.addEventListener||window.attachEvent);export var canUseViewport=isDOMAvailable&&!!window.screen;export var isAsyncDebugging=false;","map":{"version":3,"mappings":"qBASA,MAAO,IAAMA,eAAc,CAAG,MAAOC,OAAP,GAAkB,WAAlB,EAAiC,CAAC,oBAACA,MAAM,CAACC,QAAR,SAAC,iBAAiBC,aAAlB,CAAzD,CACP,MAAO,IAAMC,qBAAoB,CAC/BJ,cAAc,EAAI,CAAC,EAAEC,MAAM,CAACI,gBAAP,EAA2BJ,MAAM,CAACK,WAApC,CADd,CAEP,MAAO,IAAMC,eAAc,CAAGP,cAAc,EAAI,CAAC,CAACC,MAAM,CAACO,MAAlD,CACP,MAAO,IAAMC,iBAAgB,CAAG,KAAzB","names":["isDOMAvailable","window","document","createElement","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isAsyncDebugging"],"sourceRoot":"","sources":["../../src/environment/browser.web.ts"],"sourcesContent":["declare global {\n  // Add IE-specific interface to Window\n  interface Window {\n    attachEvent(event: string, listener: EventListener): boolean;\n  }\n}\n\n// Used for delegating node actions when browser APIs aren't available\n// like in SSR websites.\nexport const isDOMAvailable = typeof window !== 'undefined' && !!window.document?.createElement;\nexport const canUseEventListeners =\n  isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport const canUseViewport = isDOMAvailable && !!window.screen;\nexport const isAsyncDebugging = false;\n"]},"metadata":{},"sourceType":"module"}