{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import Linking from\"react-native-web/dist/exports/Linking\";import Platform from\"react-native-web/dist/exports/Platform\";var linkToHREF=function linkToHREF(URL){Linking.openURL(URL).catch(function(err){return console.error('An error occurred',err);});};var addOnPressFunctionality=function addOnPressFunctionality(href,callback){href?linkToHREF(href):'';callback?callback():function(){};};export function useLink(props){var href=props.href,isExternal=props.isExternal,_onPress=props.onPress,_ref=props._ref;var platformLinkProps={};if(Platform.OS==='web'){platformLinkProps={href:href,onClick:_onPress};if(isExternal&&_ref.current){_ref.current.target='_blank';}}else{platformLinkProps={onPress:function onPress(){addOnPressFunctionality(href,_onPress);}};}return{linkProps:_objectSpread(_objectSpread({},platformLinkProps),{},{accessibilityRole:'link',accessible:true})};}","map":{"version":3,"mappings":"g8BAIA,GAAMA,WAAU,CAAIC,QAAdD,WAAcC,IAAD,CAAiB,CAClCC,OAAO,CAACC,OAARD,CAAgBD,GAAhBC,EAAqBE,KAArBF,CAA4BG,YAAD,QAASC,QAAO,CAACC,KAARD,CAAc,mBAAdA,CAAmCD,GAAnCC,CAAT,EAA3BJ,EADF,EAIA,GAAMM,wBAAuB,CAAG,QAA1BA,wBAA0B,CAACC,IAAD,CAAqBC,QAArB,CAAuC,CACrED,IAAI,CAAGT,UAAU,CAACS,IAAD,CAAb,CAAsB,EAA1BA,CACAC,QAAQ,CAAGA,QAAQ,EAAX,CAAgB,UAAM,CAA9B,EAFF,EAKA,MAAO,SAASC,QAAT,CAAiBC,KAAjB,CAAsC,CAC3C,GAAQH,KAAR,CAA4CG,KAA5C,CAAQH,IAAR,CAAcI,UAAd,CAA4CD,KAA5C,CAAcC,UAAd,CAA0BC,QAA1B,CAA4CF,KAA5C,CAA0BE,OAA1B,CAAmCC,IAAnC,CAA4CH,KAA5C,CAAmCG,IAAnC,CAEA,GAAIC,kBAAiB,CAAG,EAAxB,CAEA,GAAIC,QAAQ,CAACC,EAATD,GAAgB,KAApB,CAA2B,CACzBD,iBAAiB,CAAG,CAClBP,IADkB,CAClBA,IADkB,CAElBU,OAAO,CAAEL,QAFS,CAApBE,CAKA,GAAIH,UAAU,EAAIE,IAAI,CAACK,OAAvB,CAAgC,CAC9BL,IAAI,CAACK,OAALL,CAAaM,MAAbN,CAAsB,QAAtBA,CACD,CARH,KASO,CACLC,iBAAiB,CAAG,CAClBF,OAAO,CAAE,kBAAM,CACbN,uBAAuB,CAACC,IAAD,CAAOK,QAAP,CAAvBN,CACD,CAHiB,CAApBQ,CAKD,CAED,MAAO,CACLM,SAAS,gCACJN,iBADI,MAEPO,iBAAiB,CAAE,MAFZ,CAGPC,UAAU,CAAE,IAHL,EADJ,CAAP,CAOD","names":["linkToHREF","URL","Linking","openURL","catch","err","console","error","addOnPressFunctionality","href","callback","useLink","props","isExternal","onPress","_ref","platformLinkProps","Platform","OS","onClick","current","target","linkProps","accessibilityRole","accessible"],"sources":["useLink.ts"],"sourcesContent":["import { Linking, Platform } from 'react-native';\nimport type { IUseLinkProp } from './types';\nimport type { AccessibilityRole } from 'react-native';\n\nconst linkToHREF = (URL: string) => {\n  Linking.openURL(URL).catch((err) => console.error('An error occurred', err));\n};\n\nconst addOnPressFunctionality = (href: string | any, callback: any) => {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : () => {};\n};\n\nexport function useLink(props: IUseLinkProp) {\n  const { href, isExternal, onPress, _ref } = props;\n\n  let platformLinkProps = {};\n\n  if (Platform.OS === 'web') {\n    platformLinkProps = {\n      href,\n      onClick: onPress,\n    };\n    // Adding target to a tag created by RN-Web\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: () => {\n        addOnPressFunctionality(href, onPress);\n      },\n    };\n  }\n\n  return {\n    linkProps: {\n      ...platformLinkProps,\n      accessibilityRole: 'link' as AccessibilityRole,\n      accessible: true,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}