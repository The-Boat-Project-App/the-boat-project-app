{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"children\",\"separator\",\"_text\",\"maxItems\",\"_button\",\"isCollapsed\",\"onCollapseChange\"],_excluded2=[\"spacing\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{HStack}from\"../../primitives/Stack\";import{useControllableState}from\"../../../hooks\";import{Pressable}from\"../../primitives/Pressable\";import{usePropsResolution}from\"../../../hooks/useThemeProps/usePropsResolution\";import Text from\"../../primitives/Text\";import{ThreeDotsIcon}from\"../../primitives/Icon/Icons\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Breadcrumb=function Breadcrumb(_ref,ref){var style=_ref.style,children=_ref.children,separator=_ref.separator,_text=_ref._text,maxItems=_ref.maxItems,_button=_ref._button,isCollapsed=_ref.isCollapsed,onCollapseChange=_ref.onCollapseChange,props=_objectWithoutProperties(_ref,_excluded);var textProps=_objectSpread({},_text);var _useControllableState=useControllableState({value:isCollapsed,defaultValue:false,onChange:function onChange(value){onCollapseChange&&onCollapseChange(value);}}),_useControllableState2=_slicedToArray(_useControllableState,2),collapsed=_useControllableState2[0],setCollapsed=_useControllableState2[1];var _usePropsResolution=usePropsResolution('Breadcrumb',props),spacing=_usePropsResolution.spacing,newProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var separatorProps={accessibilityRole:Platform.OS==='web'?'presentation':undefined};var separatorElement=separator?typeof separator==='string'?React.createElement(Text,_extends({},separatorProps,{mx:spacing}),separator):React.cloneElement(separator,_objectSpread({mx:spacing},separatorProps)):React.createElement(Text,_extends({mx:spacing},separatorProps),'/');if(useHasResponsiveProps(props)){return null;}return React.createElement(HStack,_extends({display:\"flex\",flexWrap:\"wrap\"},newProps,{ref:ref,style:style,divider:separatorElement,space:spacing,accessibilityRole:Platform.OS==='web'?'navigation':undefined,accessibilityLabel:\"Breadcrumb\"}),children&&!children.length?children:getBreadcrumbSeparator(children,textProps,maxItems,_button,collapsed,setCollapsed));};var getBreadcrumbSeparator=function getBreadcrumbSeparator(children,props,maxItems,_button,collapsed,setCollapsed){if(Array.isArray(children)){if(children.length===1){return children;}var result=[];if(maxItems){var buttonAdded=false;if(typeof maxItems=='number'){if(children.length>2*maxItems){for(var i=0;i<children.length;i++){if(i<maxItems||i>=children.length-maxItems){result.push(children[i]);}else{if(!buttonAdded){result.push(React.createElement(CollapseButton,_extends({},_button,{setCollapsed:setCollapsed})));buttonAdded=true;}}}buttonAdded=false;}}else if(typeof maxItems=='object'){if(children.length>maxItems[0]+maxItems[1])for(var _i=0;_i<children.length;_i++){if(_i<maxItems[0]||_i>=children.length-maxItems[1]){result.push(children[_i]);}else{if(!buttonAdded){result.push(React.createElement(CollapseButton,_extends({},_button,{setCollapsed:setCollapsed})));buttonAdded=true;}}}buttonAdded=false;}}else{result=children;}if(!collapsed){result=children;}return result.map(function(child,index){return React.cloneElement(child,_objectSpread(_objectSpread({_text:_objectSpread({},props)},props),{},{key:\"breadcrumb-separator-\".concat(index)}));});}else{return children;}};var CollapseButton=function CollapseButton(props){var remainingProps=Object.assign({},props);return React.createElement(Pressable,_extends({},remainingProps,{onPress:function onPress(){props.setCollapsed(false);}}),React.createElement(ThreeDotsIcon,{size:4}));};export default memo(forwardRef(Breadcrumb));","map":{"version":3,"mappings":"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","names":["React","memo","forwardRef","HStack","useControllableState","Pressable","usePropsResolution","Text","ThreeDotsIcon","useHasResponsiveProps","Breadcrumb","ref","style","children","separator","_text","maxItems","_button","isCollapsed","onCollapseChange","props","textProps","value","defaultValue","onChange","collapsed","setCollapsed","spacing","newProps","separatorProps","accessibilityRole","Platform","OS","undefined","separatorElement","mx","cloneElement","display","flexWrap","divider","space","accessibilityLabel","length","getBreadcrumbSeparator","Array","isArray","result","buttonAdded","i","push","CollapseButton","map","child","index","key","remainingProps","onPress","size"],"sources":["Breadcrumb.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { AccessibilityRole, Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { useControllableState } from '../../../hooks';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IBreadcrumbProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\nimport Text from '../../primitives/Text';\nimport type { IFlexProps } from '../../primitives';\nimport { ThreeDotsIcon } from '../../primitives/Icon/Icons';\n\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst Breadcrumb = (\n  {\n    style,\n    children,\n    separator,\n    _text,\n    maxItems,\n    _button,\n    isCollapsed,\n    onCollapseChange,\n    ...props\n  }: IBreadcrumbProps & IFlexProps,\n  ref: any\n) => {\n  const textProps = { ..._text };\n\n  // Maintaining state to show all children on press of collapse button\n  const [collapsed, setCollapsed] = useControllableState({\n    value: isCollapsed,\n    defaultValue: false,\n    onChange: (value) => {\n      onCollapseChange && onCollapseChange(value);\n    },\n  });\n  const { spacing, ...newProps } = usePropsResolution('Breadcrumb', props);\n\n  const separatorProps = {\n    accessibilityRole: (Platform.OS === 'web'\n      ? 'presentation'\n      : undefined) as AccessibilityRole,\n  };\n  const separatorElement = separator ? (\n    typeof separator === 'string' ? (\n      <Text {...separatorProps} mx={spacing}>\n        {separator}\n      </Text>\n    ) : (\n      React.cloneElement(separator, {\n        mx: spacing,\n        ...separatorProps,\n      })\n    )\n  ) : (\n    <Text mx={spacing} {...separatorProps}>\n      {'/'}\n    </Text>\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <HStack\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      {...newProps}\n      ref={ref}\n      style={style}\n      // Custom Separator\n      divider={separatorElement}\n      space={spacing}\n      // @ts-ignore - Web only prop\n      accessibilityRole={Platform.OS === 'web' ? 'navigation' : undefined}\n      accessibilityLabel=\"Breadcrumb\"\n    >\n      {children && !children.length\n        ? children\n        : getBreadcrumbSeparator(\n            children,\n            textProps,\n            maxItems,\n            _button,\n            collapsed,\n            setCollapsed\n          )}\n    </HStack>\n  );\n};\n\n// Returns children to be rendered\nconst getBreadcrumbSeparator = (\n  children: JSX.Element[] | JSX.Element | any,\n  props: any,\n  maxItems: number | number[] | undefined,\n  _button: any,\n  collapsed: boolean | undefined,\n  setCollapsed: any\n) => {\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children;\n    }\n    let result: any = [];\n    if (maxItems) {\n      let buttonAdded = false;\n      if (typeof maxItems == 'number') {\n        // When MaxItems is a number\n        if (children.length > 2 * maxItems) {\n          for (let i = 0; i < children.length; i++) {\n            if (i < maxItems || i >= children.length - maxItems) {\n              result.push(children[i]);\n            } else {\n              if (!buttonAdded) {\n                result.push(\n                  <CollapseButton {..._button} setCollapsed={setCollapsed} />\n                );\n                buttonAdded = true;\n              }\n            }\n          }\n          buttonAdded = false;\n        }\n      }\n      // Whem maxItems is an array\n      else if (typeof maxItems == 'object') {\n        if (children.length > maxItems[0] + maxItems[1])\n          for (let i = 0; i < children.length; i++) {\n            if (i < maxItems[0] || i >= children.length - maxItems[1]) {\n              result.push(children[i]);\n            } else {\n              if (!buttonAdded) {\n                // pushing Collapsible button as a child\n                result.push(\n                  <CollapseButton {..._button} setCollapsed={setCollapsed} />\n                );\n                buttonAdded = true;\n              }\n            }\n          }\n        buttonAdded = false;\n      }\n    } else {\n      result = children;\n    }\n    if (!collapsed) {\n      result = children;\n    }\n    return result.map((child: any, index: number) => {\n      return React.cloneElement(child, {\n        _text: { ...props },\n        ...props,\n        key: `breadcrumb-separator-${index}`,\n      });\n    });\n  } else {\n    return children;\n  }\n};\n\n// Collapse button\nconst CollapseButton = (props: any) => {\n  const { ...remainingProps } = props;\n\n  return (\n    <Pressable\n      {...remainingProps}\n      onPress={() => {\n        props.setCollapsed(false);\n      }}\n    >\n      <ThreeDotsIcon size={4} />\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Breadcrumb));\nexport type { IBreadcrumbProps };\n"]},"metadata":{},"sourceType":"module"}