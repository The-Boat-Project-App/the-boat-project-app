{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useEffect,useState}from'react';import{useTheme}from\"../hooks/useTheme\";import{useNativeBaseConfig}from\"../core/NativeBaseContext\";import{isResponsiveAnyProp}from\"../theme/tools\";export function useResponsiveSSRProps(incomingProps){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modified=_useState2[0],setModified=_useState2[1];var theme=useTheme();var responsivePropsExists=isResponsiveAnyProp(incomingProps,theme);var isSSR=useNativeBaseConfig('useBreakpointResolvedProps').isSSR;var modifiedProps=incomingProps;if(responsivePropsExists&&isSSR&&!modified){modifiedProps=_objectSpread(_objectSpread({},modifiedProps),{},{key:Math.random()});}useEffect(function(){if(responsivePropsExists&&isSSR){setModified(true);}},[responsivePropsExists,isSSR]);return modifiedProps;}","map":{"version":3,"mappings":"y4BAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,QAAT,yBACA,OAASC,mBAAT,iCACA,OAASC,mBAAT,sBAEA,MAAO,SAASC,sBAAT,CAA+BC,aAA/B,CAAmD,CACxD,cAAgCL,QAAQ,CAAC,KAAD,CAAxC,wCAAOM,QAAP,eAAiBC,WAAjB,eACA,GAAMC,MAAK,CAAGP,QAAQ,EAAtB,CAEA,GAAMQ,sBAAqB,CAAGN,mBAAmB,CAACE,aAAD,CAAgBG,KAAhB,CAAjD,CACA,GAAME,MAAK,CAAGR,mBAAmB,CAAC,4BAAD,CAAnBA,CAAkDQ,KAAhE,CAEA,GAAIC,cAAa,CAAGN,aAApB,CACA,GAAII,qBAAqB,EAAIC,KAAzBD,EAAkC,CAACH,QAAvC,CAAiD,CAC/CK,aAAa,gCAAQA,aAAR,MAAuBC,GAAG,CAAEC,IAAI,CAACC,MAALD,EAA5B,EAAbF,CACD,CACDZ,SAAS,CAAC,UAAW,CACnB,GAAIU,qBAAqB,EAAIC,KAA7B,CAAoC,CAClCH,WAAW,CAAC,IAAD,CAAXA,CACD,CAHM,EAIN,CAACE,qBAAD,CAAwBC,KAAxB,CAJM,CAATX,CAMA,MAAOY,cAAP,CACD","names":["useEffect","useState","useTheme","useNativeBaseConfig","isResponsiveAnyProp","useResponsiveSSRProps","incomingProps","modified","setModified","theme","responsivePropsExists","isSSR","modifiedProps","key","Math","random"],"sources":["useResponsiveSSRProps.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../theme/tools';\n\nexport function useResponsiveSSRProps(incomingProps: any) {\n  const [modified, setModified] = useState(false);\n  const theme = useTheme();\n\n  const responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n\n  let modifiedProps = incomingProps;\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = { ...modifiedProps, key: Math.random() };\n  }\n  useEffect((): any => {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n\n  return modifiedProps;\n}\n"]},"metadata":{},"sourceType":"module"}