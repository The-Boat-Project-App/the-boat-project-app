{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{CodedError,Platform}from'expo-modules-core';import FontObserver from'fontfaceobserver';import{FontDisplay}from\"./Font.types\";function getFontFaceStyleSheet(){if(!Platform.isDOMAvailable){return null;}var styleSheet=getStyleElement();return styleSheet.sheet?styleSheet.sheet:null;}function getFontFaceRules(){var sheet=getFontFaceStyleSheet();if(sheet){var rules=_toConsumableArray(sheet.cssRules);var items=[];for(var i=0;i<rules.length;i++){var rule=rules[i];if(rule instanceof CSSFontFaceRule){items.push({rule:rule,index:i});}}return items;}return[];}function getFontFaceRulesMatchingResource(fontFamilyName,options){var rules=getFontFaceRules();return rules.filter(function(_ref){var rule=_ref.rule;return rule.style.fontFamily===fontFamilyName&&(options&&options.display?options.display===rule.style.fontDisplay:true);});}export default{get name(){return'ExpoFontLoader';},unloadAllAsync:function(){var _unloadAllAsync=_asyncToGenerator(function*(){if(!Platform.isDOMAvailable)return;var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){document.removeChild(element);}});function unloadAllAsync(){return _unloadAllAsync.apply(this,arguments);}return unloadAllAsync;}(),unloadAsync:function(){var _unloadAsync=_asyncToGenerator(function*(fontFamilyName,options){var sheet=getFontFaceStyleSheet();if(!sheet)return;var items=getFontFaceRulesMatchingResource(fontFamilyName,options);for(var item of items){sheet.deleteRule(item.index);}});function unloadAsync(_x,_x2){return _unloadAsync.apply(this,arguments);}return unloadAsync;}(),loadAsync:function(){var _loadAsync=_asyncToGenerator(function*(fontFamilyName,resource){if(!Platform.isDOMAvailable){return;}var canInjectStyle=document.head&&typeof document.head.appendChild==='function';if(!canInjectStyle){throw new CodedError('ERR_WEB_ENVIRONMENT',\"The browser's `document.head` element doesn't support injecting fonts.\");}var style=_createWebStyle(fontFamilyName,resource);document.head.appendChild(style);if(!isFontLoadingListenerSupported()){return;}return new FontObserver(fontFamilyName,{display:resource.display}).load();});function loadAsync(_x3,_x4){return _loadAsync.apply(this,arguments);}return loadAsync;}()};var ID='expo-generated-fonts';function getStyleElement(){var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){return element;}var styleElement=document.createElement('style');styleElement.id=ID;styleElement.type='text/css';return styleElement;}function _createWebStyle(fontFamily,resource){var fontStyle=\"@font-face {\\n    font-family: \"+fontFamily+\";\\n    src: url(\"+resource.uri+\");\\n    font-display: \"+(resource.display||FontDisplay.AUTO)+\";\\n  }\";var styleElement=getStyleElement();if(styleElement.styleSheet){var styleElementIE=styleElement;styleElementIE.styleSheet.cssText=styleElementIE.styleSheet.cssText?styleElementIE.styleSheet.cssText+fontStyle:fontStyle;}else{var textNode=document.createTextNode(fontStyle);styleElement.appendChild(textNode);}return styleElement;}function isFontLoadingListenerSupported(){var userAgent=window.navigator.userAgent;var isIOS=!!userAgent.match(/iPad|iPhone/i);var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);var isEdge=userAgent.includes('Edge');var isIE=userAgent.includes('Trident');var isFirefox=userAgent.includes('Firefox');return!isSafari&&!isIOS&&!isEdge&&!isIE&&!isFirefox;}","map":{"version":3,"mappings":"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","names":["CodedError","Platform","FontObserver","FontDisplay","getFontFaceStyleSheet","isDOMAvailable","styleSheet","getStyleElement","sheet","getFontFaceRules","rules","cssRules","items","i","length","rule","CSSFontFaceRule","push","index","getFontFaceRulesMatchingResource","fontFamilyName","options","filter","style","fontFamily","display","fontDisplay","name","unloadAllAsync","element","document","getElementById","ID","HTMLStyleElement","removeChild","unloadAsync","item","deleteRule","loadAsync","resource","canInjectStyle","head","appendChild","_createWebStyle","isFontLoadingListenerSupported","load","styleElement","createElement","id","type","fontStyle","uri","AUTO","styleElementIE","cssText","textNode","createTextNode","userAgent","window","navigator","isIOS","match","isSafari","test","isEdge","includes","isIE","isFirefox"],"sourceRoot":"","sources":["../src/ExpoFontLoader.web.ts"],"sourcesContent":["import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\n\nimport { UnloadFontOptions } from './Font';\nimport { FontDisplay, FontResource } from './Font.types';\n\nfunction getFontFaceStyleSheet(): CSSStyleSheet | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  const styleSheet = getStyleElement();\n  return styleSheet.sheet ? (styleSheet.sheet as CSSStyleSheet) : null;\n}\n\ntype RuleItem = { rule: CSSFontFaceRule; index: number };\n\nfunction getFontFaceRules(): RuleItem[] {\n  const sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    // @ts-ignore: rule iterator\n    const rules = [...sheet.cssRules];\n\n    const items: RuleItem[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({ rule, index: i });\n      }\n    }\n    return items;\n  }\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(\n  fontFamilyName: string,\n  options?: UnloadFontOptions\n): RuleItem[] {\n  const rules = getFontFaceRules();\n  return rules.filter(({ rule }) => {\n    return (\n      rule.style.fontFamily === fontFamilyName &&\n      (options && options.display ? options.display === (rule.style as any).fontDisplay : true)\n    );\n  });\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  async unloadAllAsync(): Promise<void> {\n    if (!Platform.isDOMAvailable) return;\n\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n      document.removeChild(element);\n    }\n  },\n\n  async unloadAsync(fontFamilyName: string, options?: UnloadFontOptions): Promise<void> {\n    const sheet = getFontFaceStyleSheet();\n    if (!sheet) return;\n    const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n    for (const item of items) {\n      sheet.deleteRule(item.index);\n    }\n  },\n\n  async loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError(\n        'ERR_WEB_ENVIRONMENT',\n        `The browser's \\`document.head\\` element doesn't support injecting fonts.`\n      );\n    }\n\n    const style = _createWebStyle(fontFamilyName, resource);\n    document.head!.appendChild(style);\n\n    if (!isFontLoadingListenerSupported()) {\n      return;\n    }\n\n    return new FontObserver(fontFamilyName, { display: resource.display }).load();\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = `@font-face {\n    font-family: ${fontFamily};\n    src: url(${resource.uri});\n    font-display: ${resource.display || FontDisplay.AUTO};\n  }`;\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported(): boolean {\n  const { userAgent } = window.navigator;\n  // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n  const isIOS = !!userAgent.match(/iPad|iPhone/i);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n  const isEdge = userAgent.includes('Edge');\n  // Internet Explorer\n  const isIE = userAgent.includes('Trident');\n  // Firefox\n  const isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n"]},"metadata":{},"sourceType":"module"}