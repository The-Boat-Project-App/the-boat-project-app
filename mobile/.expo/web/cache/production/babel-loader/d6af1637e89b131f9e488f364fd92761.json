{"ast":null,"code":"import{randomColor,getRandomString}from\"./../tools\";var baseStyle=function baseStyle(props){var name=props.name;var bg=name?randomColor({string:getRandomString(5)+name}):'gray.400';return{bg:bg,position:'relative',justifyContent:'center',alignItems:'center',borderRadius:'full',_text:{fontWeight:600,color:'text.50'},_image:{borderRadius:'full',alt:'--',_alt:{fontWeight:600},style:{height:'100%',width:'100%'}},borderColor:'gray.800',_dark:{borderColor:'white'}};};function getSize(size,fontSize,badgeSize){return{width:size,height:size,_text:{fontSize:fontSize},_badgeSize:badgeSize};}var sizes={'xs':getSize('6','2xs','2'),'sm':getSize('8','xs','3'),'md':getSize('12','md','4'),'lg':getSize('16','xl','5'),'xl':getSize('24','3xl','6'),'2xl':getSize('32','5xl','7')};var defaultProps={size:'md'};export default{baseStyle:baseStyle,sizes:sizes,defaultProps:defaultProps};","map":{"version":3,"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,kBAEA,GAAMC,UAAS,CAAIC,QAAbD,UAAaC,MAAD,CAAoD,CACpE,GAAQC,KAAR,CAAiBD,KAAjB,CAAQC,IAAR,CACA,GAAMC,GAAE,CAAGD,IAAI,CACXJ,WAAW,CAAC,CAAEM,MAAM,CAAEL,eAAe,CAAC,CAAD,CAAfA,CAAqBG,IAA/B,CAAD,CADA,CAEX,UAFJ,CAGA,MAAO,CACLC,EADK,CACLA,EADK,CAELE,QAAQ,CAAE,UAFL,CAGLC,cAAc,CAAE,QAHX,CAILC,UAAU,CAAE,QAJP,CAKLC,YAAY,CAAE,MALT,CAMLC,KAAK,CAAE,CACLC,UAAU,CAAE,GADP,CAELC,KAAK,CAAE,SAFF,CANF,CAULC,MAAM,CAAE,CACNJ,YAAY,CAAE,MADR,CAENK,GAAG,CAAE,IAFC,CAGNC,IAAI,CAAE,CACJJ,UAAU,CAAE,GADR,CAHA,CAMNK,KAAK,CAAE,CACLC,MAAM,CAAE,MADH,CAELC,KAAK,CAAE,MAFF,CAND,CAVH,CAqBLC,WAAW,CAAE,UArBR,CAsBLC,KAAK,CAAE,CACLD,WAAW,CAAE,OADR,CAtBF,CAAP,CALF,EAiCA,QAASE,QAAT,CAAiBC,IAAjB,CAA4BC,QAA5B,CAA8CC,SAA9C,CAA8D,CAC5D,MAAO,CACLN,KAAK,CAAEI,IADF,CAELL,MAAM,CAAEK,IAFH,CAGLZ,KAAK,CAAE,CACLa,QAAQ,CAAEA,QADL,CAHF,CAMLE,UAAU,CAAED,SANP,CAAP,CAQD,CAED,GAAME,MAAK,CAAG,CACZ,KAAML,OAAO,CAAC,GAAD,CAAM,KAAN,CAAa,GAAb,CADD,CAEZ,KAAMA,OAAO,CAAC,GAAD,CAAM,IAAN,CAAY,GAAZ,CAFD,CAGZ,KAAMA,OAAO,CAAC,IAAD,CAAO,IAAP,CAAa,GAAb,CAHD,CAIZ,KAAMA,OAAO,CAAC,IAAD,CAAO,IAAP,CAAa,GAAb,CAJD,CAKZ,KAAMA,OAAO,CAAC,IAAD,CAAO,KAAP,CAAc,GAAd,CALD,CAMZ,MAAOA,OAAO,CAAC,IAAD,CAAO,KAAP,CAAc,GAAd,CANF,CAAd,CASA,GAAMM,aAAY,CAAG,CACnBL,IAAI,CAAE,IADa,CAArB,CAIA,cAAe,CACbrB,SADa,CACbA,SADa,CAEbyB,KAFa,CAEbA,KAFa,CAGbC,yBAHa,CAAf","names":["randomColor","getRandomString","baseStyle","props","name","bg","string","position","justifyContent","alignItems","borderRadius","_text","fontWeight","color","_image","alt","_alt","style","height","width","borderColor","_dark","getSize","size","fontSize","badgeSize","_badgeSize","sizes","defaultProps"],"sources":["avatar.ts"],"sourcesContent":["import { randomColor, getRandomString } from './../tools';\nimport type { InterfaceAvatarProps } from '../../components/composites/Avatar/types';\nconst baseStyle = (props: InterfaceAvatarProps & { name: string }) => {\n  const { name } = props;\n  const bg = name\n    ? randomColor({ string: getRandomString(5) + name })\n    : 'gray.400';\n  return {\n    bg,\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 'full',\n    _text: {\n      fontWeight: 600,\n      color: 'text.50',\n    },\n    _image: {\n      borderRadius: 'full',\n      alt: '--',\n      _alt: {\n        fontWeight: 600,\n      },\n      style: {\n        height: '100%',\n        width: '100%',\n      },\n    },\n    borderColor: 'gray.800',\n    _dark: {\n      borderColor: 'white',\n    },\n  };\n};\n\nfunction getSize(size: any, fontSize: string, badgeSize: any) {\n  return {\n    width: size,\n    height: size,\n    _text: {\n      fontSize: fontSize,\n    },\n    _badgeSize: badgeSize,\n  };\n}\n\nconst sizes = {\n  'xs': getSize('6', '2xs', '2'),\n  'sm': getSize('8', 'xs', '3'),\n  'md': getSize('12', 'md', '4'),\n  'lg': getSize('16', 'xl', '5'),\n  'xl': getSize('24', '3xl', '6'),\n  '2xl': getSize('32', '5xl', '7'),\n};\n\nconst defaultProps = {\n  size: 'md',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}