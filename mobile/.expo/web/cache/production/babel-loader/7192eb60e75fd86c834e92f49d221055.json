{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"isOpen\",\"onClose\",\"defaultIsOpen\",\"initialFocusRef\",\"finalFocusRef\",\"avoidKeyboard\",\"closeOnOverlayClick\",\"isKeyboardDismissable\",\"overlayVisible\",\"backdropVisible\",\"animationPreset\"],_excluded2=[\"contentSize\",\"_backdrop\",\"_backdropFade\",\"_fade\",\"_slide\",\"_overlay\",\"useRNModal\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Backdrop from\"../Backdrop\";import{Slide}from\"../Transitions\";import{FocusScope}from'@react-native-aria/focus';import{useControllableState,usePropsResolution}from\"../../../hooks\";import{ModalContext}from\"./Context\";import Box from\"../../primitives/Box\";import{Fade}from\"../../composites/Transitions\";import{useKeyboardBottomInset}from\"../../../utils\";import{Overlay}from\"../../primitives/Overlay\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Modal=function Modal(_ref,ref){var children=_ref.children,isOpen=_ref.isOpen,onClose=_ref.onClose,defaultIsOpen=_ref.defaultIsOpen,initialFocusRef=_ref.initialFocusRef,finalFocusRef=_ref.finalFocusRef,avoidKeyboard=_ref.avoidKeyboard,_ref$closeOnOverlayCl=_ref.closeOnOverlayClick,closeOnOverlayClick=_ref$closeOnOverlayCl===void 0?true:_ref$closeOnOverlayCl,_ref$isKeyboardDismis=_ref.isKeyboardDismissable,isKeyboardDismissable=_ref$isKeyboardDismis===void 0?true:_ref$isKeyboardDismis,_ref$overlayVisible=_ref.overlayVisible,overlayVisible=_ref$overlayVisible===void 0?true:_ref$overlayVisible,_ref$backdropVisible=_ref.backdropVisible,backdropVisible=_ref$backdropVisible===void 0?true:_ref$backdropVisible,animationPreset=_ref.animationPreset,rest=_objectWithoutProperties(_ref,_excluded);var bottomInset=useKeyboardBottomInset();var _usePropsResolution=usePropsResolution('Modal',rest),contentSize=_usePropsResolution.contentSize,_backdrop=_usePropsResolution._backdrop,_backdropFade=_usePropsResolution._backdropFade,_fade=_usePropsResolution._fade,_slide=_usePropsResolution._slide,_overlay=_usePropsResolution._overlay,useRNModal=_usePropsResolution.useRNModal,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var _useControllableState=useControllableState({value:isOpen,defaultValue:defaultIsOpen,onChange:function onChange(val){if(!val)onClose&&onClose();}}),_useControllableState2=_slicedToArray(_useControllableState,2),visible=_useControllableState2[0],setVisible=_useControllableState2[1];var handleClose=React.useCallback(function(){return setVisible(false);},[setVisible]);var child=React.createElement(Box,_extends({bottom:avoidKeyboard?bottomInset+'px':undefined},resolvedProps,{ref:ref,pointerEvents:\"box-none\"}),children);var contextValue=React.useMemo(function(){return{handleClose:handleClose,contentSize:contentSize,initialFocusRef:initialFocusRef,finalFocusRef:finalFocusRef,visible:visible};},[handleClose,contentSize,initialFocusRef,finalFocusRef,visible]);if(useHasResponsiveProps(rest)){return null;}return React.createElement(Overlay,_extends({isOpen:visible,onRequestClose:handleClose,isKeyboardDismissable:isKeyboardDismissable,animationPreset:animationPreset,useRNModalOnAndroid:true,useRNModal:useRNModal},_overlay),React.createElement(ModalContext.Provider,{value:contextValue},React.createElement(Fade,_extends({in:visible,style:StyleSheet.absoluteFill},_backdropFade),overlayVisible&&backdropVisible&&React.createElement(Backdrop,_extends({onPress:function onPress(){closeOnOverlayClick&&handleClose();}},_backdrop))),animationPreset==='slide'?React.createElement(Slide,_extends({in:visible},_slide),React.createElement(FocusScope,{contain:visible,autoFocus:visible&&!initialFocusRef,restoreFocus:visible&&!finalFocusRef},child)):React.createElement(Fade,_extends({in:visible,style:StyleSheet.absoluteFill},_fade),React.createElement(FocusScope,{contain:visible,autoFocus:visible&&!initialFocusRef,restoreFocus:visible&&!finalFocusRef},child))));};export default memo(forwardRef(Modal));","map":{"version":3,"mappings":"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","names":["React","forwardRef","memo","Backdrop","Slide","FocusScope","useControllableState","usePropsResolution","ModalContext","Box","Fade","useKeyboardBottomInset","Overlay","useHasResponsiveProps","Modal","ref","children","isOpen","onClose","defaultIsOpen","initialFocusRef","finalFocusRef","avoidKeyboard","closeOnOverlayClick","isKeyboardDismissable","overlayVisible","backdropVisible","animationPreset","rest","bottomInset","contentSize","_backdrop","_backdropFade","_fade","_slide","_overlay","useRNModal","resolvedProps","value","defaultValue","onChange","val","visible","setVisible","handleClose","useCallback","child","bottom","undefined","pointerEvents","contextValue","useMemo","onRequestClose","useRNModalOnAndroid","Provider","in","style","StyleSheet","absoluteFill","onPress","contain","autoFocus","restoreFocus"],"sources":["Modal.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Backdrop from '../Backdrop';\nimport { Slide } from '../Transitions';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { useControllableState, usePropsResolution } from '../../../hooks';\nimport { ModalContext } from './Context';\nimport Box from '../../primitives/Box';\nimport type { IModalProps } from './types';\nimport { Fade } from '../../composites/Transitions';\nimport { useKeyboardBottomInset } from '../../../utils';\nimport { Overlay } from '../../primitives/Overlay';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Modal = (\n  {\n    children,\n    isOpen,\n    onClose,\n    defaultIsOpen,\n    initialFocusRef,\n    finalFocusRef,\n    avoidKeyboard,\n    closeOnOverlayClick = true,\n    isKeyboardDismissable = true,\n    overlayVisible = true,\n    backdropVisible = true,\n    animationPreset,\n    ...rest\n  }: IModalProps,\n  ref: any\n) => {\n  const bottomInset = useKeyboardBottomInset();\n  const {\n    contentSize,\n    _backdrop,\n    _backdropFade,\n    _fade,\n    _slide,\n    _overlay,\n    useRNModal,\n    ...resolvedProps\n  } = usePropsResolution('Modal', rest);\n\n  const [visible, setVisible] = useControllableState({\n    value: isOpen,\n    defaultValue: defaultIsOpen,\n    onChange: (val) => {\n      if (!val) onClose && onClose();\n    },\n  });\n\n  const handleClose = React.useCallback(() => setVisible(false), [setVisible]);\n\n  const child = (\n    <Box\n      bottom={avoidKeyboard ? bottomInset + 'px' : undefined}\n      {...resolvedProps}\n      ref={ref}\n      pointerEvents=\"box-none\"\n    >\n      {children}\n    </Box>\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      handleClose,\n      contentSize,\n      initialFocusRef,\n      finalFocusRef,\n      visible,\n    };\n  }, [handleClose, contentSize, initialFocusRef, finalFocusRef, visible]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n  // console.log('visible here', visible);\n  return (\n    <Overlay\n      isOpen={visible}\n      onRequestClose={handleClose}\n      isKeyboardDismissable={isKeyboardDismissable}\n      animationPreset={animationPreset}\n      useRNModalOnAndroid\n      useRNModal={useRNModal}\n      {..._overlay}\n    >\n      <ModalContext.Provider value={contextValue}>\n        <Fade in={visible} style={StyleSheet.absoluteFill} {..._backdropFade}>\n          {overlayVisible && backdropVisible && (\n            <Backdrop\n              onPress={() => {\n                closeOnOverlayClick && handleClose();\n              }}\n              {..._backdrop}\n            />\n          )}\n        </Fade>\n        {animationPreset === 'slide' ? (\n          <Slide in={visible} {..._slide}>\n            <FocusScope\n              contain={visible}\n              autoFocus={visible && !initialFocusRef}\n              restoreFocus={visible && !finalFocusRef}\n            >\n              {child}\n            </FocusScope>\n          </Slide>\n        ) : (\n          <Fade in={visible} style={StyleSheet.absoluteFill} {..._fade}>\n            <FocusScope\n              contain={visible}\n              autoFocus={visible && !initialFocusRef}\n              restoreFocus={visible && !finalFocusRef}\n            >\n              {child}\n            </FocusScope>\n          </Fade>\n        )}\n      </ModalContext.Provider>\n    </Overlay>\n  );\n};\n\nexport default memo(forwardRef(Modal));\n"]},"metadata":{},"sourceType":"module"}