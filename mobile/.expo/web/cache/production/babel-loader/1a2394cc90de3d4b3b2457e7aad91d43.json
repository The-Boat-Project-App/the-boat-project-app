{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef}from'react';import RNView from\"react-native-web/dist/exports/View\";import{usePropsResolution}from\"../../../hooks\";import{makeStyledComponent}from\"../../../utils/styled\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var StyledView=makeStyledComponent(RNView);export var View=forwardRef(function(props,ref){var _usePropsResolution=usePropsResolution('View',props),resolvedProps=Object.assign({},_usePropsResolution);if(useHasResponsiveProps(props)){return null;}return React.createElement(StyledView,_extends({},resolvedProps,{ref:ref}));});","map":{"version":3,"mappings":"uRAAA,MAAOA,MAAP,EAAgBC,UAAhB,KAAkC,OAAlC,C,uDAEA,OAASC,kBAAT,sBACA,OAASC,mBAAT,6BAEA,OAASC,qBAAT,4CAEA,GAAMC,WAAe,CAAGF,mBAAmB,CAACG,MAAD,CAA3C,CAEA,MAAO,IAAMC,KAAI,CAAGN,UAAU,CAAC,SAACO,KAAD,CAAoBC,GAApB,CAAiC,CAC9D,wBAA6BP,kBAAkB,CAAC,MAAD,CAASM,KAAT,CAA/C,CAAWE,aAAX,uCAEA,GAAIN,qBAAqB,CAACI,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAOR,qBAACK,UAAD,aAAgBK,aAAhB,EAA+BD,GAAG,CAAEA,GAApC,GAAP,CAN4B,EAAvB","names":["React","forwardRef","usePropsResolution","makeStyledComponent","useHasResponsiveProps","StyledView","RNView","View","props","ref","resolvedProps"],"sources":["View.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { View as RNView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledView: any = makeStyledComponent(RNView);\n\nexport const View = forwardRef((props: IViewProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('View', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StyledView {...resolvedProps} ref={ref} />;\n});\n"]},"metadata":{},"sourceType":"module"}