{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef,useEffect,useContext}from'react';import{usePropsResolution}from\"../../../hooks\";import{default as Box}from\"../../primitives/Box\";import{PopoverContext}from\"./PopoverContext\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var PopoverHeader=function PopoverHeader(props,ref){var resolvedProps=usePropsResolution('PopoverHeader',props);var _useContext=useContext(PopoverContext),setHeaderMounted=_useContext.setHeaderMounted,headerId=_useContext.headerId;useEffect(function(){setHeaderMounted(true);return function(){setHeaderMounted(false);};},[setHeaderMounted]);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({nativeID:headerId},resolvedProps,{ref:ref}));};export default memo(forwardRef(PopoverHeader));","map":{"version":3,"mappings":"uRAAA,MAAOA,MAAP,EAAgBC,IAAhB,CAAsBC,UAAtB,CAAkCC,SAAlC,CAA6CC,UAA7C,KAA+D,OAA/D,CACA,OAASC,kBAAT,sBACA,OAASC,OAAO,GAAIC,IAApB,4BACA,OAASC,cAAT,wBACA,OAASC,qBAAT,4CAEA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,CAACC,KAAD,CAAmBC,GAAnB,CAAiC,CACrD,GAAMC,cAAa,CAAGR,kBAAkB,CAAC,eAAD,CAAkBM,KAAlB,CAAxC,CACA,gBAAuCP,UAAU,CAACI,cAAD,CAAjD,CAAQM,gBAAR,aAAQA,gBAAR,CAA0BC,QAA1B,aAA0BA,QAA1B,CAEAZ,SAAS,CAAC,UAAM,CACdW,gBAAgB,CAAC,IAAD,CAAhBA,CACA,MAAO,WAAM,CACXA,gBAAgB,CAAC,KAAD,CAAhBA,CADF,EAFO,EAKN,CAACA,gBAAD,CALM,CAATX,CAOA,GAAIM,qBAAqB,CAACE,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAOX,qBAACO,GAAD,WAAKS,QAAQ,CAAED,QAAf,EAA6BF,aAA7B,EAA4CD,GAAG,CAAEA,GAAjD,GAAP,CAdF,EAiBA,cAAeX,KAAI,CAACC,UAAU,CAACQ,aAAD,CAAX,CAAnB","names":["React","memo","forwardRef","useEffect","useContext","usePropsResolution","default","Box","PopoverContext","useHasResponsiveProps","PopoverHeader","props","ref","resolvedProps","setHeaderMounted","headerId","nativeID"],"sources":["PopoverHeader.tsx"],"sourcesContent":["import React, { memo, forwardRef, useEffect, useContext } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const { setHeaderMounted, headerId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={headerId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverHeader));\n"]},"metadata":{},"sourceType":"module"}