{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"index\",\"defaultIndex\",\"allowMultiple\",\"allowToggle\",\"onChange\"],_excluded2=[\"endingHeight\",\"startingHeight\",\"duration\",\"isOpen\",\"onAnimationEnd\",\"onAnimationStart\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Box from\"../../primitives/Box\";import{useThemeProps}from\"../../../hooks\";import getIndexedChildren from\"../../../utils/getIndexedChildren\";import{AccordionContext}from\"./Context\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Accordion=function Accordion(_ref,ref){var children=_ref.children,pIndex=_ref.index,defaultIndex=_ref.defaultIndex,allowMultiple=_ref.allowMultiple,allowToggle=_ref.allowToggle,onChange=_ref.onChange,props=_objectWithoutProperties(_ref,_excluded);var _useThemeProps=useThemeProps('Accordion',props),endingHeight=_useThemeProps.endingHeight,startingHeight=_useThemeProps.startingHeight,duration=_useThemeProps.duration,isOpen=_useThemeProps.isOpen,onAnimationEnd=_useThemeProps.onAnimationEnd,onAnimationStart=_useThemeProps.onAnimationStart,newProps=_objectWithoutProperties(_useThemeProps,_excluded2);var _React$useState=React.useState(pIndex||defaultIndex||[]),_React$useState2=_slicedToArray(_React$useState,2),index=_React$useState2[0],setIndex=_React$useState2[1];if(useHasResponsiveProps(props)){return null;}var changeHandler=function changeHandler(isOpening,activeIndex){var indexCopy=index.map(function(i){return i;});if(allowToggle){if(isOpening){indexCopy.push(activeIndex);allowMultiple?setIndex(indexCopy):setIndex([activeIndex]);}else{setIndex(index.splice(index.indexOf(activeIndex),1));}}else{if(isOpening){indexCopy.push(activeIndex);allowMultiple?setIndex(indexCopy):setIndex([activeIndex]);}else{indexCopy=indexCopy.filter(function(n){return n!==activeIndex;});setIndex(indexCopy);}}onChange&&onChange(indexCopy);};return React.createElement(AccordionContext.Provider,{value:{index:index,changeHandler:changeHandler,AnimationProps:{endingHeight:endingHeight,startingHeight:startingHeight,duration:duration,isOpen:isOpen,onAnimationEnd:onAnimationEnd,onAnimationStart:onAnimationStart}}},React.createElement(Box,_extends({overflow:\"hidden\"},newProps,{ref:ref}),getIndexedChildren(children)));};export default React.memo(React.forwardRef(Accordion));","map":{"version":3,"mappings":"6mBAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,IAAP,4BAEA,OAASC,aAAT,sBACA,MAAOC,mBAAP,yCACA,OAASC,gBAAT,iBACA,OAASC,qBAAT,4CAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,MAUhBC,GAVgB,CAWb,IATDC,SASC,MATDA,QASC,CARMC,MAQN,MARDC,KAQC,CAPDC,YAOC,MAPDA,YAOC,CANDC,aAMC,MANDA,aAMC,CALDC,WAKC,MALDA,WAKC,CAJDC,QAIC,MAJDA,QAIC,CAHEC,KAGF,0CACH,mBAQIb,aAAa,CAAC,WAAD,CAAca,KAAd,CARjB,CACEC,YADF,gBACEA,YADF,CAEEC,cAFF,gBAEEA,cAFF,CAGEC,QAHF,gBAGEA,QAHF,CAIEC,MAJF,gBAIEA,MAJF,CAKEC,cALF,gBAKEA,cALF,CAMEC,gBANF,gBAMEA,gBANF,CAOKC,QAPL,qDAUA,oBAA0BtB,KAAK,CAACuB,QAANvB,CAAeS,MAAM,EAAIE,YAAVF,EAA0B,EAAzCT,CAA1B,oDAAOU,KAAP,qBAAcc,QAAd,qBAEA,GAAInB,qBAAqB,CAACU,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,GAAMU,cAAa,CAAG,QAAhBA,cAAgB,CAACC,SAAD,CAAqBC,WAArB,CAA6C,CACjE,GAAIC,UAAS,CAAGlB,KAAK,CAACmB,GAANnB,CAAWoB,UAAD,QAAeA,EAAf,EAAVpB,CAAhB,CACA,GAAIG,WAAJ,CAAiB,CACf,GAAIa,SAAJ,CAAe,CACbE,SAAS,CAACG,IAAVH,CAAeD,WAAfC,EACAhB,aAAa,CAAGY,QAAQ,CAACI,SAAD,CAAX,CAAyBJ,QAAQ,CAAC,CAACG,WAAD,CAAD,CAA9Cf,CAFF,KAGO,CACLY,QAAQ,CAACd,KAAK,CAACsB,MAANtB,CAAaA,KAAK,CAACuB,OAANvB,CAAciB,WAAdjB,CAAbA,CAAyC,CAAzCA,CAAD,CAARc,CACD,CANH,KAOO,CACL,GAAIE,SAAJ,CAAe,CACbE,SAAS,CAACG,IAAVH,CAAeD,WAAfC,EACAhB,aAAa,CAAGY,QAAQ,CAACI,SAAD,CAAX,CAAyBJ,QAAQ,CAAC,CAACG,WAAD,CAAD,CAA9Cf,CAFF,KAGO,CACLgB,SAAS,CAAGA,SAAS,CAACM,MAAVN,CAAkBO,UAAD,QAAYA,EAAC,GAAKR,WAAlB,EAAjBC,CAAZA,CACAJ,QAAQ,CAACI,SAAD,CAARJ,CACD,CACF,CACDV,QAAQ,EAAIA,QAAQ,CAACc,SAAD,CAApBd,CAlBF,EAoBA,MACEd,qBAACI,gBAAD,CAAkBgC,QAAlB,EACEC,KAAK,CAAE,CACL3B,KAAK,CAAEA,KADF,CAELe,aAFK,CAELA,aAFK,CAGLa,cAAc,CAAE,CACdtB,YADc,CACdA,YADc,CAEdC,cAFc,CAEdA,cAFc,CAGdC,QAHc,CAGdA,QAHc,CAIdC,MAJc,CAIdA,MAJc,CAKdC,cALc,CAKdA,cALc,CAMdC,iCANc,CAHX,CADT,EAcErB,oBAACC,GAAD,WAAKsC,QAAQ,CAAC,QAAd,EAA2BjB,QAA3B,EAAqCf,GAAG,CAAEA,GAA1C,GACGJ,kBAAkB,CAACK,QAAD,CADrB,CAdF,CADF,CA/CF,EAqEA,cAAeR,MAAK,CAACwC,IAANxC,CAAWA,KAAK,CAACyC,UAANzC,CAAiBM,SAAjBN,CAAXA,CAAf","names":["React","Box","useThemeProps","getIndexedChildren","AccordionContext","useHasResponsiveProps","Accordion","ref","children","pIndex","index","defaultIndex","allowMultiple","allowToggle","onChange","props","endingHeight","startingHeight","duration","isOpen","onAnimationEnd","onAnimationStart","newProps","useState","setIndex","changeHandler","isOpening","activeIndex","indexCopy","map","i","push","splice","indexOf","filter","n","Provider","value","AnimationProps","overflow","memo","forwardRef"],"sources":["Accordion.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { IAccordionProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport getIndexedChildren from '../../../utils/getIndexedChildren';\nimport { AccordionContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Accordion = (\n  {\n    children,\n    index: pIndex,\n    defaultIndex,\n    allowMultiple,\n    allowToggle,\n    onChange,\n    ...props\n  }: IAccordionProps,\n  ref: any\n) => {\n  const {\n    endingHeight,\n    startingHeight,\n    duration,\n    isOpen,\n    onAnimationEnd,\n    onAnimationStart,\n    ...newProps\n  } = useThemeProps('Accordion', props);\n\n  const [index, setIndex] = React.useState(pIndex || defaultIndex || []);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  const changeHandler = (isOpening: boolean, activeIndex: number) => {\n    let indexCopy = index.map((i: number) => i);\n    if (allowToggle) {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        setIndex(index.splice(index.indexOf(activeIndex), 1));\n      }\n    } else {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        indexCopy = indexCopy.filter((n: any) => n !== activeIndex);\n        setIndex(indexCopy);\n      }\n    }\n    onChange && onChange(indexCopy);\n  };\n  return (\n    <AccordionContext.Provider\n      value={{\n        index: index,\n        changeHandler,\n        AnimationProps: {\n          endingHeight,\n          startingHeight,\n          duration,\n          isOpen,\n          onAnimationEnd,\n          onAnimationStart,\n        },\n      }}\n    >\n      <Box overflow=\"hidden\" {...newProps} ref={ref}>\n        {getIndexedChildren(children)}\n      </Box>\n    </AccordionContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(Accordion));\n"]},"metadata":{},"sourceType":"module"}