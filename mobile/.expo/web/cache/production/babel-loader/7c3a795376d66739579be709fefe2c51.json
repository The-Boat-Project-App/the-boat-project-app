{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import PropTypes from'prop-types';import React from'react';import{ColorPropType,ViewPropTypes}from'deprecated-react-native-prop-types';import decorateMapComponent,{USES_DEFAULT_IMPLEMENTATION,SUPPORTED}from\"./decorateMapComponent\";import*as ProviderConstants from\"./ProviderConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";var propTypes=_objectSpread(_objectSpread({},ViewPropTypes),{},{coordinates:PropTypes.arrayOf(PropTypes.shape({latitude:PropTypes.number.isRequired,longitude:PropTypes.number.isRequired})),holes:PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({latitude:PropTypes.number.isRequired,longitude:PropTypes.number.isRequired}))),onPress:PropTypes.func,tappable:PropTypes.bool,strokeWidth:PropTypes.number,strokeColor:ColorPropType,fillColor:ColorPropType,zIndex:PropTypes.number,lineCap:PropTypes.oneOf(['butt','round','square']),lineJoin:PropTypes.oneOf(['miter','round','bevel']),miterLimit:PropTypes.number,geodesic:PropTypes.bool,lineDashPhase:PropTypes.number,lineDashPattern:PropTypes.arrayOf(PropTypes.number)});var defaultProps={strokeColor:'#000',strokeWidth:1};var MapPolygon=function(_React$Component){_inherits(MapPolygon,_React$Component);var _super=_createSuper(MapPolygon);function MapPolygon(){_classCallCheck(this,MapPolygon);return _super.apply(this,arguments);}_createClass(MapPolygon,[{key:\"setNativeProps\",value:function setNativeProps(props){this.polygon.setNativeProps(props);}},{key:\"updateNativeProps\",value:function updateNativeProps(){var _this=this;return function(){var _this$props=_this.props,fillColor=_this$props.fillColor,strokeColor=_this$props.strokeColor,strokeWidth=_this$props.strokeWidth;var polygonNativeProps={};if(fillColor){polygonNativeProps.fillColor=fillColor;}if(strokeColor){polygonNativeProps.strokeColor=strokeColor;}if(strokeWidth){polygonNativeProps.strokeWidth=strokeWidth;}if(polygonNativeProps){_this.setNativeProps(polygonNativeProps);}};}},{key:\"render\",value:function render(){var _this2=this;var AIRMapPolygon=this.getAirComponent();return _jsx(AIRMapPolygon,_objectSpread(_objectSpread({},this.props),{},{ref:function ref(_ref){_this2.polygon=_ref;},onLayout:this.context.provider===ProviderConstants.PROVIDER_GOOGLE?this.updateNativeProps():undefined}));}}]);return MapPolygon;}(React.Component);MapPolygon.propTypes=propTypes;MapPolygon.defaultProps=defaultProps;export default decorateMapComponent(MapPolygon,{componentType:'Polygon',providers:{google:{ios:SUPPORTED,android:USES_DEFAULT_IMPLEMENTATION}}});","map":{"version":3,"names":["PropTypes","React","ColorPropType","ViewPropTypes","decorateMapComponent","USES_DEFAULT_IMPLEMENTATION","SUPPORTED","ProviderConstants","propTypes","coordinates","arrayOf","shape","latitude","number","isRequired","longitude","holes","onPress","func","tappable","bool","strokeWidth","strokeColor","fillColor","zIndex","lineCap","oneOf","lineJoin","miterLimit","geodesic","lineDashPhase","lineDashPattern","defaultProps","MapPolygon","props","polygon","setNativeProps","polygonNativeProps","AIRMapPolygon","getAirComponent","ref","context","provider","PROVIDER_GOOGLE","updateNativeProps","undefined","Component","componentType","providers","google","ios","android"],"sources":["/Users/matthieu/Documents/boatproject/node_modules/react-native-maps/src/MapPolygon.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ColorPropType,\n  ViewPropTypes,\n} from 'deprecated-react-native-prop-types';\nimport decorateMapComponent, {\n  USES_DEFAULT_IMPLEMENTATION,\n  SUPPORTED,\n} from './decorateMapComponent';\nimport * as ProviderConstants from './ProviderConstants';\n\nconst propTypes = {\n  ...ViewPropTypes,\n\n  /**\n   * An array of coordinates to describe the polygon\n   */\n  coordinates: PropTypes.arrayOf(\n    PropTypes.shape({\n      /**\n       * Latitude/Longitude coordinates\n       */\n      latitude: PropTypes.number.isRequired,\n      longitude: PropTypes.number.isRequired,\n    })\n  ),\n\n  /**\n   * An array of array of coordinates to describe the polygon holes\n   */\n  holes: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        /**\n         * Latitude/Longitude coordinates\n         */\n        latitude: PropTypes.number.isRequired,\n        longitude: PropTypes.number.isRequired,\n      })\n    )\n  ),\n\n  /**\n   * Callback that is called when the user presses on the polygon\n   */\n  onPress: PropTypes.func,\n\n  /**\n   * Boolean to allow a polygon to be tappable and use the\n   * onPress function\n   */\n  tappable: PropTypes.bool,\n\n  /**\n   * The stroke width to use for the path.\n   */\n  strokeWidth: PropTypes.number,\n\n  /**\n   * The stroke color to use for the path.\n   */\n  strokeColor: ColorPropType,\n\n  /**\n   * The fill color to use for the path.\n   */\n  fillColor: ColorPropType,\n\n  /**\n   * The order in which this tile overlay is drawn with respect to other overlays. An overlay\n   * with a larger z-index is drawn over overlays with smaller z-indices. The order of overlays\n   * with the same z-index is arbitrary. The default zIndex is 0.\n   *\n   * @platform android\n   */\n  zIndex: PropTypes.number,\n\n  /**\n   * The line cap style to apply to the open ends of the path.\n   * The default style is `round`.\n   *\n   * @platform ios\n   */\n  lineCap: PropTypes.oneOf(['butt', 'round', 'square']),\n\n  /**\n   * The line join style to apply to corners of the path.\n   * The default style is `round`.\n   *\n   * @platform ios\n   */\n  lineJoin: PropTypes.oneOf(['miter', 'round', 'bevel']),\n\n  /**\n   * The limiting value that helps avoid spikes at junctions between connected line segments.\n   * The miter limit helps you avoid spikes in paths that use the `miter` `lineJoin` style. If\n   * the ratio of the miter length—that is, the diagonal length of the miter join—to the line\n   * thickness exceeds the miter limit, the joint is converted to a bevel join. The default\n   * miter limit is 10, which results in the conversion of miters whose angle at the joint\n   * is less than 11 degrees.\n   *\n   * @platform ios\n   */\n  miterLimit: PropTypes.number,\n\n  /**\n   * Boolean to indicate whether to draw each segment of the line as a geodesic as opposed to\n   * straight lines on the Mercator projection. A geodesic is the shortest path between two\n   * points on the Earth's surface. The geodesic curve is constructed assuming the Earth is\n   * a sphere.\n   *\n   */\n  geodesic: PropTypes.bool,\n\n  /**\n   * The offset (in points) at which to start drawing the dash pattern.\n   *\n   * Use this property to start drawing a dashed line partway through a segment or gap. For\n   * example, a phase value of 6 for the patter 5-2-3-2 would cause drawing to begin in the\n   * middle of the first gap.\n   *\n   * The default value of this property is 0.\n   *\n   * @platform ios\n   */\n  lineDashPhase: PropTypes.number,\n\n  /**\n   * An array of numbers specifying the dash pattern to use for the path.\n   *\n   * The array contains one or more numbers that indicate the lengths (measured in points) of the\n   * line segments and gaps in the pattern. The values in the array alternate, starting with the\n   * first line segment length, followed by the first gap length, followed by the second line\n   * segment length, and so on.\n   *\n   * This property is set to `null` by default, which indicates no line dash pattern.\n   *\n   * @platform ios\n   */\n  lineDashPattern: PropTypes.arrayOf(PropTypes.number),\n};\n\nconst defaultProps = {\n  strokeColor: '#000',\n  strokeWidth: 1,\n};\n\nclass MapPolygon extends React.Component {\n  setNativeProps(props) {\n    this.polygon.setNativeProps(props);\n  }\n\n  updateNativeProps() {\n    return () => {\n      const { fillColor, strokeColor, strokeWidth } = this.props;\n      let polygonNativeProps = {};\n      if (fillColor) {\n        polygonNativeProps.fillColor = fillColor;\n      }\n      if (strokeColor) {\n        polygonNativeProps.strokeColor = strokeColor;\n      }\n      if (strokeWidth) {\n        polygonNativeProps.strokeWidth = strokeWidth;\n      }\n      if (polygonNativeProps) {\n        this.setNativeProps(polygonNativeProps);\n      }\n    };\n  }\n\n  render() {\n    const AIRMapPolygon = this.getAirComponent();\n    return (\n      <AIRMapPolygon\n        {...this.props}\n        ref={(ref) => {\n          this.polygon = ref;\n        }}\n        onLayout={\n          this.context.provider === ProviderConstants.PROVIDER_GOOGLE\n            ? this.updateNativeProps()\n            : undefined\n        }\n      />\n    );\n  }\n}\n\nMapPolygon.propTypes = propTypes;\nMapPolygon.defaultProps = defaultProps;\n\nexport default decorateMapComponent(MapPolygon, {\n  componentType: 'Polygon',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}