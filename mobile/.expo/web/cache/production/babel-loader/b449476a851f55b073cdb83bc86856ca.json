{"ast":null,"code":"import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Badge from\"./Badge\";export default function TabBarIcon(_ref){var _=_ref.route,horizontal=_ref.horizontal,badge=_ref.badge,badgeStyle=_ref.badgeStyle,activeOpacity=_ref.activeOpacity,inactiveOpacity=_ref.inactiveOpacity,activeTintColor=_ref.activeTintColor,inactiveTintColor=_ref.inactiveTintColor,renderIcon=_ref.renderIcon,style=_ref.style;var size=25;return React.createElement(View,{style:[horizontal?styles.iconHorizontal:styles.iconVertical,style]},React.createElement(View,{style:[styles.icon,{opacity:activeOpacity}]},renderIcon({focused:true,size:size,color:activeTintColor})),React.createElement(View,{style:[styles.icon,{opacity:inactiveOpacity}]},renderIcon({focused:false,size:size,color:inactiveTintColor})),React.createElement(Badge,{visible:badge!=null,style:[styles.badge,horizontal?styles.badgeHorizontal:styles.badgeVertical,badgeStyle],size:size*3/4},badge));}var styles=StyleSheet.create({icon:{position:'absolute',alignSelf:'center',alignItems:'center',justifyContent:'center',height:'100%',width:'100%',minWidth:25},iconVertical:{flex:1},iconHorizontal:{height:'100%',marginTop:3},badge:{position:'absolute',left:3},badgeVertical:{top:3},badgeHorizontal:{top:7}});","map":{"version":3,"mappings":"AACA,MAAOA,MAAP,KAAkB,OAAlB,C,sHASA,MAAOC,MAAP,eAmBA,cAAe,SAASC,WAAT,MAWL,IAVDC,EAUC,MAVRC,KAUQ,CATRC,UASQ,MATRA,UASQ,CARRC,KAQQ,MARRA,KAQQ,CAPRC,UAOQ,MAPRA,UAOQ,CANRC,aAMQ,MANRA,aAMQ,CALRC,eAKQ,MALRA,eAKQ,CAJRC,eAIQ,MAJRA,eAIQ,CAHRC,iBAGQ,MAHRA,iBAGQ,CAFRC,UAEQ,MAFRA,UAEQ,CADRC,KACQ,MADRA,KACQ,CACR,GAAMC,KAAI,CAAG,EAAb,CAIA,MACEd,qBAACe,IAAD,EACEF,KAAK,CAAE,CAACR,UAAU,CAAGW,MAAM,CAACC,cAAV,CAA2BD,MAAM,CAACE,YAA7C,CAA2DL,KAA3D,CADT,EAGEb,oBAACe,IAAD,EAAMF,KAAK,CAAE,CAACG,MAAM,CAACG,IAAR,CAAc,CAAEC,OAAO,CAAEZ,aAAX,CAAd,CAAb,EACGI,UAAU,CAAC,CACVS,OAAO,CAAE,IADC,CAEVP,IAFU,CAEVA,IAFU,CAGVQ,KAAK,CAAEZ,eAHG,CAAD,CADb,CAHF,CAUEV,oBAACe,IAAD,EAAMF,KAAK,CAAE,CAACG,MAAM,CAACG,IAAR,CAAc,CAAEC,OAAO,CAAEX,eAAX,CAAd,CAAb,EACGG,UAAU,CAAC,CACVS,OAAO,CAAE,KADC,CAEVP,IAFU,CAEVA,IAFU,CAGVQ,KAAK,CAAEX,iBAHG,CAAD,CADb,CAVF,CAiBEX,oBAACC,KAAD,EACEsB,OAAO,CAAEjB,KAAK,EAAI,IADpB,CAEEO,KAAK,CAAE,CACLG,MAAM,CAACV,KADF,CAELD,UAAU,CAAGW,MAAM,CAACQ,eAAV,CAA4BR,MAAM,CAACS,aAFxC,CAGLlB,UAHK,CAFT,CAOEO,IAAI,CAAGA,IAAI,CAAG,CAAPA,CAAY,CAPrB,EASGR,KATH,CAjBF,CADF,CA+BD,CAED,GAAMU,OAAM,CAAGU,UAAU,CAACC,MAAXD,CAAkB,CAC/BP,IAAI,CAAE,CAIJS,QAAQ,CAAE,UAJN,CAKJC,SAAS,CAAE,QALP,CAMJC,UAAU,CAAE,QANR,CAOJC,cAAc,CAAE,QAPZ,CAQJC,MAAM,CAAE,MARJ,CASJC,KAAK,CAAE,MATH,CAWJC,QAAQ,CAAE,EAXN,CADyB,CAc/BhB,YAAY,CAAE,CACZiB,IAAI,CAAE,CADM,CAdiB,CAiB/BlB,cAAc,CAAE,CACde,MAAM,CAAE,MADM,CAEdI,SAAS,CAAE,CAFG,CAjBe,CAqB/B9B,KAAK,CAAE,CACLsB,QAAQ,CAAE,UADL,CAELS,IAAI,CAAE,CAFD,CArBwB,CAyB/BZ,aAAa,CAAE,CACba,GAAG,CAAE,CADQ,CAzBgB,CA4B/Bd,eAAe,CAAE,CACfc,GAAG,CAAE,CADU,CA5Bc,CAAlBZ,CAAf","names":["React","Badge","TabBarIcon","_","route","horizontal","badge","badgeStyle","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","style","size","View","styles","iconHorizontal","iconVertical","icon","opacity","focused","color","visible","badgeHorizontal","badgeVertical","StyleSheet","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth","flex","marginTop","left","top"],"sources":["TabBarIcon.tsx"],"sourcesContent":["import type { Route } from '@react-navigation/native';\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport Badge from './Badge';\n\ntype Props = {\n  route: Route<string>;\n  horizontal: boolean;\n  badge?: string | number;\n  badgeStyle?: StyleProp<TextStyle>;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor: string;\n  inactiveTintColor: string;\n  renderIcon: (props: {\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  route: _,\n  horizontal,\n  badge,\n  badgeStyle,\n  activeOpacity,\n  inactiveOpacity,\n  activeTintColor,\n  inactiveTintColor,\n  renderIcon,\n  style,\n}: Props) {\n  const size = 25;\n\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View\n      style={[horizontal ? styles.iconHorizontal : styles.iconVertical, style]}\n    >\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\n        {renderIcon({\n          focused: true,\n          size,\n          color: activeTintColor,\n        })}\n      </View>\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\n        {renderIcon({\n          focused: false,\n          size,\n          color: inactiveTintColor,\n        })}\n      </View>\n      <Badge\n        visible={badge != null}\n        style={[\n          styles.badge,\n          horizontal ? styles.badgeHorizontal : styles.badgeVertical,\n          badgeStyle,\n        ]}\n        size={(size * 3) / 4}\n      >\n        {badge}\n      </Badge>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3,\n  },\n  badge: {\n    position: 'absolute',\n    left: 3,\n  },\n  badgeVertical: {\n    top: 3,\n  },\n  badgeHorizontal: {\n    top: 7,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}