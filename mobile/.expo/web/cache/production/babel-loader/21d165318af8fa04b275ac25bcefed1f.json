{"ast":null,"code":"\"use strict\";var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _excluded=[\"TDefaultRenderer\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useInternalRenderer;var _IMGElement=_interopRequireDefault(require(\"../elements/IMGElement\"));var _OLElement=_interopRequireDefault(require(\"../elements/OLElement\"));var _ULElement=_interopRequireDefault(require(\"../elements/ULElement\"));var _ARenderer=require(\"../renderers/ARenderer\");var _IMGRenderer=require(\"../renderers/IMGRenderer\");var _OLRenderer=require(\"../renderers/OLRenderer\");var _ULRenderer=require(\"../renderers/ULRenderer\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var specialRenderersConfig={img:{hook:_IMGRenderer.useIMGElementProps,Element:_IMGElement.default},ol:{hook:_OLRenderer.useOLElementProps,Element:_OLElement.default},ul:{hook:_ULRenderer.useULElementProps,Element:_ULElement.default},a:{hook:_ARenderer.useAElementProps,Element:undefined}};function hasSpecialInternalRenderer(tagName){return tagName in specialRenderersConfig;}function useInternalRenderer(tagName,props){var TDefaultRenderer=props.TDefaultRenderer,rendererProps=_objectWithoutProperties(props,_excluded);if(hasSpecialInternalRenderer(tagName)){return{Renderer:specialRenderersConfig[tagName].Element||TDefaultRenderer,rendererProps:specialRenderersConfig[tagName].hook(props)};}return{Renderer:TDefaultRenderer,rendererProps:rendererProps};}","map":{"version":3,"mappings":"oOAEA,0EACA,wEACA,wEACA,iDACA,qDACA,mDACA,sIAGA,GAAMA,uBAAsB,CAAG,CAC7BC,GAAG,CAAE,CACHC,IAAI,CAAEC,+BADH,CAEHC,OAAO,CAAEC,mBAFN,CADwB,CAK7BC,EAAE,CAAE,CACFJ,IAAI,CAAEK,6BADJ,CAEFH,OAAO,CAAEI,kBAFP,CALyB,CAS7BC,EAAE,CAAE,CACFP,IAAI,CAAEQ,6BADJ,CAEFN,OAAO,CAAEO,kBAFP,CATyB,CAa7BC,CAAC,CAAE,CACDV,IAAI,CAAEW,2BADL,CAEDT,OAAO,CAAEU,SAFR,CAb0B,CAA/B,CAqBA,QAASC,2BAAT,CACEC,OADF,CAEkD,CAChD,MAAOA,QAAO,GAAIhB,uBAAlB,CACD,CAoBc,QAASiB,oBAAT,CACbD,OADa,CAEbE,KAFa,CAKwC,CACrD,GAAQC,iBAAR,CAA+CD,KAA/C,CAAQC,gBAAR,CAA6BC,aAA7B,0BAA+CF,KAA/C,YACA,GAAIH,0BAA0B,CAACC,OAAD,CAA9B,CAAyC,CACvC,MAAO,CACLK,QAAQ,CAAErB,sBAAsB,CAACgB,OAAD,CAAtBhB,CAAgCI,OAAhCJ,EAA2CmB,gBADhD,CAELC,aAAa,CAAEpB,sBAAsB,CAACgB,OAAD,CAAtBhB,CAAgCE,IAAhCF,CAAqCkB,KAArClB,CAFV,CAAP,CAID,CACD,MAAO,CACLqB,QAAQ,CAAEF,gBADL,CAELC,2BAFK,CAAP,CAID","names":["specialRenderersConfig","img","hook","useIMGElementProps","Element","IMGElement","ol","useOLElementProps","OLElement","ul","useULElementProps","ULElement","a","useAElementProps","undefined","hasSpecialInternalRenderer","tagName","useInternalRenderer","props","TDefaultRenderer","rendererProps","Renderer"],"sources":["useInternalRenderer.ts"],"sourcesContent":["import { TagName } from '@native-html/transient-render-engine';\nimport { ComponentType } from 'react';\nimport IMGElement from '../elements/IMGElement';\nimport OLElement from '../elements/OLElement';\nimport ULElement from '../elements/ULElement';\nimport { useAElementProps } from '../renderers/ARenderer';\nimport { useIMGElementProps } from '../renderers/IMGRenderer';\nimport { useOLElementProps } from '../renderers/OLRenderer';\nimport { useULElementProps } from '../renderers/ULRenderer';\nimport { InternalRendererProps, TDefaultRendererProps } from '../shared-types';\n\nconst specialRenderersConfig = {\n  img: {\n    hook: useIMGElementProps,\n    Element: IMGElement\n  },\n  ol: {\n    hook: useOLElementProps,\n    Element: OLElement\n  },\n  ul: {\n    hook: useULElementProps,\n    Element: ULElement\n  },\n  a: {\n    hook: useAElementProps,\n    Element: undefined\n  }\n};\n\nexport type InternalSpecialRenderedTag = keyof typeof specialRenderersConfig;\n\nfunction hasSpecialInternalRenderer(\n  tagName: TagName\n): tagName is keyof typeof specialRenderersConfig {\n  return tagName in specialRenderersConfig;\n}\n\nexport interface InternalRendererConfig<P> {\n  Renderer: ComponentType<P>;\n  rendererProps: P;\n}\n/**\n * Resuse internal renderers logic for infinite customization!\n *\n * @remarks `tagName` must be invariant, i.e. it cannot change. You would\n * otherwise break the rules of hooks.\n *\n * @param tagName - **Invariant** The tag name to extend.\n * @param props - The props passed to the custom renderer.\n * @typeParam T - The name of the tag to target.\n * @returns An object with two fields: `Renderer` (the internal react\n * component) and `rendererProps`, the internal component props.\n *\n * @public\n */\nexport default function useInternalRenderer<T extends TagName>(\n  tagName: T,\n  props: InternalRendererProps<any>\n): T extends InternalSpecialRenderedTag\n  ? InternalRendererConfig<ReturnType<typeof specialRenderersConfig[T]['hook']>>\n  : InternalRendererConfig<TDefaultRendererProps<any>> {\n  const { TDefaultRenderer, ...rendererProps } = props;\n  if (hasSpecialInternalRenderer(tagName)) {\n    return {\n      Renderer: specialRenderersConfig[tagName].Element || TDefaultRenderer,\n      rendererProps: specialRenderersConfig[tagName].hook(props as any)\n    } as any;\n  }\n  return {\n    Renderer: TDefaultRenderer,\n    rendererProps\n  } as any;\n}\n"]},"metadata":{},"sourceType":"script"}