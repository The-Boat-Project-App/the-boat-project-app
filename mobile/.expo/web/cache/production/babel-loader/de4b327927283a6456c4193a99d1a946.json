{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useOverlayTriggerState as $9Xvoh$useOverlayTriggerState}from\"@react-stately/overlays\";import{useState as $9Xvoh$useState}from\"react\";function $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props){var overlayTriggerState=$9Xvoh$useOverlayTriggerState(props);var _$9Xvoh$useState=$9Xvoh$useState(null),_$9Xvoh$useState2=_slicedToArray(_$9Xvoh$useState,2),focusStrategy1=_$9Xvoh$useState2[0],setFocusStrategy=_$9Xvoh$useState2[1];return _objectSpread(_objectSpread({focusStrategy:focusStrategy1},overlayTriggerState),{},{open:function open(){var focusStrategy=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setFocusStrategy(focusStrategy);overlayTriggerState.open();},toggle:function toggle(){var focusStrategy=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setFocusStrategy(focusStrategy);overlayTriggerState.toggle();}});}export{$a28c903ee9ad8dc5$export$79fefeb1c2091ac3 as useMenuTriggerState};","map":{"version":3,"mappings":"6hCAgCgBA,2CAAoBC,MAA4C,CAC9E,GAAIC,oBAAmB,CAAGC,6BAAsB,CAACF,KAAD,CAAhD,CACA,qBAAwCG,eAAQ,CAAgB,IAAhB,CAAhD,sDAAKC,cAAL,sBAAoBC,gBAApB,sBAEA,kDACED,cADF,EAEKH,mBAFL,MAGEK,IAHF,gBAG4C,IAArCC,cAAqC,2DAAN,IAAM,CACxCF,gBAAgB,CAACE,aAAD,CAAhB,CACAN,mBAAmB,CAACK,IAApB,GACD,CANH,CAOEE,MAPF,kBAO8C,IAArCD,cAAqC,2DAAN,IAAM,CAC1CF,gBAAgB,CAACE,aAAD,CAAhB,CACAN,mBAAmB,CAACO,MAApB,GACD,CAVH,GAYD","names":["$a28c903ee9ad8dc5$export$79fefeb1c2091ac3","props","overlayTriggerState","$9Xvoh$useOverlayTriggerState","$9Xvoh$useState","focusStrategy1","setFocusStrategy","open","focusStrategy","toggle"],"sources":["packages/@react-stately/menu/src/useMenuTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): MenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}