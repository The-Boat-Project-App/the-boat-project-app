{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{filterDOMProps as $kOq5K$filterDOMProps,mergeProps as $kOq5K$mergeProps}from\"@react-aria/utils\";import{useField as $kOq5K$useField}from\"@react-aria/label\";import{useFocusable as $kOq5K$useFocusable}from\"@react-aria/focus\";import{useRef as $kOq5K$useRef,useEffect as $kOq5K$useEffect}from\"react\";function $2d73ec29415bd339$export$712718f7aec83d5(props,ref){var _props$inputElementTy=props.inputElementType,inputElementType=_props$inputElementTy===void 0?'input':_props$inputElementTy,_props$isDisabled=props.isDisabled,isDisabled=_props$isDisabled===void 0?false:_props$isDisabled,_props$isRequired=props.isRequired,isRequired=_props$isRequired===void 0?false:_props$isRequired,_props$isReadOnly=props.isReadOnly,isReadOnly=_props$isReadOnly===void 0?false:_props$isReadOnly,validationState=props.validationState,_props$type=props.type,type=_props$type===void 0?'text':_props$type,_props$onChange=props.onChange,_onChange=_props$onChange===void 0?function(){}:_props$onChange;var _$kOq5K$useFocusable=$kOq5K$useFocusable(props,ref),focusableProps=_$kOq5K$useFocusable.focusableProps;var _$kOq5K$useField=$kOq5K$useField(props),labelProps=_$kOq5K$useField.labelProps,fieldProps=_$kOq5K$useField.fieldProps,descriptionProps=_$kOq5K$useField.descriptionProps,errorMessageProps=_$kOq5K$useField.errorMessageProps;var domProps=$kOq5K$filterDOMProps(props,{labelable:true});var inputOnlyProps={type:type,pattern:props.pattern};return{labelProps:labelProps,inputProps:$kOq5K$mergeProps(domProps,inputElementType==='input'&&inputOnlyProps,_objectSpread(_objectSpread({disabled:isDisabled,readOnly:isReadOnly,'aria-required':isRequired||undefined,'aria-invalid':validationState==='invalid'||undefined,'aria-errormessage':props['aria-errormessage'],'aria-activedescendant':props['aria-activedescendant'],'aria-autocomplete':props['aria-autocomplete'],'aria-haspopup':props['aria-haspopup'],value:props.value,defaultValue:props.value?undefined:props.defaultValue,onChange:function onChange(e){return _onChange(e.target.value);},autoComplete:props.autoComplete,maxLength:props.maxLength,minLength:props.minLength,name:props.name,placeholder:props.placeholder,inputMode:props.inputMode,onCopy:props.onCopy,onCut:props.onCut,onPaste:props.onPaste,onCompositionEnd:props.onCompositionEnd,onCompositionStart:props.onCompositionStart,onCompositionUpdate:props.onCompositionUpdate,onSelect:props.onSelect,onBeforeInput:props.onBeforeInput,onInput:props.onInput},focusableProps),fieldProps)),descriptionProps:descriptionProps,errorMessageProps:errorMessageProps};}function $d841c8010a73d545$var$supportsNativeBeforeInputEvent(){return typeof window!=='undefined'&&window.InputEvent&&typeof InputEvent.prototype.getTargetRanges==='function';}function $d841c8010a73d545$export$4f384c9210e583c3(props,state1,inputRef){var stateRef=$kOq5K$useRef(state1);stateRef.current=state1;$kOq5K$useEffect(function(){if(!$d841c8010a73d545$var$supportsNativeBeforeInputEvent())return;var input=inputRef.current;var onBeforeInput=function onBeforeInput(e){var state=stateRef.current;var nextValue;switch(e.inputType){case'historyUndo':case'historyRedo':return;case'deleteContent':case'deleteByCut':case'deleteByDrag':nextValue=input.value.slice(0,input.selectionStart)+input.value.slice(input.selectionEnd);break;case'deleteContentForward':nextValue=input.selectionEnd===input.selectionStart?input.value.slice(0,input.selectionStart)+input.value.slice(input.selectionEnd+1):input.value.slice(0,input.selectionStart)+input.value.slice(input.selectionEnd);break;case'deleteContentBackward':nextValue=input.selectionEnd===input.selectionStart?input.value.slice(0,input.selectionStart-1)+input.value.slice(input.selectionStart):input.value.slice(0,input.selectionStart)+input.value.slice(input.selectionEnd);break;case'deleteSoftLineBackward':case'deleteHardLineBackward':nextValue=input.value.slice(input.selectionStart);break;default:if(e.data!=null)nextValue=input.value.slice(0,input.selectionStart)+e.data+input.value.slice(input.selectionEnd);break;}if(nextValue==null||!state.validate(nextValue))e.preventDefault();};input.addEventListener('beforeinput',onBeforeInput,false);return function(){input.removeEventListener('beforeinput',onBeforeInput,false);};},[inputRef,stateRef]);var onBeforeInput1=!$d841c8010a73d545$var$supportsNativeBeforeInputEvent()?function(e){var nextValue=e.target.value.slice(0,e.target.selectionStart)+e.data+e.target.value.slice(e.target.selectionEnd);if(!state1.validate(nextValue))e.preventDefault();}:null;var _$2d73ec29415bd339$ex=$2d73ec29415bd339$export$712718f7aec83d5(props,inputRef),labelProps=_$2d73ec29415bd339$ex.labelProps,textFieldProps=_$2d73ec29415bd339$ex.inputProps,descriptionProps=_$2d73ec29415bd339$ex.descriptionProps,errorMessageProps=_$2d73ec29415bd339$ex.errorMessageProps;var compositionStartState=$kOq5K$useRef(null);return{inputProps:$kOq5K$mergeProps(textFieldProps,{onBeforeInput:onBeforeInput1,onCompositionStart:function onCompositionStart(){var _inputRef$current=inputRef.current,value=_inputRef$current.value,selectionStart=_inputRef$current.selectionStart,selectionEnd=_inputRef$current.selectionEnd;compositionStartState.current={value:value,selectionStart:selectionStart,selectionEnd:selectionEnd};},onCompositionEnd:function onCompositionEnd(){if(!state1.validate(inputRef.current.value)){var _compositionStartStat=compositionStartState.current,value=_compositionStartStat.value,selectionStart=_compositionStartStat.selectionStart,selectionEnd=_compositionStartStat.selectionEnd;inputRef.current.value=value;inputRef.current.setSelectionRange(selectionStart,selectionEnd);state1.setInputValue(value);}}}),labelProps:labelProps,descriptionProps:descriptionProps,errorMessageProps:errorMessageProps};}export{$2d73ec29415bd339$export$712718f7aec83d5 as useTextField,$d841c8010a73d545$export$4f384c9210e583c3 as useFormattedTextField};","map":{"version":3,"mappings":"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","names":["$2d73ec29415bd339$export$712718f7aec83d5","props","ref","inputElementType","isDisabled","isRequired","isReadOnly","validationState","type","onChange","$kOq5K$useFocusable","focusableProps","$kOq5K$useField","labelProps","fieldProps","descriptionProps","errorMessageProps","domProps","$kOq5K$filterDOMProps","labelable","inputOnlyProps","pattern","inputProps","$kOq5K$mergeProps","disabled","readOnly","undefined","value","defaultValue","e","target","autoComplete","maxLength","minLength","name","placeholder","inputMode","onCopy","onCut","onPaste","onCompositionEnd","onCompositionStart","onCompositionUpdate","onSelect","onBeforeInput","onInput","$d841c8010a73d545$var$supportsNativeBeforeInputEvent","window","InputEvent","prototype","getTargetRanges","$d841c8010a73d545$export$4f384c9210e583c3","state1","inputRef","stateRef","$kOq5K$useRef","current","$kOq5K$useEffect","input","state","nextValue","inputType","slice","selectionStart","selectionEnd","data","validate","preventDefault","addEventListener","removeEventListener","onBeforeInput1","textFieldProps","compositionStartState","setSelectionRange","setInputValue"],"sources":["packages/@react-aria/textfield/src/useTextField.ts","packages/@react-aria/textfield/src/useFormattedTextField.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTextFieldProps} from '@react-types/textfield';\nimport {\n  ChangeEvent,\n  DOMFactory,\n  HTMLAttributes,\n  ReactDOM,\n  RefObject\n} from 'react';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {useField} from '@react-aria/label';\nimport {useFocusable} from '@react-aria/focus';\n\n/**\n * A map of HTML element names and their interface types.\n * For example `'a'` -> `HTMLAnchorElement`.\n */\ntype IntrinsicHTMLElements = {\n  [K in keyof IntrinsicHTMLAttributes]: IntrinsicHTMLAttributes[K] extends HTMLAttributes<infer T> ? T : never\n};\n\n/**\n * A map of HTML element names and their attribute interface types.\n * For example `'a'` -> `AnchorHTMLAttributes<HTMLAnchorElement>`.\n */\ntype IntrinsicHTMLAttributes = {\n  [K in keyof ReactDOM]: ReactDOM[K] extends DOMFactory<infer T, any> ? T : never\n};\n\ntype DefaultElementType = 'input';\n\n/**\n * The intrinsic HTML element names that `useTextField` supports; e.g. `input`,\n * `textarea`.\n */\ntype TextFieldIntrinsicElements = keyof Pick<IntrinsicHTMLElements, 'input' | 'textarea'>;\n\n/**\n * The HTML element interfaces that `useTextField` supports based on what is\n * defined for `TextFieldIntrinsicElements`; e.g. `HTMLInputElement`,\n * `HTMLTextAreaElement`.\n */\ntype TextFieldHTMLElementType = Pick<IntrinsicHTMLElements, TextFieldIntrinsicElements>;\n\n/**\n * The HTML attributes interfaces that `useTextField` supports based on what\n * is defined for `TextFieldIntrinsicElements`; e.g. `InputHTMLAttributes`,\n * `TextareaHTMLAttributes`.\n */\ntype TextFieldHTMLAttributesType = Pick<IntrinsicHTMLAttributes, TextFieldIntrinsicElements>;\n\n/**\n * The type of `inputProps` returned by `useTextField`; e.g. `InputHTMLAttributes`,\n * `TextareaHTMLAttributes`.\n */\ntype TextFieldInputProps<T extends TextFieldIntrinsicElements> = TextFieldHTMLAttributesType[T];\n\nexport interface AriaTextFieldOptions<T extends TextFieldIntrinsicElements> extends AriaTextFieldProps {\n  /**\n   * The HTML element used to render the input, e.g. 'input', or 'textarea'.\n   * It determines whether certain HTML attributes will be included in `inputProps`.\n   * For example, [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type).\n   * @default 'input'\n   */\n  inputElementType?: T\n}\n\n/**\n * The type of `ref` object that can be passed to `useTextField` based on the given\n * intrinsic HTML element name; e.g.`RefObject<HTMLInputElement>`,\n * `RefObject<HTMLTextAreaElement>`.\n */\ntype TextFieldRefObject<T extends TextFieldIntrinsicElements> = RefObject<TextFieldHTMLElementType[T]>;\n\nexport interface TextFieldAria<T extends TextFieldIntrinsicElements = DefaultElementType> {\n  /** Props for the input element. */\n  inputProps: TextFieldInputProps<T>,\n  /** Props for the text field's visible label element, if any. */\n  labelProps: DOMAttributes,\n  /** Props for the text field's description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the text field's error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a text field.\n * @param props - Props for the text field.\n * @param ref - Ref to the HTML input or textarea element.\n */\nexport function useTextField<T extends TextFieldIntrinsicElements = DefaultElementType>(\n  props: AriaTextFieldOptions<T>,\n  ref: TextFieldRefObject<T>\n): TextFieldAria<T> {\n  let {\n    inputElementType = 'input',\n    isDisabled = false,\n    isRequired = false,\n    isReadOnly = false,\n    validationState,\n    type = 'text',\n    onChange = () => {}\n  }: AriaTextFieldOptions<TextFieldIntrinsicElements> = props;\n  let {focusableProps} = useFocusable(props, ref);\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField(props);\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  const inputOnlyProps = {\n    type,\n    pattern: props.pattern\n  };\n\n  return {\n    labelProps,\n    inputProps: mergeProps(\n      domProps,\n      inputElementType === 'input' && inputOnlyProps,\n      {\n        disabled: isDisabled,\n        readOnly: isReadOnly,\n        'aria-required': isRequired || undefined,\n        'aria-invalid': validationState === 'invalid' || undefined,\n        'aria-errormessage': props['aria-errormessage'],\n        'aria-activedescendant': props['aria-activedescendant'],\n        'aria-autocomplete': props['aria-autocomplete'],\n        'aria-haspopup': props['aria-haspopup'],\n        value: props.value,\n        defaultValue: props.value ? undefined : props.defaultValue,\n        onChange: (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.value),\n        autoComplete: props.autoComplete,\n        maxLength: props.maxLength,\n        minLength: props.minLength,\n        name: props.name,\n        placeholder: props.placeholder,\n        inputMode: props.inputMode,\n\n        // Clipboard events\n        onCopy: props.onCopy,\n        onCut: props.onCut,\n        onPaste: props.onPaste,\n\n        // Composition events\n        onCompositionEnd: props.onCompositionEnd,\n        onCompositionStart: props.onCompositionStart,\n        onCompositionUpdate: props.onCompositionUpdate,\n\n        // Selection events\n        onSelect: props.onSelect,\n\n        // Input events\n        onBeforeInput: props.onBeforeInput,\n        onInput: props.onInput,\n        ...focusableProps,\n        ...fieldProps\n      }\n    ),\n    descriptionProps,\n    errorMessageProps\n  };\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTextFieldProps} from '@react-types/textfield';\nimport {mergeProps} from '@react-aria/utils';\nimport {RefObject, useEffect, useRef} from 'react';\nimport {TextFieldAria, useTextField} from './useTextField';\n\ninterface FormattedTextFieldState {\n  validate: (val: string) => boolean,\n  setInputValue: (val: string) => void\n}\n\n\nfunction supportsNativeBeforeInputEvent() {\n  return typeof window !== 'undefined' &&\n    window.InputEvent &&\n    // @ts-ignore\n    typeof InputEvent.prototype.getTargetRanges === 'function';\n}\n\nexport function useFormattedTextField(props: AriaTextFieldProps, state: FormattedTextFieldState, inputRef: RefObject<HTMLInputElement>): TextFieldAria {\n\n  let stateRef = useRef(state);\n  stateRef.current = state;\n\n  // All browsers implement the 'beforeinput' event natively except Firefox\n  // (currently behind a flag as of Firefox 84). React's polyfill does not\n  // run in all cases that the native event fires, e.g. when deleting text.\n  // Use the native event if available so that we can prevent invalid deletions.\n  // We do not attempt to polyfill this in Firefox since it would be very complicated,\n  // the benefit of doing so is fairly minor, and it's going to be natively supported soon.\n  useEffect(() => {\n    if (!supportsNativeBeforeInputEvent()) {\n      return;\n    }\n\n    let input = inputRef.current;\n\n    let onBeforeInput = (e: InputEvent) => {\n      let state = stateRef.current;\n\n      // Compute the next value of the input if the event is allowed to proceed.\n      // See https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes for a full list of input types.\n      let nextValue: string;\n      switch (e.inputType) {\n        case 'historyUndo':\n        case 'historyRedo':\n          // Explicitly allow undo/redo. e.data is null in this case, but there's no need to validate,\n          // because presumably the input would have already been validated previously.\n          return;\n        case 'deleteContent':\n        case 'deleteByCut':\n        case 'deleteByDrag':\n          nextValue = input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n        case 'deleteContentForward':\n          // This is potentially incorrect, since the browser may actually delete more than a single UTF-16\n          // character. In reality, a full Unicode grapheme cluster consisting of multiple UTF-16 characters\n          // or code points may be deleted. However, in our currently supported locales, there are no such cases.\n          // If we support additional locales in the future, this may need to change.\n          nextValue = input.selectionEnd === input.selectionStart\n            ? input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd + 1)\n            : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n        case 'deleteContentBackward':\n          nextValue = input.selectionEnd === input.selectionStart\n            ? input.value.slice(0, input.selectionStart - 1) + input.value.slice(input.selectionStart)\n            : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n        case 'deleteSoftLineBackward':\n        case 'deleteHardLineBackward':\n          nextValue = input.value.slice(input.selectionStart);\n          break;\n        default:\n          if (e.data != null) {\n            nextValue =\n              input.value.slice(0, input.selectionStart) +\n              e.data +\n              input.value.slice(input.selectionEnd);\n          }\n          break;\n      }\n\n      // If we did not compute a value, or the new value is invalid, prevent the event\n      // so that the browser does not update the input text, move the selection, or add to\n      // the undo/redo stack.\n      if (nextValue == null || !state.validate(nextValue)) {\n        e.preventDefault();\n      }\n    };\n\n    input.addEventListener('beforeinput', onBeforeInput, false);\n    return () => {\n      input.removeEventListener('beforeinput', onBeforeInput, false);\n    };\n  }, [inputRef, stateRef]);\n\n  let onBeforeInput = !supportsNativeBeforeInputEvent()\n    ? e => {\n      let nextValue =\n        e.target.value.slice(0, e.target.selectionStart) +\n        e.data +\n        e.target.value.slice(e.target.selectionEnd);\n\n      if (!state.validate(nextValue)) {\n        e.preventDefault();\n      }\n    }\n    : null;\n\n  let {labelProps, inputProps: textFieldProps, descriptionProps, errorMessageProps} = useTextField(props, inputRef);\n\n  let compositionStartState = useRef(null);\n  return {\n    inputProps: mergeProps(\n      textFieldProps,\n      {\n        onBeforeInput,\n        onCompositionStart() {\n          // Chrome does not implement Input Events Level 2, which specifies the insertFromComposition\n          // and deleteByComposition inputType values for the beforeinput event. These are meant to occur\n          // at the end of a composition (e.g. Pinyin IME, Android auto correct, etc.), and crucially, are\n          // cancelable. The insertCompositionText and deleteCompositionText input types are not cancelable,\n          // nor would we want to cancel them because the input from the user is incomplete at that point.\n          // In Safari, insertFromComposition/deleteFromComposition will fire, however, allowing us to cancel\n          // the final composition result if it is invalid. As a fallback for Chrome and Firefox, which either\n          // don't support Input Events Level 2, or beforeinput at all, we store the state of the input when\n          // the compositionstart event fires, and undo the changes in compositionend (below) if it is invalid.\n          // Unfortunately, this messes up the undo/redo stack, but until insertFromComposition/deleteByComposition\n          // are implemented, there is no other way to prevent composed input.\n          // See https://bugs.chromium.org/p/chromium/issues/detail?id=1022204\n          let {value, selectionStart, selectionEnd} = inputRef.current;\n          compositionStartState.current = {value, selectionStart, selectionEnd};\n        },\n        onCompositionEnd() {\n          if (!state.validate(inputRef.current.value)) {\n            // Restore the input value in the DOM immediately so we can synchronously update the selection position.\n            // But also update the value in React state as well so it is correct for future updates.\n            let {value, selectionStart, selectionEnd} = compositionStartState.current;\n            inputRef.current.value = value;\n            inputRef.current.setSelectionRange(selectionStart, selectionEnd);\n            state.setInputValue(value);\n          }\n        }\n      }\n    ),\n    labelProps,\n    descriptionProps,\n    errorMessageProps\n  };\n}\n"]},"metadata":{},"sourceType":"module"}