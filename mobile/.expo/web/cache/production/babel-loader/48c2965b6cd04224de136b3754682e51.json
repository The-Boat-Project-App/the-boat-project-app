{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"mode\",\"edges\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useSafeAreaInsets}from\"./SafeAreaContext\";var TOP=8,RIGHT=4,BOTTOM=2,LEFT=1,ALL=15;var edgeBitmaskMap={top:TOP,right:RIGHT,bottom:BOTTOM,left:LEFT};export function SafeAreaView(_ref){var _ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style,mode=_ref.mode,edges=_ref.edges,rest=_objectWithoutProperties(_ref,_excluded);var insets=useSafeAreaInsets();var edgeBitmask=edges!=null?edges.reduce(function(accum,edge){return accum|edgeBitmaskMap[edge];},0):ALL;var appliedStyle=React.useMemo(function(){var insetTop=edgeBitmask&TOP?insets.top:0;var insetRight=edgeBitmask&RIGHT?insets.right:0;var insetBottom=edgeBitmask&BOTTOM?insets.bottom:0;var insetLeft=edgeBitmask&LEFT?insets.left:0;var flatStyle=StyleSheet.flatten(style);if(mode==='margin'){var _flatStyle$margin=flatStyle.margin,margin=_flatStyle$margin===void 0?0:_flatStyle$margin,_flatStyle$marginVert=flatStyle.marginVertical,marginVertical=_flatStyle$marginVert===void 0?margin:_flatStyle$marginVert,_flatStyle$marginHori=flatStyle.marginHorizontal,marginHorizontal=_flatStyle$marginHori===void 0?margin:_flatStyle$marginHori,_flatStyle$marginTop=flatStyle.marginTop,marginTop=_flatStyle$marginTop===void 0?marginVertical:_flatStyle$marginTop,_flatStyle$marginRigh=flatStyle.marginRight,marginRight=_flatStyle$marginRigh===void 0?marginHorizontal:_flatStyle$marginRigh,_flatStyle$marginBott=flatStyle.marginBottom,marginBottom=_flatStyle$marginBott===void 0?marginVertical:_flatStyle$marginBott,_flatStyle$marginLeft=flatStyle.marginLeft,marginLeft=_flatStyle$marginLeft===void 0?marginHorizontal:_flatStyle$marginLeft;var marginStyle={marginTop:marginTop+insetTop,marginRight:marginRight+insetRight,marginBottom:marginBottom+insetBottom,marginLeft:marginLeft+insetLeft};return[style,marginStyle];}else{var _flatStyle$padding=flatStyle.padding,padding=_flatStyle$padding===void 0?0:_flatStyle$padding,_flatStyle$paddingVer=flatStyle.paddingVertical,paddingVertical=_flatStyle$paddingVer===void 0?padding:_flatStyle$paddingVer,_flatStyle$paddingHor=flatStyle.paddingHorizontal,paddingHorizontal=_flatStyle$paddingHor===void 0?padding:_flatStyle$paddingHor,_flatStyle$paddingTop=flatStyle.paddingTop,paddingTop=_flatStyle$paddingTop===void 0?paddingVertical:_flatStyle$paddingTop,_flatStyle$paddingRig=flatStyle.paddingRight,paddingRight=_flatStyle$paddingRig===void 0?paddingHorizontal:_flatStyle$paddingRig,_flatStyle$paddingBot=flatStyle.paddingBottom,paddingBottom=_flatStyle$paddingBot===void 0?paddingVertical:_flatStyle$paddingBot,_flatStyle$paddingLef=flatStyle.paddingLeft,paddingLeft=_flatStyle$paddingLef===void 0?paddingHorizontal:_flatStyle$paddingLef;var paddingStyle={paddingTop:paddingTop+insetTop,paddingRight:paddingRight+insetRight,paddingBottom:paddingBottom+insetBottom,paddingLeft:paddingLeft+insetLeft};return[style,paddingStyle];}},[style,insets,mode,edgeBitmask]);return React.createElement(View,_extends({style:appliedStyle},rest));}","map":{"version":3,"mappings":"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","names":["React","useSafeAreaInsets","TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","SafeAreaView","style","mode","edges","rest","insets","edgeBitmask","reduce","accum","edge","appliedStyle","useMemo","insetTop","insetRight","insetBottom","insetLeft","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","View"],"sources":["SafeAreaView.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport type { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b0100,\n      BOTTOM = 0b0010,\n      LEFT   = 0b0001,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style = {},\n  mode,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft,\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft,\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"module"}