{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"isHovered\",\"isFocused\",\"onKeyPress\",\"InputLeftElement\",\"InputRightElement\",\"leftElement\",\"rightElement\"],_excluded2=[\"ariaLabel\",\"accessibilityLabel\",\"type\",\"isFullWidth\",\"isDisabled\",\"isReadOnly\",\"fontFamily\",\"fontWeight\",\"fontStyle\",\"placeholderTextColor\",\"selectionColor\",\"underlineColorAndroid\",\"onFocus\",\"onBlur\",\"wrapperRef\",\"_stack\",\"_input\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";import{useToken}from\"../../../hooks\";import{useFormControl}from\"../../composites/FormControl\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{useHover}from'@react-native-aria/interactions';import{extractInObject,stylingProps}from\"../../../theme/tools/utils\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{mergeRefs,resolveStackStyleInput}from\"../../../utils\";import{Stack}from\"../Stack\";import{makeStyledComponent}from\"../../../utils/styled\";import{useResolvedFontFamily}from\"../../../hooks/useResolvedFontFamily\";var StyledInput=makeStyledComponent(TextInput);var Input=function Input(_ref2,ref){var isHoveredProp=_ref2.isHovered,isFocusedProp=_ref2.isFocused,_onKeyPress=_ref2.onKeyPress,InputLeftElement=_ref2.InputLeftElement,InputRightElement=_ref2.InputRightElement,leftElement=_ref2.leftElement,rightElement=_ref2.rightElement,props=_objectWithoutProperties(_ref2,_excluded);var inputProps=useFormControl({isDisabled:props.isDisabled,isInvalid:props.isInvalid,isReadOnly:props.isReadOnly,isRequired:props.isRequired,nativeID:props.nativeID});var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isFocused=_React$useState2[0],setIsFocused=_React$useState2[1];var handleFocus=function handleFocus(focusState,callback){setIsFocused(focusState);callback();};var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;var inputThemeProps={isDisabled:inputProps.disabled,isInvalid:inputProps.accessibilityInvalid,isReadOnly:inputProps.accessibilityReadOnly,isRequired:inputProps.required};var _usePropsResolution=usePropsResolution('Input',_objectSpread(_objectSpread({},inputThemeProps),props),{isDisabled:inputThemeProps.isDisabled,isHovered:isHoveredProp||isHovered,isFocused:isFocusedProp||isFocused,isInvalid:inputThemeProps.isInvalid,isReadOnly:inputThemeProps.isReadOnly}),ariaLabel=_usePropsResolution.ariaLabel,accessibilityLabel=_usePropsResolution.accessibilityLabel,type=_usePropsResolution.type,isFullWidth=_usePropsResolution.isFullWidth,isDisabled=_usePropsResolution.isDisabled,isReadOnly=_usePropsResolution.isReadOnly,fontFamily=_usePropsResolution.fontFamily,fontWeight=_usePropsResolution.fontWeight,fontStyle=_usePropsResolution.fontStyle,placeholderTextColor=_usePropsResolution.placeholderTextColor,selectionColor=_usePropsResolution.selectionColor,underlineColorAndroid=_usePropsResolution.underlineColorAndroid,_onFocus=_usePropsResolution.onFocus,_onBlur=_usePropsResolution.onBlur,wrapperRef=_usePropsResolution.wrapperRef,_stack=_usePropsResolution._stack,_input=_usePropsResolution._input,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var _extractInObject=extractInObject(resolvedProps,[].concat(_toConsumableArray(stylingProps.margin),_toConsumableArray(stylingProps.border),_toConsumableArray(stylingProps.layout),_toConsumableArray(stylingProps.flexbox),_toConsumableArray(stylingProps.position),_toConsumableArray(stylingProps.background),['shadow','opacity'])),_extractInObject2=_slicedToArray(_extractInObject,2),layoutProps=_extractInObject2[0],nonLayoutProps=_extractInObject2[1];var resolvedFontFamily=useResolvedFontFamily({fontFamily:fontFamily,fontWeight:fontWeight!==null&&fontWeight!==void 0?fontWeight:400,fontStyle:fontStyle!==null&&fontStyle!==void 0?fontStyle:'normal'});var resolvedPlaceholderTextColor=useToken('colors',placeholderTextColor);var resolvedSelectionColor=useToken('colors',selectionColor);var resolvedUnderlineColorAndroid=useToken('colors',underlineColorAndroid);resolvedProps.focusOutlineColor=useToken('colors',resolvedProps.focusOutlineColor);resolvedProps.invalidOutlineColor=useToken('colors',resolvedProps.invalidOutlineColor);if(useHasResponsiveProps(props)){return null;}if(resolvedProps.focusOutlineColor&&isFocused){layoutProps.borderColor=resolvedProps.focusOutlineColor;_stack.style=resolveStackStyleInput(props.variant,resolvedProps.focusOutlineColor);}if(resolvedProps.invalidOutlineColor&&props.isInvalid){layoutProps.borderColor=resolvedProps.invalidOutlineColor;_stack.style=resolveStackStyleInput(props.variant,resolvedProps.invalidOutlineColor);}return React.createElement(Stack,_extends({},_stack,layoutProps,{ref:mergeRefs([_ref,wrapperRef]),isFocused:isFocused}),InputLeftElement||leftElement?InputLeftElement||leftElement:null,React.createElement(StyledInput,_extends({},inputProps,{secureTextEntry:type==='password',accessible:true,accessibilityLabel:ariaLabel||accessibilityLabel,editable:isDisabled||isReadOnly?false:true,w:isFullWidth?'100%':undefined},nonLayoutProps,resolvedFontFamily,{placeholderTextColor:resolvedPlaceholderTextColor,selectionColor:resolvedSelectionColor,underlineColorAndroid:resolvedUnderlineColorAndroid,onKeyPress:function onKeyPress(e){e.persist();_onKeyPress&&_onKeyPress(e);},onFocus:function onFocus(e){handleFocus(true,_onFocus?function(){return _onFocus(e);}:function(){});},onBlur:function onBlur(e){handleFocus(false,_onBlur?function(){return _onBlur(e);}:function(){});}},_input,{ref:mergeRefs([ref,_ref,wrapperRef])})),InputRightElement||rightElement?InputRightElement||rightElement:null);};export default memo(forwardRef(Input));","map":{"version":3,"mappings":"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","names":["React","memo","forwardRef","useToken","useFormControl","useHasResponsiveProps","useHover","extractInObject","stylingProps","usePropsResolution","mergeRefs","resolveStackStyleInput","Stack","makeStyledComponent","useResolvedFontFamily","StyledInput","TextInput","Input","ref","isHoveredProp","isHovered","isFocusedProp","isFocused","onKeyPress","InputLeftElement","InputRightElement","leftElement","rightElement","props","inputProps","isDisabled","isInvalid","isReadOnly","isRequired","nativeID","useState","setIsFocused","handleFocus","focusState","callback","_ref","useRef","inputThemeProps","disabled","accessibilityInvalid","accessibilityReadOnly","required","ariaLabel","accessibilityLabel","type","isFullWidth","fontFamily","fontWeight","fontStyle","placeholderTextColor","selectionColor","underlineColorAndroid","onFocus","onBlur","wrapperRef","_stack","_input","resolvedProps","margin","border","layout","flexbox","position","background","layoutProps","nonLayoutProps","resolvedFontFamily","resolvedPlaceholderTextColor","resolvedSelectionColor","resolvedUnderlineColorAndroid","focusOutlineColor","invalidOutlineColor","borderColor","style","variant","secureTextEntry","accessible","editable","w","undefined","e","persist"],"sources":["Input.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IInputProps } from './types';\nimport { TextInput } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs, resolveStackStyleInput } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\n\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst Input = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    onKeyPress,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    ...props\n  }: IInputProps,\n  ref: any\n) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID,\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    ariaLabel,\n    accessibilityLabel,\n    type,\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    _stack,\n    _input,\n\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'shadow',\n    'opacity',\n  ]);\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? 400,\n    fontStyle: fontStyle ?? 'normal',\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken(\n    'colors',\n    underlineColorAndroid\n  );\n\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n  resolvedProps.focusOutlineColor = useToken(\n    'colors',\n    resolvedProps.focusOutlineColor\n  );\n  //@ts-ignore\n  resolvedProps.invalidOutlineColor = useToken(\n    'colors',\n    resolvedProps.invalidOutlineColor\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (resolvedProps.focusOutlineColor && isFocused) {\n    layoutProps.borderColor = resolvedProps.focusOutlineColor;\n    _stack.style = resolveStackStyleInput(\n      props.variant,\n      resolvedProps.focusOutlineColor\n    );\n  }\n\n  if (resolvedProps.invalidOutlineColor && props.isInvalid) {\n    layoutProps.borderColor = resolvedProps.invalidOutlineColor;\n    _stack.style = resolveStackStyleInput(\n      props.variant,\n      resolvedProps.invalidOutlineColor\n    );\n  }\n\n  return (\n    <Stack\n      {..._stack}\n      {...layoutProps}\n      ref={mergeRefs([_ref, wrapperRef])}\n      isFocused={isFocused}\n    >\n      {InputLeftElement || leftElement ? InputLeftElement || leftElement : null}\n      <StyledInput\n        {...inputProps}\n        secureTextEntry={type === 'password'}\n        accessible\n        accessibilityLabel={ariaLabel || accessibilityLabel}\n        editable={isDisabled || isReadOnly ? false : true}\n        w={isFullWidth ? '100%' : undefined}\n        {...nonLayoutProps}\n        {...resolvedFontFamily}\n        placeholderTextColor={resolvedPlaceholderTextColor}\n        selectionColor={resolvedSelectionColor}\n        underlineColorAndroid={resolvedUnderlineColorAndroid}\n        onKeyPress={(e: any) => {\n          e.persist();\n          onKeyPress && onKeyPress(e);\n        }}\n        onFocus={(e: any) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e: any) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n        {..._input}\n        ref={mergeRefs([ref, _ref, wrapperRef])}\n      />\n      {InputRightElement || rightElement\n        ? InputRightElement || rightElement\n        : null}\n    </Stack>\n  );\n};\n\nexport default memo(forwardRef(Input));\n"]},"metadata":{},"sourceType":"module"}