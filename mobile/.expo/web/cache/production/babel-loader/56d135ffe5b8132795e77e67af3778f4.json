{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.useDocumentMetadata=useDocumentMetadata;exports.default=void 0;var _react=_interopRequireWildcard(require(\"react\"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var DocumentMetadataContext=_react.default.createContext({baseUrl:'',baseTarget:'_self',lang:'en',links:[],meta:[],title:'',dir:'ltr'});var DocumentMetadataProvider=DocumentMetadataContext.Provider;function useDocumentMetadata(){return(0,_react.useContext)(DocumentMetadataContext);}var _default=DocumentMetadataProvider;exports.default=_default;","map":{"version":3,"mappings":"6IAAA,+iCAGA,GAAMA,wBAAuB,CAAGC,eAAMC,aAAND,CAAsC,CACpEE,OAAO,CAAE,EAD2D,CAEpEC,UAAU,CAAE,OAFwD,CAGpEC,IAAI,CAAE,IAH8D,CAIpEC,KAAK,CAAE,EAJ6D,CAKpEC,IAAI,CAAE,EAL8D,CAMpEC,KAAK,CAAE,EAN6D,CAOpEC,GAAG,CAAE,KAP+D,CAAtCR,CAAhC,CAUA,GAAMS,yBAAwB,CAAGV,uBAAuB,CAACW,QAAzD,CAKO,QAASC,oBAAT,EAA+B,CACpC,MAAO,sBAAWZ,uBAAX,CAAP,CACD,cAEcU","names":["DocumentMetadataContext","React","createContext","baseUrl","baseTarget","lang","links","meta","title","dir","DocumentMetadataProvider","Provider","useDocumentMetadata"],"sources":["DocumentMetadataProvider.ts"],"sourcesContent":["import React, { useContext } from 'react';\nimport { DocumentMetadata } from '../shared-types';\n\nconst DocumentMetadataContext = React.createContext<DocumentMetadata>({\n  baseUrl: '',\n  baseTarget: '_self',\n  lang: 'en',\n  links: [],\n  meta: [],\n  title: '',\n  dir: 'ltr'\n});\n\nconst DocumentMetadataProvider = DocumentMetadataContext.Provider;\n\n/**\n * Get access to the parsed HTML metadata anywhere in the render tree.\n */\nexport function useDocumentMetadata() {\n  return useContext(DocumentMetadataContext);\n}\n\nexport default DocumentMetadataProvider;\n"]},"metadata":{},"sourceType":"script"}