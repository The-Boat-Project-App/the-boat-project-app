{"ast":null,"code":"import React from'react';import{useNativeBaseConfig}from\"../core/NativeBaseContext\";import{resolveValueWithBreakpoint}from\"./useThemeProps/utils\";import{useTheme}from\"./../hooks/useTheme\";export var useBreakpointResolvedProps=function useBreakpointResolvedProps(props){var currentBreakpoint=useNativeBaseConfig('useBreakpointResolvedProps').currentBreakpoint;var theme=useTheme();var newProps=React.useMemo(function(){var newProps={};for(var key in props){var rawValue=props[key];var value=resolveValueWithBreakpoint(rawValue,theme.breakpoints,currentBreakpoint,key);newProps[key]=value;}return newProps;},[props,currentBreakpoint,theme.breakpoints]);return newProps;};","map":{"version":3,"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CAEA,OAASC,mBAAT,iCACA,OAASC,0BAAT,6BACA,OAASC,QAAT,2BAUA,MAAO,IAAMC,2BAA0B,CAAIC,QAA9BD,2BAA8BC,MAAD,CAAmB,CAC3D,GAAMC,kBAAiB,CAAGL,mBAAmB,CAAC,4BAAD,CAAnBA,CACvBK,iBADH,CAEA,GAAMC,MAAK,CAAGJ,QAAQ,EAAtB,CACA,GAAMK,SAAmB,CAAGR,KAAK,CAACS,OAANT,CAAc,UAAM,CAC9C,GAAIQ,SAAmB,CAAG,EAA1B,CACA,IAAK,GAAIE,IAAT,GAAgBL,MAAhB,CAAuB,CACrB,GAAMM,SAAQ,CAAGN,KAAK,CAACK,GAAD,CAAtB,CACA,GAAME,MAAK,CAAGV,0BAA0B,CACtCS,QADsC,CAEtCJ,KAAK,CAACM,WAFgC,CAGtCP,iBAHsC,CAItCI,GAJsC,CAAxC,CAMAF,QAAQ,CAACE,GAAD,CAARF,CAAgBI,KAAhBJ,CACD,CACD,MAAOA,SAAP,CAZ0B,EAazB,CAACH,KAAD,CAAQC,iBAAR,CAA2BC,KAAK,CAACM,WAAjC,CAbyBb,CAA5B,CAeA,MAAOQ,SAAP,CAnBK","names":["React","useNativeBaseConfig","resolveValueWithBreakpoint","useTheme","useBreakpointResolvedProps","props","currentBreakpoint","theme","newProps","useMemo","key","rawValue","value","breakpoints"],"sources":["useBreakpointResolvedProps.ts"],"sourcesContent":["import React from 'react';\nimport type { ResponsiveValue } from '../components/types';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { resolveValueWithBreakpoint } from './useThemeProps/utils';\nimport { useTheme } from './../hooks/useTheme';\n\ntype IProps = {\n  [key: string]: ResponsiveValue<number | string>;\n};\n\ntype INewProps = {\n  [key: string]: number | string;\n};\n\nexport const useBreakpointResolvedProps = (props: IProps) => {\n  const currentBreakpoint = useNativeBaseConfig('useBreakpointResolvedProps')\n    .currentBreakpoint;\n  const theme = useTheme();\n  const newProps: INewProps = React.useMemo(() => {\n    let newProps: INewProps = {};\n    for (let key in props) {\n      const rawValue = props[key];\n      const value = resolveValueWithBreakpoint(\n        rawValue,\n        theme.breakpoints,\n        currentBreakpoint,\n        key\n      );\n      newProps[key] = value;\n    }\n    return newProps;\n  }, [props, currentBreakpoint, theme.breakpoints]);\n\n  return newProps;\n};\n"]},"metadata":{},"sourceType":"module"}