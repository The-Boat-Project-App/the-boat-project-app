{"ast":null,"code":"\"use strict\";var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _excluded=[\"children\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.useAmbientTRenderEngine=useAmbientTRenderEngine;exports.default=TRenderEngineProvider;exports.defaultTRenderEngineProviderProps=exports.defaultFallbackFonts=exports.tRenderEngineProviderPropTypes=void 0;var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _useTRenderEngine=_interopRequireDefault(require(\"./hooks/useTRenderEngine\"));var _defaultSystemFonts=_interopRequireDefault(require(\"./defaultSystemFonts\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var defaultTRenderEngine={};var TRenderEngineContext=_react.default.createContext(defaultTRenderEngine);var tRenderEngineProviderPropTypes={customHTMLElementModels:_propTypes.default.object.isRequired,enableCSSInlineProcessing:_propTypes.default.bool,enableUserAgentStyles:_propTypes.default.bool,idsStyles:_propTypes.default.object,ignoredDomTags:_propTypes.default.array,ignoreDomNode:_propTypes.default.func,domVisitors:_propTypes.default.object,ignoredStyles:_propTypes.default.array.isRequired,allowedStyles:_propTypes.default.array,htmlParserOptions:_propTypes.default.object,tagsStyles:_propTypes.default.object,classesStyles:_propTypes.default.object,emSize:_propTypes.default.number.isRequired,baseStyle:_propTypes.default.object,systemFonts:_propTypes.default.arrayOf(_propTypes.default.string),fallbackFonts:_propTypes.default.shape({serif:_propTypes.default.string,'sans-serif':_propTypes.default.string,monospace:_propTypes.default.string}),setMarkersForTNode:_propTypes.default.func,dangerouslyDisableHoisting:_propTypes.default.bool,dangerouslyDisableWhitespaceCollapsing:_propTypes.default.bool,selectDomRoot:_propTypes.default.func};exports.tRenderEngineProviderPropTypes=tRenderEngineProviderPropTypes;var defaultFallbackFonts={'sans-serif':_reactNative.Platform.select({ios:'system',default:'sans-serif'}),monospace:_reactNative.Platform.select({ios:'Menlo',default:'monospace'}),serif:_reactNative.Platform.select({ios:'Times New Roman',default:'serif'})};exports.defaultFallbackFonts=defaultFallbackFonts;var defaultTRenderEngineProviderProps={htmlParserOptions:{decodeEntities:true},emSize:14,ignoredDomTags:[],ignoredStyles:[],baseStyle:{fontSize:14},tagsStyles:{},classesStyles:{},enableUserAgentStyles:true,enableCSSInlineProcessing:true,customHTMLElementModels:{},fallbackFonts:defaultFallbackFonts,systemFonts:_defaultSystemFonts.default};exports.defaultTRenderEngineProviderProps=defaultTRenderEngineProviderProps;function useAmbientTRenderEngine(){var engine=_react.default.useContext(TRenderEngineContext);if(typeof __DEV__==='boolean'&&__DEV__&&engine===defaultTRenderEngine){console.error('TRenderEngineProvider is missing in the render tree.');}return engine;}function TRenderEngineProvider(_ref){var children=_ref.children,config=_objectWithoutProperties(_ref,_excluded);var engine=(0,_useTRenderEngine.default)(config);return _react.default.createElement(TRenderEngineContext.Provider,{value:engine},children);}TRenderEngineProvider.defaultProps=defaultTRenderEngineProviderProps;TRenderEngineProvider.propTypes=tRenderEngineProviderPropTypes;","map":{"version":3,"mappings":"2YACA,oD,wDAEA,6DACA,kFAEA,mKAEA,GAAMA,qBAAoB,CAAG,EAA7B,CAEA,GAAMC,qBAAoB,CACxBC,eAAMC,aAAND,CAAmCF,oBAAnCE,CADF,CAGO,GAAME,+BAGZ,CAAG,CACFC,uBAAuB,CAAEC,mBAAUC,MAAVD,CAAiBE,UADxC,CAEFC,yBAAyB,CAAEH,mBAAUI,IAFnC,CAGFC,qBAAqB,CAAEL,mBAAUI,IAH/B,CAIFE,SAAS,CAAEN,mBAAUC,MAJnB,CAKFM,cAAc,CAAEP,mBAAUQ,KALxB,CAMFC,aAAa,CAAET,mBAAUU,IANvB,CAOFC,WAAW,CAAEX,mBAAUC,MAPrB,CAQFW,aAAa,CAAEZ,mBAAUQ,KAAVR,CAAgBE,UAR7B,CASFW,aAAa,CAAEb,mBAAUQ,KATvB,CAUFM,iBAAiB,CAAEd,mBAAUC,MAV3B,CAWFc,UAAU,CAAEf,mBAAUC,MAXpB,CAYFe,aAAa,CAAEhB,mBAAUC,MAZvB,CAaFgB,MAAM,CAAEjB,mBAAUkB,MAAVlB,CAAiBE,UAbvB,CAcFiB,SAAS,CAAEnB,mBAAUC,MAdnB,CAeFmB,WAAW,CAAEpB,mBAAUqB,OAAVrB,CAAkBA,mBAAUsB,MAA5BtB,CAfX,CAgBFuB,aAAa,CAAEvB,mBAAUwB,KAAVxB,CAAgB,CAC7ByB,KAAK,CAAEzB,mBAAUsB,MADY,CAE7B,aAActB,mBAAUsB,MAFK,CAG7BI,SAAS,CAAE1B,mBAAUsB,MAHQ,CAAhBtB,CAhBb,CAqBF2B,kBAAkB,CAAE3B,mBAAUU,IArB5B,CAsBFkB,0BAA0B,CAAE5B,mBAAUI,IAtBpC,CAuBFyB,sCAAsC,CAAE7B,mBAAUI,IAvBhD,CAwBF0B,aAAa,CAAE9B,mBAAUU,IAxBvB,CAHG,uEAkCA,GAAMqB,qBAAoB,CAAG,CAClC,aAAcC,sBAASC,MAATD,CAAgB,CAAEE,GAAG,CAAE,QAAP,CAAiBC,OAAO,CAAE,YAA1B,CAAhBH,CADoB,CAElCN,SAAS,CAAEM,sBAASC,MAATD,CAAgB,CAAEE,GAAG,CAAE,OAAP,CAAgBC,OAAO,CAAE,WAAzB,CAAhBH,CAFuB,CAGlCP,KAAK,CAAEO,sBAASC,MAATD,CAAgB,CAAEE,GAAG,CAAE,iBAAP,CAA0BC,OAAO,CAAE,OAAnC,CAAhBH,CAH2B,CAA7B,mDAMA,GAAMI,kCAAsD,CAAG,CACpEtB,iBAAiB,CAAE,CACjBuB,cAAc,CAAE,IADC,CADiD,CAIpEpB,MAAM,CAAE,EAJ4D,CAKpEV,cAAc,CAAE,EALoD,CAMpEK,aAAa,CAAE,EANqD,CAOpEO,SAAS,CAAE,CAAEmB,QAAQ,CAAE,EAAZ,CAPyD,CAQpEvB,UAAU,CAAE,EARwD,CASpEC,aAAa,CAAE,EATqD,CAUpEX,qBAAqB,CAAE,IAV6C,CAWpEF,yBAAyB,CAAE,IAXyC,CAYpEJ,uBAAuB,CAAE,EAZ2C,CAapEwB,aAAa,CAAEQ,oBAbqD,CAcpEX,WAAW,CAAEmB,2BAduD,CAA/D,6EAwBA,QAASC,wBAAT,EAAmC,CACxC,GAAMC,OAAM,CAAG7C,eAAM8C,UAAN9C,CAAiBD,oBAAjBC,CAAf,CACA,GACE,MAAO+C,QAAP,GAAmB,SAAnB,EACAA,OADA,EAEAF,MAAM,GAAK/C,oBAHb,CAIE,CACAkD,OAAO,CAACC,KAARD,CAAc,sDAAdA,EACD,CACD,MAAOH,OAAP,CACD,CAUc,QAASK,sBAAT,MAG0C,IAFvDC,SAEuD,MAFvDA,QAEuD,CADpDC,MACoD,0CACvD,GAAMP,OAAM,CAAG,8BAAiBO,MAAjB,CAAf,CACA,MACEC,8BAACtD,oBAAD,CAAsBuD,QAAtB,EAA+BC,KAAK,CAAEV,MAAtC,EACGM,QADH,CADF,CAKD,CAKDD,qBAAqB,CAACM,YAAtBN,CAAqCV,iCAArCU,CAKAA,qBAAqB,CAACO,SAAtBP,CAAkChD,8BAAlCgD","names":["defaultTRenderEngine","TRenderEngineContext","React","createContext","tRenderEngineProviderPropTypes","customHTMLElementModels","PropTypes","object","isRequired","enableCSSInlineProcessing","bool","enableUserAgentStyles","idsStyles","ignoredDomTags","array","ignoreDomNode","func","domVisitors","ignoredStyles","allowedStyles","htmlParserOptions","tagsStyles","classesStyles","emSize","number","baseStyle","systemFonts","arrayOf","string","fallbackFonts","shape","serif","monospace","setMarkersForTNode","dangerouslyDisableHoisting","dangerouslyDisableWhitespaceCollapsing","selectDomRoot","defaultFallbackFonts","Platform","select","ios","default","defaultTRenderEngineProviderProps","decodeEntities","fontSize","defaultSystemFonts","useAmbientTRenderEngine","engine","useContext","__DEV__","console","error","TRenderEngineProvider","children","config","_react","Provider","value","defaultProps","propTypes"],"sources":["TRenderEngineProvider.tsx"],"sourcesContent":["import TRenderEngine from '@native-html/transient-render-engine';\nimport React, { PropsWithChildren, ReactElement } from 'react';\nimport { Platform } from 'react-native';\nimport PropTypes from 'prop-types';\nimport useTRenderEngine from './hooks/useTRenderEngine';\nimport { TRenderEngineConfig } from './shared-types';\nimport defaultSystemFonts from './defaultSystemFonts';\n\nconst defaultTRenderEngine = {} as any;\n\nconst TRenderEngineContext =\n  React.createContext<TRenderEngine>(defaultTRenderEngine);\n\nexport const tRenderEngineProviderPropTypes: Record<\n  keyof TRenderEngineConfig,\n  any\n> = {\n  customHTMLElementModels: PropTypes.object.isRequired,\n  enableCSSInlineProcessing: PropTypes.bool,\n  enableUserAgentStyles: PropTypes.bool,\n  idsStyles: PropTypes.object,\n  ignoredDomTags: PropTypes.array,\n  ignoreDomNode: PropTypes.func,\n  domVisitors: PropTypes.object,\n  ignoredStyles: PropTypes.array.isRequired,\n  allowedStyles: PropTypes.array,\n  htmlParserOptions: PropTypes.object,\n  tagsStyles: PropTypes.object,\n  classesStyles: PropTypes.object,\n  emSize: PropTypes.number.isRequired,\n  baseStyle: PropTypes.object,\n  systemFonts: PropTypes.arrayOf(PropTypes.string),\n  fallbackFonts: PropTypes.shape({\n    serif: PropTypes.string,\n    'sans-serif': PropTypes.string,\n    monospace: PropTypes.string\n  }),\n  setMarkersForTNode: PropTypes.func,\n  dangerouslyDisableHoisting: PropTypes.bool,\n  dangerouslyDisableWhitespaceCollapsing: PropTypes.bool,\n  selectDomRoot: PropTypes.func\n};\n\n/**\n * Default fallback font for special keys such as 'sans-serif', 'monospace',\n * 'serif', based on current platform.\n */\nexport const defaultFallbackFonts = {\n  'sans-serif': Platform.select({ ios: 'system', default: 'sans-serif' }),\n  monospace: Platform.select({ ios: 'Menlo', default: 'monospace' }),\n  serif: Platform.select({ ios: 'Times New Roman', default: 'serif' })\n};\n\nexport const defaultTRenderEngineProviderProps: TRenderEngineConfig = {\n  htmlParserOptions: {\n    decodeEntities: true\n  },\n  emSize: 14,\n  ignoredDomTags: [],\n  ignoredStyles: [],\n  baseStyle: { fontSize: 14 },\n  tagsStyles: {},\n  classesStyles: {},\n  enableUserAgentStyles: true,\n  enableCSSInlineProcessing: true,\n  customHTMLElementModels: {},\n  fallbackFonts: defaultFallbackFonts,\n  systemFonts: defaultSystemFonts\n};\n\n/**\n * Use the ambient transient render engine.\n *\n * @returns The ambient transient render engine.\n *\n * @public\n */\nexport function useAmbientTRenderEngine() {\n  const engine = React.useContext(TRenderEngineContext);\n  if (\n    typeof __DEV__ === 'boolean' &&\n    __DEV__ &&\n    engine === defaultTRenderEngine\n  ) {\n    console.error('TRenderEngineProvider is missing in the render tree.');\n  }\n  return engine;\n}\n\n/**\n * A react component to share a {@link TRenderEngine} instance across different\n * rendered contents via {@link RenderHTMLSource}. This can significantly enhance\n * performance in applications with potentially dozens or hundreds of distinct\n * rendered snippets such as chat apps.\n *\n * @param props - Pass engine config here.\n */\nexport default function TRenderEngineProvider({\n  children,\n  ...config\n}: PropsWithChildren<TRenderEngineConfig>): ReactElement {\n  const engine = useTRenderEngine(config);\n  return (\n    <TRenderEngineContext.Provider value={engine}>\n      {children}\n    </TRenderEngineContext.Provider>\n  );\n}\n\n/**\n * @ignore\n */\nTRenderEngineProvider.defaultProps = defaultTRenderEngineProviderProps;\n\n/**\n * @ignore\n */\nTRenderEngineProvider.propTypes = tRenderEngineProviderPropTypes;\n"]},"metadata":{},"sourceType":"script"}