{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"key\",\"routeNames\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import checkDuplicateRouteNames from\"./checkDuplicateRouteNames\";import checkSerializable from\"./checkSerializable\";import{NOT_INITIALIZED_ERROR}from\"./createNavigationContainerRef\";import EnsureSingleNavigator from\"./EnsureSingleNavigator\";import findFocusedRoute from\"./findFocusedRoute\";import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationContainerRefContext from\"./NavigationContainerRefContext\";import NavigationContext from\"./NavigationContext\";import NavigationRouteContext from\"./NavigationRouteContext\";import NavigationStateContext from\"./NavigationStateContext\";import UnhandledActionContext from\"./UnhandledActionContext\";import useChildListeners from\"./useChildListeners\";import useEventEmitter from\"./useEventEmitter\";import useKeyedChildListeners from\"./useKeyedChildListeners\";import useOptionsGetters from\"./useOptionsGetters\";import{ScheduleUpdateContext}from\"./useScheduleUpdate\";import useSyncState from\"./useSyncState\";var serializableWarnings=[];var duplicateNameWarnings=[];var getPartialState=function getPartialState(state){if(state===undefined){return;}var key=state.key,routeNames=state.routeNames,partialState=_objectWithoutProperties(state,_excluded);return _objectSpread(_objectSpread({},partialState),{},{stale:true,routes:state.routes.map(function(route){if(route.state===undefined){return route;}return _objectSpread(_objectSpread({},route),{},{state:getPartialState(route.state)});})});};var BaseNavigationContainer=React.forwardRef(function BaseNavigationContainer(_ref,ref){var initialState=_ref.initialState,onStateChange=_ref.onStateChange,onUnhandledAction=_ref.onUnhandledAction,independent=_ref.independent,children=_ref.children;var parent=React.useContext(NavigationStateContext);if(!parent.isDefault&&!independent){throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");}var _useSyncState=useSyncState(function(){return getPartialState(initialState==null?undefined:initialState);}),_useSyncState2=_slicedToArray(_useSyncState,5),state=_useSyncState2[0],getState=_useSyncState2[1],setState=_useSyncState2[2],scheduleUpdate=_useSyncState2[3],flushUpdates=_useSyncState2[4];var isFirstMountRef=React.useRef(true);var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var _useChildListeners=useChildListeners(),listeners=_useChildListeners.listeners,addListener=_useChildListeners.addListener;var _useKeyedChildListene=useKeyedChildListeners(),keyedListeners=_useKeyedChildListene.keyedListeners,addKeyedListener=_useKeyedChildListene.addKeyedListener;var dispatch=React.useCallback(function(action){if(listeners.focus[0]==null){console.error(NOT_INITIALIZED_ERROR);}else{listeners.focus[0](function(navigation){return navigation.dispatch(action);});}},[listeners.focus]);var canGoBack=React.useCallback(function(){if(listeners.focus[0]==null){return false;}var _listeners$focus$=listeners.focus[0](function(navigation){return navigation.canGoBack();}),result=_listeners$focus$.result,handled=_listeners$focus$.handled;if(handled){return result;}else{return false;}},[listeners.focus]);var resetRoot=React.useCallback(function(state){var _state$key,_keyedListeners$getSt,_keyedListeners$getSt2;var target=(_state$key=state===null||state===void 0?void 0:state.key)!==null&&_state$key!==void 0?_state$key:(_keyedListeners$getSt=(_keyedListeners$getSt2=keyedListeners.getState).root)===null||_keyedListeners$getSt===void 0?void 0:_keyedListeners$getSt.call(_keyedListeners$getSt2).key;if(target==null){console.error(NOT_INITIALIZED_ERROR);}else{listeners.focus[0](function(navigation){return navigation.dispatch(_objectSpread(_objectSpread({},CommonActions.reset(state)),{},{target:target}));});}},[keyedListeners.getState,listeners.focus]);var getRootState=React.useCallback(function(){var _keyedListeners$getSt3,_keyedListeners$getSt4;return(_keyedListeners$getSt3=(_keyedListeners$getSt4=keyedListeners.getState).root)===null||_keyedListeners$getSt3===void 0?void 0:_keyedListeners$getSt3.call(_keyedListeners$getSt4);},[keyedListeners.getState]);var getCurrentRoute=React.useCallback(function(){var state=getRootState();if(state==null){return undefined;}var route=findFocusedRoute(state);return route;},[getRootState]);var emitter=useEventEmitter();var _useOptionsGetters=useOptionsGetters({}),addOptionsGetter=_useOptionsGetters.addOptionsGetter,getCurrentOptions=_useOptionsGetters.getCurrentOptions;var navigation=React.useMemo(function(){return _objectSpread(_objectSpread(_objectSpread({},Object.keys(CommonActions).reduce(function(acc,name){acc[name]=function(){return dispatch(CommonActions[name].apply(CommonActions,arguments));};return acc;},{})),emitter.create('root')),{},{dispatch:dispatch,resetRoot:resetRoot,isFocused:function isFocused(){return true;},canGoBack:canGoBack,getParent:function getParent(){return undefined;},getState:function getState(){return stateRef.current;},getRootState:getRootState,getCurrentRoute:getCurrentRoute,getCurrentOptions:getCurrentOptions,isReady:function isReady(){return listeners.focus[0]!=null;}});},[canGoBack,dispatch,emitter,getCurrentOptions,getCurrentRoute,getRootState,listeners.focus,resetRoot]);React.useImperativeHandle(ref,function(){return navigation;},[navigation]);var onDispatchAction=React.useCallback(function(action,noop){emitter.emit({type:'__unsafe_action__',data:{action:action,noop:noop,stack:stackRef.current}});},[emitter]);var lastEmittedOptionsRef=React.useRef();var onOptionsChange=React.useCallback(function(options){if(lastEmittedOptionsRef.current===options){return;}lastEmittedOptionsRef.current=options;emitter.emit({type:'options',data:{options:options}});},[emitter]);var stackRef=React.useRef();var builderContext=React.useMemo(function(){return{addListener:addListener,addKeyedListener:addKeyedListener,onDispatchAction:onDispatchAction,onOptionsChange:onOptionsChange,stackRef:stackRef};},[addListener,addKeyedListener,onDispatchAction,onOptionsChange]);var scheduleContext=React.useMemo(function(){return{scheduleUpdate:scheduleUpdate,flushUpdates:flushUpdates};},[scheduleUpdate,flushUpdates]);var isInitialRef=React.useRef(true);var getIsInitial=React.useCallback(function(){return isInitialRef.current;},[]);var context=React.useMemo(function(){return{state:state,getState:getState,setState:setState,getKey:getKey,setKey:setKey,getIsInitial:getIsInitial,addOptionsGetter:addOptionsGetter};},[state,getState,setState,getKey,setKey,getIsInitial,addOptionsGetter]);var onStateChangeRef=React.useRef(onStateChange);var stateRef=React.useRef(state);React.useEffect(function(){isInitialRef.current=false;onStateChangeRef.current=onStateChange;stateRef.current=state;});React.useEffect(function(){var hydratedState=getRootState();if(\"production\"!=='production'){if(hydratedState!==undefined){var serializableResult=checkSerializable(hydratedState);if(!serializableResult.serializable){var location=serializableResult.location,reason=serializableResult.reason;var path='';var pointer=hydratedState;var params=false;for(var i=0;i<location.length;i++){var curr=location[i];var prev=location[i-1];pointer=pointer[curr];if(!params&&curr==='state'){continue;}else if(!params&&curr==='routes'){if(path){path+=' > ';}}else if(!params&&typeof curr==='number'&&prev==='routes'){var _pointer;path+=(_pointer=pointer)===null||_pointer===void 0?void 0:_pointer.name;}else if(!params){path+=\" > \"+curr;params=true;}else{if(typeof curr==='number'||/^[0-9]+$/.test(curr)){path+=\"[\"+curr+\"]\";}else if(/^[a-z$_]+$/i.test(curr)){path+=\".\"+curr;}else{path+=\"[\"+JSON.stringify(curr)+\"]\";}}}var message=\"Non-serializable values were found in the navigation state. Check:\\n\\n\"+path+\" (\"+reason+\")\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\";if(!serializableWarnings.includes(message)){serializableWarnings.push(message);console.warn(message);}}var duplicateRouteNamesResult=checkDuplicateRouteNames(hydratedState);if(duplicateRouteNamesResult.length){var _message=\"Found screens with the same name nested inside one another. Check:\\n\"+duplicateRouteNamesResult.map(function(locations){return\"\\n\"+locations.join(', ');})+\"\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.\";if(!duplicateNameWarnings.includes(_message)){duplicateNameWarnings.push(_message);console.warn(_message);}}}}emitter.emit({type:'state',data:{state:state}});if(!isFirstMountRef.current&&onStateChangeRef.current){onStateChangeRef.current(hydratedState);}isFirstMountRef.current=false;},[getRootState,emitter,state]);var defaultOnUnhandledAction=React.useCallback(function(action){if(\"production\"==='production'){return;}var payload=action.payload;var message=\"The action '\"+action.type+\"'\"+(payload?\" with payload \"+JSON.stringify(action.payload):'')+\" was not handled by any navigator.\";switch(action.type){case'NAVIGATE':case'PUSH':case'REPLACE':case'JUMP_TO':if(payload!==null&&payload!==void 0&&payload.name){message+=\"\\n\\nDo you have a screen named '\"+payload.name+\"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\";}else{message+=\"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";}break;case'GO_BACK':case'POP':case'POP_TO_TOP':message+=\"\\n\\nIs there any screen to go back to?\";break;case'OPEN_DRAWER':case'CLOSE_DRAWER':case'TOGGLE_DRAWER':message+=\"\\n\\nIs your screen inside a Drawer navigator?\";break;}message+=\"\\n\\nThis is a development-only warning and won't be shown in production.\";console.error(message);},[]);var element=React.createElement(NavigationContainerRefContext.Provider,{value:navigation},React.createElement(ScheduleUpdateContext.Provider,{value:scheduleContext},React.createElement(NavigationBuilderContext.Provider,{value:builderContext},React.createElement(NavigationStateContext.Provider,{value:context},React.createElement(UnhandledActionContext.Provider,{value:onUnhandledAction!==null&&onUnhandledAction!==void 0?onUnhandledAction:defaultOnUnhandledAction},React.createElement(EnsureSingleNavigator,null,children))))));if(independent){element=React.createElement(NavigationRouteContext.Provider,{value:undefined},React.createElement(NavigationContext.Provider,{value:undefined},element));}return element;});export default BaseNavigationContainer;","map":{"version":3,"mappings":"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","names":["CommonActions","React","checkDuplicateRouteNames","checkSerializable","NOT_INITIALIZED_ERROR","EnsureSingleNavigator","findFocusedRoute","NavigationBuilderContext","NavigationContainerRefContext","NavigationContext","NavigationRouteContext","NavigationStateContext","UnhandledActionContext","useChildListeners","useEventEmitter","useKeyedChildListeners","useOptionsGetters","ScheduleUpdateContext","useSyncState","serializableWarnings","duplicateNameWarnings","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","forwardRef","ref","initialState","onStateChange","onUnhandledAction","independent","children","parent","useContext","isDefault","Error","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","listeners","addListener","keyedListeners","addKeyedListener","dispatch","action","focus","console","error","navigation","canGoBack","result","handled","resetRoot","target","root","_keyedListeners$getSt","reset","getRootState","_keyedListeners$getSt3","getCurrentRoute","emitter","addOptionsGetter","getCurrentOptions","useMemo","Object","keys","reduce","acc","name","arguments","create","isFocused","getParent","stateRef","isReady","useImperativeHandle","onDispatchAction","noop","emit","type","data","stack","stackRef","lastEmittedOptionsRef","onOptionsChange","options","builderContext","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","hydratedState","process","serializableResult","serializable","location","reason","path","pointer","params","i","length","curr","prev","_pointer","test","JSON","stringify","message","includes","push","warn","duplicateRouteNamesResult","locations","join","defaultOnUnhandledAction","payload","element","Provider","value"],"sources":["BaseNavigationContainer.tsx"],"sourcesContent":["import {\n  CommonActions,\n  InitialState,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport checkDuplicateRouteNames from './checkDuplicateRouteNames';\nimport checkSerializable from './checkSerializable';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport findFocusedRoute from './findFocusedRoute';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport useChildListeners from './useChildListeners';\nimport useEventEmitter from './useEventEmitter';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useSyncState from './useSyncState';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst serializableWarnings: string[] = [];\nconst duplicateNameWarnings: string[] = [];\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef<ParamListBase>>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [state, getState, setState, scheduleUpdate, flushUpdates] =\n      useSyncState<State>(() =>\n        getPartialState(initialState == null ? undefined : initialState)\n      );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = React.useCallback(\n      (\n        action:\n          | NavigationAction\n          | ((state: NavigationState) => NavigationAction)\n      ) => {\n        if (listeners.focus[0] == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) => navigation.dispatch(action));\n        }\n      },\n      [listeners.focus]\n    );\n\n    const canGoBack = React.useCallback(() => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    }, [listeners.focus]);\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) =>\n            navigation.dispatch({\n              ...CommonActions.reset(state),\n              target,\n            })\n          );\n        }\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      const state = getRootState();\n\n      if (state == null) {\n        return undefined;\n      }\n\n      const route = findFocusedRoute(state);\n\n      return route as Route<string> | undefined;\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    const navigation: NavigationContainerRef<ParamListBase> = React.useMemo(\n      () => ({\n        ...Object.keys(CommonActions).reduce<any>((acc, name) => {\n          acc[name] = (...args: any[]) =>\n            // @ts-expect-error: this is ok\n            dispatch(CommonActions[name](...args));\n          return acc;\n        }, {}),\n        ...emitter.create('root'),\n        dispatch,\n        resetRoot,\n        isFocused: () => true,\n        canGoBack,\n        getParent: () => undefined,\n        getState: () => stateRef.current,\n        getRootState,\n        getCurrentRoute,\n        getCurrentOptions,\n        isReady: () => listeners.focus[0] != null,\n      }),\n      [\n        canGoBack,\n        dispatch,\n        emitter,\n        getCurrentOptions,\n        getCurrentRoute,\n        getRootState,\n        listeners.focus,\n        resetRoot,\n      ]\n    );\n\n    React.useImperativeHandle(ref, () => navigation, [navigation]);\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({\n          type: '__unsafe_action__',\n          data: { action, noop, stack: stackRef.current },\n        });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const stackRef = React.useRef<string | undefined>();\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n        stackRef,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n    const stateRef = React.useRef(state);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n      stateRef.current = state;\n    });\n\n    React.useEffect(() => {\n      const hydratedState = getRootState();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (hydratedState !== undefined) {\n          const serializableResult = checkSerializable(hydratedState);\n\n          if (!serializableResult.serializable) {\n            const { location, reason } = serializableResult;\n\n            let path = '';\n            let pointer: Record<any, any> = hydratedState;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n\n          const duplicateRouteNamesResult =\n            checkDuplicateRouteNames(hydratedState);\n\n          if (duplicateRouteNamesResult.length) {\n            const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(\n              (locations) => `\\n${locations.join(', ')}`\n            )}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n\n            if (!duplicateNameWarnings.includes(message)) {\n              duplicateNameWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(hydratedState);\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <NavigationContainerRefContext.Provider value={navigation}>\n        <ScheduleUpdateContext.Provider value={scheduleContext}>\n          <NavigationBuilderContext.Provider value={builderContext}>\n            <NavigationStateContext.Provider value={context}>\n              <UnhandledActionContext.Provider\n                value={onUnhandledAction ?? defaultOnUnhandledAction}\n              >\n                <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n              </UnhandledActionContext.Provider>\n            </NavigationStateContext.Provider>\n          </NavigationBuilderContext.Provider>\n        </ScheduleUpdateContext.Provider>\n      </NavigationContainerRefContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n"]},"metadata":{},"sourceType":"module"}