{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"style\",\"isIncrement\",\"disablitityCheck\",\"_active\",\"_disabled\",\"isDisabled\",\"accessibilityLabel\",\"pressHandler\",\"iconColor\"],_excluded3=[\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import{VStack,Box}from\"../../primitives\";import{useThemeProps}from\"../../../hooks\";import{NumberInputContext}from\"./Context\";import{ChevronUpIcon,ChevronDownIcon}from\"../../primitives/Icon/Icons\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";export var NBStepper=React.forwardRef(function(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _useThemeProps=useThemeProps('NumberInputStepper',props),style=_useThemeProps.style,isIncrement=_useThemeProps.isIncrement,disablitityCheck=_useThemeProps.disablitityCheck,_active=_useThemeProps._active,_disabled=_useThemeProps._disabled,isDisabled=_useThemeProps.isDisabled,accessibilityLabel=_useThemeProps.accessibilityLabel,pressHandler=_useThemeProps.pressHandler,iconColor=_useThemeProps.iconColor,newProps=_objectWithoutProperties(_useThemeProps,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(TouchableOpacity,{activeOpacity:0.2,disabled:disablitityCheck||isDisabled,onPress:pressHandler,accessible:true,accessibilityLabel:accessibilityLabel,ref:ref},React.createElement(Box,_extends({},newProps,_active,disablitityCheck||isDisabled?_disabled:{},{borderColor:\"transparent\",style:style,opacity:disablitityCheck||isDisabled?0.4:1},Platform.OS==='web'?{disabled:disablitityCheck||isDisabled,cursor:disablitityCheck||isDisabled?'not-allowed':'auto'}:{}),children||isIncrement?React.createElement(ChevronUpIcon,{color:iconColor}):React.createElement(ChevronDownIcon,{color:iconColor})));});var NumberInputStepper=function NumberInputStepper(_ref2,ref){var children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded3);var _React$useContext=React.useContext(NumberInputContext),numberInputStepper=_React$useContext.numberInputStepper,setNumberInputStepper=_React$useContext.setNumberInputStepper;React.useEffect(function(){!numberInputStepper&&setNumberInputStepper(React.createElement(VStack,_extends({},props,{ref:ref}),children));},[numberInputStepper,setNumberInputStepper,props,children,ref]);return null;};export default React.memo(React.forwardRef(NumberInputStepper));","map":{"version":3,"mappings":"wiBAAA,MAAOA,MAAP,KAAkB,OAAlB,C,0IAEA,OAASC,MAAT,CAAiBC,GAAjB,wBACA,OAASC,aAAT,sBAEA,OAASC,kBAAT,iBACA,OAASC,aAAT,CAAwBC,eAAxB,mCACA,OAASC,qBAAT,4CAEA,MAAO,IAAMC,UAAS,CAAGR,KAAK,CAACS,UAANT,CACvB,cAA8BU,GAA9B,CAA4C,IAAzCC,SAAyC,MAAzCA,QAAyC,CAA5BC,KAA4B,0CAC1C,mBAWIT,aAAa,CAAC,oBAAD,CAAuBS,KAAvB,CAXjB,CACEC,KADF,gBACEA,KADF,CAEEC,WAFF,gBAEEA,WAFF,CAGEC,gBAHF,gBAGEA,gBAHF,CAIEC,OAJF,gBAIEA,OAJF,CAKEC,SALF,gBAKEA,SALF,CAMEC,UANF,gBAMEA,UANF,CAOEC,kBAPF,gBAOEA,kBAPF,CAQEC,YARF,gBAQEA,YARF,CASEC,SATF,gBASEA,SATF,CAUKC,QAVL,qDAaA,GAAIf,qBAAqB,CAACK,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACEZ,qBAACuB,gBAAD,EACEC,aAAa,CAAE,GADjB,CAEEC,QAAQ,CAAEV,gBAAgB,EAAIG,UAFhC,CAGEQ,OAAO,CAAEN,YAHX,CAIEO,UAAU,KAJZ,CAKER,kBAAkB,CAAEA,kBALtB,CAMET,GAAG,CAAEA,GANP,EAQEV,oBAACE,GAAD,aACMoB,QADN,CAEMN,OAFN,CAGOD,gBAAgB,EAAIG,UAApBH,CAAiCE,SAAjCF,CAA6C,EAHpD,EAIEa,WAAW,CAAC,aAJd,CAKEf,KAAK,CAAEA,KALT,CAMEgB,OAAO,CAAEd,gBAAgB,EAAIG,UAApBH,CAAiC,GAAjCA,CAAuC,CANlD,EAOOe,QAAQ,CAACC,EAATD,GAAgB,KAAhBA,CACD,CACEL,QAAQ,CAAEV,gBAAgB,EAAIG,UADhC,CAEEc,MAAM,CAAEjB,gBAAgB,EAAIG,UAApBH,CAAiC,aAAjCA,CAAiD,MAF3D,CADCe,CAKD,EAZN,EAcGnB,QAAQ,EAAIG,WAAZH,CACCX,oBAACK,aAAD,EAAe4B,KAAK,CAAEZ,SAAtB,EADDV,CAGCX,oBAACM,eAAD,EAAiB2B,KAAK,CAAEZ,SAAxB,EAjBJ,CARF,CADF,CAlBqB,EAAlB,CAoDP,GAAMa,mBAAkB,CAAG,QAArBA,mBAAqB,OAEzBxB,GAFyB,CAGtB,IAFDC,SAEC,OAFDA,QAEC,CAFYC,KAEZ,4CACH,sBAIyBZ,KAAK,CAACmC,UAANnC,CAAiBI,kBAAjBJ,CAJzB,CAEEoC,kBAFF,mBAEEA,kBAFF,CAGEC,qBAHF,mBAGEA,qBAHF,CAMArC,KAAK,CAACsC,SAANtC,CAAgB,UAAM,CACpB,CAACoC,kBAAD,EACEC,qBAAqB,CACnBrC,oBAACC,MAAD,aAAYW,KAAZ,EAAmBF,GAAG,CAAEA,GAAxB,GACGC,QADH,CADmB,CADvB,CADF,EAOG,CAACyB,kBAAD,CAAqBC,qBAArB,CAA4CzB,KAA5C,CAAmDD,QAAnD,CAA6DD,GAA7D,CAPHV,EAQA,MAAO,KAAP,CAlBF,EAqBA,cAAeA,MAAK,CAACuC,IAANvC,CAAWA,KAAK,CAACS,UAANT,CAAiBkC,kBAAjBlC,CAAXA,CAAf","names":["React","VStack","Box","useThemeProps","NumberInputContext","ChevronUpIcon","ChevronDownIcon","useHasResponsiveProps","NBStepper","forwardRef","ref","children","props","style","isIncrement","disablitityCheck","_active","_disabled","isDisabled","accessibilityLabel","pressHandler","iconColor","newProps","TouchableOpacity","activeOpacity","disabled","onPress","accessible","borderColor","opacity","Platform","OS","cursor","color","NumberInputStepper","useContext","numberInputStepper","setNumberInputStepper","useEffect","memo"],"sources":["NumberInputStepper.tsx"],"sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { VStack, Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { INumberInputSteppersProps, INumberInputContext } from './types';\nimport { NumberInputContext } from './Context';\nimport { ChevronUpIcon, ChevronDownIcon } from '../../primitives/Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const NBStepper = React.forwardRef(\n  ({ children, ...props }: any, ref?: any) => {\n    const {\n      style,\n      isIncrement,\n      disablitityCheck,\n      _active,\n      _disabled,\n      isDisabled,\n      accessibilityLabel,\n      pressHandler,\n      iconColor,\n      ...newProps\n    } = useThemeProps('NumberInputStepper', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={0.2}\n        disabled={disablitityCheck || isDisabled}\n        onPress={pressHandler}\n        accessible\n        accessibilityLabel={accessibilityLabel}\n        ref={ref}\n      >\n        <Box\n          {...newProps}\n          {..._active}\n          {...(disablitityCheck || isDisabled ? _disabled : {})}\n          borderColor=\"transparent\"\n          style={style}\n          opacity={disablitityCheck || isDisabled ? 0.4 : 1}\n          {...(Platform.OS === 'web'\n            ? {\n                disabled: disablitityCheck || isDisabled,\n                cursor: disablitityCheck || isDisabled ? 'not-allowed' : 'auto',\n              }\n            : {})}\n        >\n          {children || isIncrement ? (\n            <ChevronUpIcon color={iconColor} />\n          ) : (\n            <ChevronDownIcon color={iconColor} />\n          )}\n        </Box>\n      </TouchableOpacity>\n    );\n  }\n);\n\nconst NumberInputStepper = (\n  { children, ...props }: INumberInputSteppersProps,\n  ref?: any\n) => {\n  const {\n    //@ts-ignore\n    numberInputStepper,\n    setNumberInputStepper,\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  React.useEffect(() => {\n    !numberInputStepper &&\n      setNumberInputStepper(\n        <VStack {...props} ref={ref}>\n          {children}\n        </VStack>\n      );\n  }, [numberInputStepper, setNumberInputStepper, props, children, ref]);\n  return null;\n};\n\nexport default React.memo(React.forwardRef(NumberInputStepper));\n"]},"metadata":{},"sourceType":"module"}