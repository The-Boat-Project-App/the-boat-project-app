{"ast":null,"code":"import*as React from'react';var NavigationContent=function NavigationContent(_ref){var render=_ref.render,children=_ref.children;return render(children);};export default function useComponent(render){var renderRef=React.useRef(render);renderRef.current=render;React.useEffect(function(){renderRef.current=null;});return React.useRef(function(_ref2){var children=_ref2.children;var render=renderRef.current;if(render===null){throw new Error('The returned component must be rendered in the same render phase as the hook.');}return React.createElement(NavigationContent,{render:render},children);}).current;}","map":{"version":3,"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CASA,GAAMC,kBAAiB,CAAG,QAApBA,kBAAoB,MAAiC,IAA9BC,OAA8B,MAA9BA,MAA8B,CAAtBC,QAAsB,MAAtBA,QAAsB,CACzD,MAAOD,OAAM,CAACC,QAAD,CAAb,CADF,EAIA,cAAe,SAASC,aAAT,CAAsBF,MAAtB,CAAsC,CACnD,GAAMG,UAAS,CAAGL,KAAK,CAACM,MAANN,CAA4BE,MAA5BF,CAAlB,CAKAK,SAAS,CAACE,OAAVF,CAAoBH,MAApBG,CAEAL,KAAK,CAACQ,SAANR,CAAgB,UAAM,CACpBK,SAAS,CAACE,OAAVF,CAAoB,IAApBA,CADF,GAIA,MAAOL,MAAK,CAACM,MAANN,CAAa,eAAiD,IAA9CG,SAA8C,OAA9CA,QAA8C,CACnE,GAAMD,OAAM,CAAGG,SAAS,CAACE,OAAzB,CAEA,GAAIL,MAAM,GAAK,IAAf,CAAqB,CACnB,KAAM,IAAIO,MAAJ,CACJ,+EADI,CAAN,CAGD,CAED,MAAOT,qBAACC,iBAAD,EAAmBC,MAAM,CAAEA,MAA3B,EAAoCC,QAApC,CAAP,CATK,GAUJI,OAVH,CAWD","names":["React","NavigationContent","render","children","useComponent","renderRef","useRef","current","useEffect","Error"],"sources":["useComponent.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Render = (children: React.ReactNode) => JSX.Element;\n\ntype Props = {\n  render: Render;\n  children: React.ReactNode;\n};\n\nconst NavigationContent = ({ render, children }: Props) => {\n  return render(children);\n};\n\nexport default function useComponent(render: Render) {\n  const renderRef = React.useRef<Render | null>(render);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  renderRef.current = render;\n\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n\n  return React.useRef(({ children }: { children: React.ReactNode }) => {\n    const render = renderRef.current;\n\n    if (render === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    return <NavigationContent render={render}>{children}</NavigationContent>;\n  }).current;\n}\n"]},"metadata":{},"sourceType":"module"}