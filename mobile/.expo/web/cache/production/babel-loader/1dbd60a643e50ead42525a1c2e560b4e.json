{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";var _excluded=[\"children\",\"screenListeners\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import{isValidElementType}from'react-is';import Group from\"./Group\";import isArrayEqual from\"./isArrayEqual\";import isRecordEqual from\"./isRecordEqual\";import NavigationHelpersContext from\"./NavigationHelpersContext\";import NavigationRouteContext from\"./NavigationRouteContext\";import NavigationStateContext from\"./NavigationStateContext\";import PreventRemoveProvider from\"./PreventRemoveProvider\";import Screen from\"./Screen\";import{PrivateValueStore}from\"./types\";import useChildListeners from\"./useChildListeners\";import useComponent from\"./useComponent\";import useCurrentRender from\"./useCurrentRender\";import useDescriptors from\"./useDescriptors\";import useEventEmitter from\"./useEventEmitter\";import useFocusedListenersChildrenAdapter from\"./useFocusedListenersChildrenAdapter\";import useFocusEvents from\"./useFocusEvents\";import useKeyedChildListeners from\"./useKeyedChildListeners\";import useNavigationHelpers from\"./useNavigationHelpers\";import useOnAction from\"./useOnAction\";import useOnGetState from\"./useOnGetState\";import useOnRouteFocus from\"./useOnRouteFocus\";import useRegisterNavigator from\"./useRegisterNavigator\";import useScheduleUpdate from\"./useScheduleUpdate\";PrivateValueStore;var isValidKey=function isValidKey(key){return key===undefined||typeof key==='string'&&key!=='';};var getRouteConfigsFromChildren=function getRouteConfigsFromChildren(children,groupKey,groupOptions){var configs=React.Children.toArray(children).reduce(function(acc,child){var _child$type,_child$props;if(React.isValidElement(child)){if(child.type===Screen){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the screen '\"+child.props.name+\"'. It must be a non-empty string or 'undefined'.\");}acc.push({keys:[groupKey,child.props.navigationKey],options:groupOptions,props:child.props});return acc;}if(child.type===React.Fragment||child.type===Group){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the group. It must be a non-empty string or 'undefined'.\");}acc.push.apply(acc,_toConsumableArray(getRouteConfigsFromChildren(child.props.children,child.props.navigationKey,child.type!==Group?groupOptions:groupOptions!=null?[].concat(_toConsumableArray(groupOptions),[child.props.screenOptions]):[child.props.screenOptions])));return acc;}}throw new Error(\"A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found \"+(React.isValidElement(child)?\"'\"+(typeof child.type==='string'?child.type:(_child$type=child.type)===null||_child$type===void 0?void 0:_child$type.name)+\"'\"+((_child$props=child.props)!==null&&_child$props!==void 0&&_child$props.name?\" for the screen '\"+child.props.name+\"'\":''):typeof child==='object'?JSON.stringify(child):\"'\"+String(child)+\"'\")+\"). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.\");},[]);if(\"production\"!=='production'){configs.forEach(function(config){var _config$props=config.props,name=_config$props.name,children=_config$props.children,component=_config$props.component,getComponent=_config$props.getComponent;if(typeof name!=='string'||!name){throw new Error(\"Got an invalid name (\"+JSON.stringify(name)+\") for the screen. It must be a non-empty string.\");}if(children!=null||component!==undefined||getComponent!==undefined){if(children!=null&&component!==undefined){throw new Error(\"Got both 'component' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&getComponent!==undefined){throw new Error(\"Got both 'getComponent' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(component!==undefined&&getComponent!==undefined){throw new Error(\"Got both 'component' and 'getComponent' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&typeof children!=='function'){throw new Error(\"Got an invalid value for 'children' prop for the screen '\"+name+\"'. It must be a function returning a React Element.\");}if(component!==undefined&&!isValidElementType(component)){throw new Error(\"Got an invalid value for 'component' prop for the screen '\"+name+\"'. It must be a valid React Component.\");}if(getComponent!==undefined&&typeof getComponent!=='function'){throw new Error(\"Got an invalid value for 'getComponent' prop for the screen '\"+name+\"'. It must be a function returning a React Component.\");}if(typeof component==='function'){if(component.name==='component'){console.warn(\"Looks like you're passing an inline function for 'component' prop for the screen '\"+name+\"' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.\");}else if(/^[a-z]/.test(component.name)){console.warn(\"Got a component with the name '\"+component.name+\"' for the screen '\"+name+\"'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.\");}}}else{throw new Error(\"Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '\"+name+\"'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.\");}});}return configs;};export default function useNavigationBuilder(createRouter,options){var navigatorKey=useRegisterNavigator();var route=React.useContext(NavigationRouteContext);var children=options.children,screenListeners=options.screenListeners,rest=_objectWithoutProperties(options,_excluded);var _React$useRef=React.useRef(createRouter(_objectSpread(_objectSpread({},rest),route!==null&&route!==void 0&&route.params&&route.params.state==null&&route.params.initial!==false&&typeof route.params.screen==='string'?{initialRouteName:route.params.screen}:null))),router=_React$useRef.current;var routeConfigs=getRouteConfigsFromChildren(children);var screens=routeConfigs.reduce(function(acc,config){if(config.props.name in acc){throw new Error(\"A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '\"+config.props.name+\"')\");}acc[config.props.name]=config;return acc;},{});var routeNames=routeConfigs.map(function(config){return config.props.name;});var routeKeyList=routeNames.reduce(function(acc,curr){acc[curr]=screens[curr].keys.map(function(key){return key!==null&&key!==void 0?key:'';}).join(':');return acc;},{});var routeParamList=routeNames.reduce(function(acc,curr){var initialParams=screens[curr].props.initialParams;acc[curr]=initialParams;return acc;},{});var routeGetIdList=routeNames.reduce(function(acc,curr){return Object.assign(acc,_defineProperty({},curr,screens[curr].props.getId));},{});if(!routeNames.length){throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");}var isStateValid=React.useCallback(function(state){return state.type===undefined||state.type===router.type;},[router.type]);var isStateInitialized=React.useCallback(function(state){return state!==undefined&&state.stale===false&&isStateValid(state);},[isStateValid]);var _React$useContext=React.useContext(NavigationStateContext),currentState=_React$useContext.state,getCurrentState=_React$useContext.getState,setCurrentState=_React$useContext.setState,setKey=_React$useContext.setKey,getKey=_React$useContext.getKey,getIsInitial=_React$useContext.getIsInitial;var stateCleanedUp=React.useRef(false);var cleanUpState=React.useCallback(function(){setCurrentState(undefined);stateCleanedUp.current=true;},[setCurrentState]);var setState=React.useCallback(function(state){if(stateCleanedUp.current){return;}setCurrentState(state);},[setCurrentState]);var _React$useMemo=React.useMemo(function(){var _route$params4;var initialRouteParamList=routeNames.reduce(function(acc,curr){var _route$params,_route$params2,_route$params3;var initialParams=screens[curr].props.initialParams;var initialParamsFromParams=(route===null||route===void 0?void 0:(_route$params=route.params)===null||_route$params===void 0?void 0:_route$params.state)==null&&(route===null||route===void 0?void 0:(_route$params2=route.params)===null||_route$params2===void 0?void 0:_route$params2.initial)!==false&&(route===null||route===void 0?void 0:(_route$params3=route.params)===null||_route$params3===void 0?void 0:_route$params3.screen)===curr?route.params.params:undefined;acc[curr]=initialParams!==undefined||initialParamsFromParams!==undefined?_objectSpread(_objectSpread({},initialParams),initialParamsFromParams):undefined;return acc;},{});if((currentState===undefined||!isStateValid(currentState))&&(route===null||route===void 0?void 0:(_route$params4=route.params)===null||_route$params4===void 0?void 0:_route$params4.state)==null){return[router.getInitialState({routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),true];}else{var _route$params$state,_route$params5;return[router.getRehydratedState((_route$params$state=route===null||route===void 0?void 0:(_route$params5=route.params)===null||_route$params5===void 0?void 0:_route$params5.state)!==null&&_route$params$state!==void 0?_route$params$state:currentState,{routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),false];}},[currentState,router,isStateValid]),_React$useMemo2=_slicedToArray(_React$useMemo,2),initializedState=_React$useMemo2[0],isFirstStateInitialization=_React$useMemo2[1];var previousRouteKeyListRef=React.useRef(routeKeyList);React.useEffect(function(){previousRouteKeyListRef.current=routeKeyList;});var previousRouteKeyList=previousRouteKeyListRef.current;var state=isStateInitialized(currentState)?currentState:initializedState;var nextState=state;if(!isArrayEqual(state.routeNames,routeNames)||!isRecordEqual(routeKeyList,previousRouteKeyList)){nextState=router.getStateForRouteNamesChange(state,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList,routeKeyChanges:Object.keys(routeKeyList).filter(function(name){return previousRouteKeyList.hasOwnProperty(name)&&routeKeyList[name]!==previousRouteKeyList[name];})});}var previousNestedParamsRef=React.useRef(route===null||route===void 0?void 0:route.params);React.useEffect(function(){previousNestedParamsRef.current=route===null||route===void 0?void 0:route.params;},[route===null||route===void 0?void 0:route.params]);if(route!==null&&route!==void 0&&route.params){var previousParams=previousNestedParamsRef.current;var action;if(typeof route.params.state==='object'&&route.params.state!=null&&route.params!==previousParams){action=CommonActions.reset(route.params.state);}else if(typeof route.params.screen==='string'&&(route.params.initial===false&&isFirstStateInitialization||route.params!==previousParams)){action=CommonActions.navigate({name:route.params.screen,params:route.params.params,path:route.params.path});}var updatedState=action?router.getStateForAction(nextState,action,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):null;nextState=updatedState!==null?router.getRehydratedState(updatedState,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):nextState;}var shouldUpdate=state!==nextState;useScheduleUpdate(function(){if(shouldUpdate){setState(nextState);}});state=nextState;React.useEffect(function(){setKey(navigatorKey);if(!getIsInitial()){setState(nextState);}return function(){setTimeout(function(){if(getCurrentState()!==undefined&&getKey()===navigatorKey){cleanUpState();}},0);};},[]);var initializedStateRef=React.useRef();initializedStateRef.current=initializedState;var getState=React.useCallback(function(){var currentState=getCurrentState();return isStateInitialized(currentState)?currentState:initializedStateRef.current;},[getCurrentState,isStateInitialized]);var emitter=useEventEmitter(function(e){var _ref;var routeNames=[];var route;if(e.target){var _route;route=state.routes.find(function(route){return route.key===e.target;});if((_route=route)!==null&&_route!==void 0&&_route.name){routeNames.push(route.name);}}else{route=state.routes[state.index];routeNames.push.apply(routeNames,_toConsumableArray(Object.keys(screens).filter(function(name){var _route2;return((_route2=route)===null||_route2===void 0?void 0:_route2.name)===name;})));}if(route==null){return;}var navigation=descriptors[route.key].navigation;var listeners=(_ref=[]).concat.apply(_ref,_toConsumableArray([screenListeners].concat(_toConsumableArray(routeNames.map(function(name){var listeners=screens[name].props.listeners;return listeners;}))).map(function(listeners){var map=typeof listeners==='function'?listeners({route:route,navigation:navigation}):listeners;return map?Object.keys(map).filter(function(type){return type===e.type;}).map(function(type){return map===null||map===void 0?void 0:map[type];}):undefined;}))).filter(function(cb,i,self){return cb&&self.lastIndexOf(cb)===i;});listeners.forEach(function(listener){return listener===null||listener===void 0?void 0:listener(e);});});useFocusEvents({state:state,emitter:emitter});React.useEffect(function(){emitter.emit({type:'state',data:{state:state}});},[emitter,state]);var _useChildListeners=useChildListeners(),childListeners=_useChildListeners.listeners,addListener=_useChildListeners.addListener;var _useKeyedChildListene=useKeyedChildListeners(),keyedListeners=_useKeyedChildListene.keyedListeners,addKeyedListener=_useKeyedChildListene.addKeyedListener;var onAction=useOnAction({router:router,getState:getState,setState:setState,key:route===null||route===void 0?void 0:route.key,actionListeners:childListeners.action,beforeRemoveListeners:keyedListeners.beforeRemove,routerConfigOptions:{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList},emitter:emitter});var onRouteFocus=useOnRouteFocus({router:router,key:route===null||route===void 0?void 0:route.key,getState:getState,setState:setState});var navigation=useNavigationHelpers({id:options.id,onAction:onAction,getState:getState,emitter:emitter,router:router});useFocusedListenersChildrenAdapter({navigation:navigation,focusedListeners:childListeners.focus});useOnGetState({getState:getState,getStateListeners:keyedListeners.getState});var descriptors=useDescriptors({state:state,screens:screens,navigation:navigation,screenOptions:options.screenOptions,defaultScreenOptions:options.defaultScreenOptions,onAction:onAction,getState:getState,setState:setState,onRouteFocus:onRouteFocus,addListener:addListener,addKeyedListener:addKeyedListener,router:router,emitter:emitter});useCurrentRender({state:state,navigation:navigation,descriptors:descriptors});var NavigationContent=useComponent(function(children){return React.createElement(NavigationHelpersContext.Provider,{value:navigation},React.createElement(PreventRemoveProvider,null,children));});return{state:state,navigation:navigation,descriptors:descriptors,NavigationContent:NavigationContent};}","map":{"version":3,"mappings":"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","names":["CommonActions","React","isValidElementType","Group","isArrayEqual","isRecordEqual","NavigationHelpersContext","NavigationRouteContext","NavigationStateContext","PreventRemoveProvider","Screen","PrivateValueStore","useChildListeners","useComponent","useCurrentRender","useDescriptors","useEventEmitter","useFocusedListenersChildrenAdapter","useFocusEvents","useKeyedChildListeners","useNavigationHelpers","useOnAction","useOnGetState","useOnRouteFocus","useRegisterNavigator","useScheduleUpdate","isValidKey","key","undefined","getRouteConfigsFromChildren","children","groupKey","groupOptions","configs","Children","toArray","reduce","acc","child","isValidElement","type","props","navigationKey","Error","JSON","stringify","name","push","keys","options","Fragment","screenOptions","_child$type","String","process","forEach","config","component","getComponent","console","warn","test","useNavigationBuilder","createRouter","navigatorKey","route","useContext","screenListeners","rest","useRef","params","state","initial","screen","initialRouteName","router","current","routeConfigs","screens","routeNames","map","routeKeyList","curr","join","routeParamList","initialParams","routeGetIdList","Object","assign","getId","length","isStateValid","useCallback","isStateInitialized","stale","currentState","getCurrentState","getState","setCurrentState","setState","setKey","getKey","getIsInitial","stateCleanedUp","cleanUpState","useMemo","initialRouteParamList","initialParamsFromParams","getInitialState","getRehydratedState","_route$params5","initializedState","isFirstStateInitialization","previousRouteKeyListRef","useEffect","previousRouteKeyList","nextState","getStateForRouteNamesChange","routeKeyChanges","filter","hasOwnProperty","previousNestedParamsRef","previousParams","action","reset","navigate","path","updatedState","getStateForAction","shouldUpdate","setTimeout","initializedStateRef","emitter","e","target","routes","find","_route","index","navigation","descriptors","listeners","concat","cb","i","self","lastIndexOf","listener","emit","data","childListeners","addListener","keyedListeners","addKeyedListener","onAction","actionListeners","beforeRemoveListeners","beforeRemove","routerConfigOptions","onRouteFocus","id","focusedListeners","focus","getStateListeners","defaultScreenOptions","NavigationContent","Provider","value"],"sources":["useNavigationBuilder.tsx"],"sourcesContent":["import {\n  CommonActions,\n  DefaultRouterOptions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n  RouterConfigOptions,\n  RouterFactory,\n} from '@react-navigation/routers';\nimport * as React from 'react';\nimport { isValidElementType } from 'react-is';\n\nimport Group from './Group';\nimport isArrayEqual from './isArrayEqual';\nimport isRecordEqual from './isRecordEqual';\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport PreventRemoveProvider from './PreventRemoveProvider';\nimport Screen from './Screen';\nimport {\n  DefaultNavigatorOptions,\n  EventMapBase,\n  EventMapCore,\n  NavigatorScreenParams,\n  PrivateValueStore,\n  RouteConfig,\n} from './types';\nimport useChildListeners from './useChildListeners';\nimport useComponent from './useComponent';\nimport useCurrentRender from './useCurrentRender';\nimport useDescriptors, { ScreenConfigWithParent } from './useDescriptors';\nimport useEventEmitter from './useEventEmitter';\nimport useFocusedListenersChildrenAdapter from './useFocusedListenersChildrenAdapter';\nimport useFocusEvents from './useFocusEvents';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useNavigationHelpers from './useNavigationHelpers';\nimport useOnAction from './useOnAction';\nimport useOnGetState from './useOnGetState';\nimport useOnRouteFocus from './useOnRouteFocus';\nimport useRegisterNavigator from './useRegisterNavigator';\nimport useScheduleUpdate from './useScheduleUpdate';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype NavigatorRoute<State extends NavigationState> = {\n  key: string;\n  params?: NavigatorScreenParams<ParamListBase, State>;\n};\n\nconst isValidKey = (key: unknown) =>\n  key === undefined || (typeof key === 'string' && key !== '');\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = <\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>(\n  children: React.ReactNode,\n  groupKey?: string,\n  groupOptions?: ScreenConfigWithParent<\n    State,\n    ScreenOptions,\n    EventMap\n  >['options']\n) => {\n  const configs = React.Children.toArray(children).reduce<\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>[]\n  >((acc, child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the screen '${\n              child.props.name\n            }'. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        acc.push({\n          keys: [groupKey, child.props.navigationKey],\n          options: groupOptions,\n          props: child.props as RouteConfig<\n            ParamListBase,\n            string,\n            State,\n            ScreenOptions,\n            EventMap\n          >,\n        });\n        return acc;\n      }\n\n      if (child.type === React.Fragment || child.type === Group) {\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the group. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        // When we encounter a fragment or group, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(\n          ...getRouteConfigsFromChildren<State, ScreenOptions, EventMap>(\n            child.props.children,\n            child.props.navigationKey,\n            child.type !== Group\n              ? groupOptions\n              : groupOptions != null\n              ? [...groupOptions, child.props.screenOptions]\n              : [child.props.screenOptions]\n          )\n        );\n        return acc;\n      }\n    }\n\n    throw new Error(\n      `A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${\n        React.isValidElement(child)\n          ? `'${\n              typeof child.type === 'string' ? child.type : child.type?.name\n            }'${\n              child.props?.name ? ` for the screen '${child.props.name}'` : ''\n            }`\n          : typeof child === 'object'\n          ? JSON.stringify(child)\n          : `'${String(child)}'`\n      }). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`\n    );\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach((config) => {\n      const { name, children, component, getComponent } = config.props;\n\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\n          `Got an invalid name (${JSON.stringify(\n            name\n          )}) for the screen. It must be a non-empty string.`\n        );\n      }\n\n      if (\n        children != null ||\n        component !== undefined ||\n        getComponent !== undefined\n      ) {\n        if (children != null && component !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && typeof children !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`\n          );\n        }\n\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(\n            `Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`\n          );\n        }\n\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`\n          );\n        }\n\n        if (typeof component === 'function') {\n          if (component.name === 'component') {\n            // Inline anonymous functions passed in the `component` prop will have the name of the prop\n            // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n            // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n            console.warn(\n              `Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`\n            );\n          } else if (/^[a-z]/.test(component.name)) {\n            console.warn(\n              `Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`\n            );\n          }\n        }\n      } else {\n        throw new Error(\n          `Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`\n        );\n      }\n    });\n  }\n\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport default function useNavigationBuilder<\n  State extends NavigationState,\n  RouterOptions extends DefaultRouterOptions,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>(\n  createRouter: RouterFactory<State, any, RouterOptions>,\n  options: DefaultNavigatorOptions<\n    ParamListBase,\n    State,\n    ScreenOptions,\n    EventMap\n  > &\n    RouterOptions\n) {\n  const navigatorKey = useRegisterNavigator();\n\n  const route = React.useContext(NavigationRouteContext) as\n    | NavigatorRoute<State>\n    | undefined;\n\n  const { children, screenListeners, ...rest } = options;\n  const { current: router } = React.useRef<Router<State, any>>(\n    createRouter({\n      ...(rest as unknown as RouterOptions),\n      ...(route?.params &&\n      route.params.state == null &&\n      route.params.initial !== false &&\n      typeof route.params.screen === 'string'\n        ? { initialRouteName: route.params.screen }\n        : null),\n    })\n  );\n\n  const routeConfigs = getRouteConfigsFromChildren<\n    State,\n    ScreenOptions,\n    EventMap\n  >(children);\n\n  const screens = routeConfigs.reduce<\n    Record<string, ScreenConfigWithParent<State, ScreenOptions, EventMap>>\n  >((acc, config) => {\n    if (config.props.name in acc) {\n      throw new Error(\n        `A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`\n      );\n    }\n\n    acc[config.props.name] = config;\n    return acc;\n  }, {});\n\n  const routeNames = routeConfigs.map((config) => config.props.name);\n  const routeKeyList = routeNames.reduce<Record<string, React.Key | undefined>>(\n    (acc, curr) => {\n      acc[curr] = screens[curr].keys.map((key) => key ?? '').join(':');\n      return acc;\n    },\n    {}\n  );\n  const routeParamList = routeNames.reduce<Record<string, object | undefined>>(\n    (acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    },\n    {}\n  );\n  const routeGetIdList = routeNames.reduce<\n    RouterConfigOptions['routeGetIdList']\n  >(\n    (acc, curr) =>\n      Object.assign(acc, {\n        [curr]: screens[curr].props.getId,\n      }),\n    {}\n  );\n\n  if (!routeNames.length) {\n    throw new Error(\n      \"Couldn't find any screens for the navigator. Have you defined any screens as its children?\"\n    );\n  }\n\n  const isStateValid = React.useCallback(\n    (state) => state.type === undefined || state.type === router.type,\n    [router.type]\n  );\n\n  const isStateInitialized = React.useCallback(\n    (state) =>\n      state !== undefined && state.stale === false && isStateValid(state),\n    [isStateValid]\n  );\n\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    setKey,\n    getKey,\n    getIsInitial,\n  } = React.useContext(NavigationStateContext);\n\n  const stateCleanedUp = React.useRef(false);\n\n  const cleanUpState = React.useCallback(() => {\n    setCurrentState(undefined);\n    stateCleanedUp.current = true;\n  }, [setCurrentState]);\n\n  const setState = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    },\n    [setCurrentState]\n  );\n\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    const initialRouteParamList = routeNames.reduce<\n      Record<string, object | undefined>\n    >((acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      const initialParamsFromParams =\n        route?.params?.state == null &&\n        route?.params?.initial !== false &&\n        route?.params?.screen === curr\n          ? route.params.params\n          : undefined;\n\n      acc[curr] =\n        initialParams !== undefined || initialParamsFromParams !== undefined\n          ? {\n              ...initialParams,\n              ...initialParamsFromParams,\n            }\n          : undefined;\n\n      return acc;\n    }, {});\n\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if (\n      (currentState === undefined || !isStateValid(currentState)) &&\n      route?.params?.state == null\n    ) {\n      return [\n        router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList,\n        }),\n        true,\n      ];\n    } else {\n      return [\n        router.getRehydratedState(\n          route?.params?.state ?? (currentState as PartialState<State>),\n          {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList,\n          }\n        ),\n        false,\n      ];\n    }\n    // We explicitly don't include routeNames, route.params etc. in the dep list\n    // below. We want to avoid forcing a new state to be calculated in those cases\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n\n  const previousRouteKeyListRef = React.useRef(routeKeyList);\n\n  React.useEffect(() => {\n    previousRouteKeyListRef.current = routeKeyList;\n  });\n\n  const previousRouteKeyList = previousRouteKeyListRef.current;\n\n  let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initalized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedState as State);\n\n  let nextState: State = state;\n\n  if (\n    !isArrayEqual(state.routeNames, routeNames) ||\n    !isRecordEqual(routeKeyList, previousRouteKeyList)\n  ) {\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = router.getStateForRouteNamesChange(state, {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n      routeKeyChanges: Object.keys(routeKeyList).filter(\n        (name) =>\n          previousRouteKeyList.hasOwnProperty(name) &&\n          routeKeyList[name] !== previousRouteKeyList[name]\n      ),\n    });\n  }\n\n  const previousNestedParamsRef = React.useRef(route?.params);\n\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route?.params;\n  }, [route?.params]);\n\n  if (route?.params) {\n    const previousParams = previousNestedParamsRef.current;\n\n    let action: CommonActions.Action | undefined;\n\n    if (\n      typeof route.params.state === 'object' &&\n      route.params.state != null &&\n      route.params !== previousParams\n    ) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (\n      typeof route.params.screen === 'string' &&\n      ((route.params.initial === false && isFirstStateInitialization) ||\n        route.params !== previousParams)\n    ) {\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate({\n        name: route.params.screen,\n        params: route.params.params,\n        path: route.params.path,\n      });\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action\n      ? router.getStateForAction(nextState, action, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : null;\n\n    nextState =\n      updatedState !== null\n        ? router.getRehydratedState(updatedState, {\n            routeNames,\n            routeParamList,\n            routeGetIdList,\n          })\n        : nextState;\n  }\n\n  const shouldUpdate = state !== nextState;\n\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n\n  React.useEffect(() => {\n    setKey(navigatorKey);\n\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      // We do it in a timeout because we need to detect if another navigator mounted in the meantime\n      // For example, if another navigator has started rendering, we should skip cleanup\n      // Otherwise, our cleanup step will cleanup state for the other navigator and re-initialize it\n      setTimeout(() => {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          cleanUpState();\n        }\n      }, 0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // We initialize this ref here to avoid a new getState getting initialized\n  // whenever initializedState changes. We want getState to have access to the\n  // latest initializedState, but don't need it to change when that happens\n  const initializedStateRef = React.useRef<State>();\n  initializedStateRef.current = initializedState;\n\n  const getState = React.useCallback((): State => {\n    const currentState = getCurrentState();\n\n    return isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedStateRef.current as State);\n  }, [getCurrentState, isStateInitialized]);\n\n  const emitter = useEventEmitter<EventMapCore<State>>((e) => {\n    let routeNames = [];\n\n    let route: Route<string> | undefined;\n\n    if (e.target) {\n      route = state.routes.find((route) => route.key === e.target);\n\n      if (route?.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(\n        ...Object.keys(screens).filter((name) => route?.name === name)\n      );\n    }\n\n    if (route == null) {\n      return;\n    }\n\n    const navigation = descriptors[route.key].navigation;\n\n    const listeners = ([] as (((e: any) => void) | undefined)[])\n      .concat(\n        // Get an array of listeners for all screens + common listeners on navigator\n        ...[\n          screenListeners,\n          ...routeNames.map((name) => {\n            const { listeners } = screens[name].props;\n            return listeners;\n          }),\n        ].map((listeners) => {\n          const map =\n            typeof listeners === 'function'\n              ? listeners({ route: route as any, navigation })\n              : listeners;\n\n          return map\n            ? Object.keys(map)\n                .filter((type) => type === e.type)\n                .map((type) => map?.[type])\n            : undefined;\n        })\n      )\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n\n    listeners.forEach((listener) => listener?.(e));\n  });\n\n  useFocusEvents({ state, emitter });\n\n  React.useEffect(() => {\n    emitter.emit({ type: 'state', data: { state } });\n  }, [emitter, state]);\n\n  const { listeners: childListeners, addListener } = useChildListeners();\n\n  const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route?.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n    },\n    emitter,\n  });\n\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route?.key,\n    getState,\n    setState,\n  });\n\n  const navigation = useNavigationHelpers<\n    State,\n    ActionHelpers,\n    NavigationAction,\n    EventMap\n  >({\n    id: options.id,\n    onAction,\n    getState,\n    emitter,\n    router,\n  });\n\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus,\n  });\n\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState,\n  });\n\n  const descriptors = useDescriptors<\n    State,\n    ActionHelpers,\n    ScreenOptions,\n    EventMap\n  >({\n    state,\n    screens,\n    navigation,\n    screenOptions: options.screenOptions,\n    defaultScreenOptions: options.defaultScreenOptions,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    // @ts-expect-error: this should have both core and custom events, but too much work right now\n    emitter,\n  });\n\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors,\n  });\n\n  const NavigationContent = useComponent((children: React.ReactNode) => (\n    <NavigationHelpersContext.Provider value={navigation}>\n      <PreventRemoveProvider>{children}</PreventRemoveProvider>\n    </NavigationHelpersContext.Provider>\n  ));\n\n  return {\n    state,\n    navigation,\n    descriptors,\n    NavigationContent,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}