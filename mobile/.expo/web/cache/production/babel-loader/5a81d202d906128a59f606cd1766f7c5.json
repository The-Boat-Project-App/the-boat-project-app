{"ast":null,"code":"var _global$contexts;import*as React from'react';var contexts='__react_navigation__elements_contexts';global[contexts]=(_global$contexts=global[contexts])!==null&&_global$contexts!==void 0?_global$contexts:new Map();export default function getNamedContext(name,initialValue){var context=global[contexts].get(name);if(context){return context;}context=React.createContext(initialValue);context.displayName=name;global[contexts].set(name,context);return context;}","map":{"version":3,"mappings":"qBAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAEA,GAAMC,SAAQ,CAAG,uCAAjB,CAOAC,MAAM,CAACD,QAAD,CAANC,mBAAmBA,MAAM,CAACD,QAAD,CAAzB,qDAAuC,GAAIE,IAAJ,EAAvCD,CAEA,cAAe,SAASE,gBAAT,CACbC,IADa,CAEbC,YAFa,CAGK,CAClB,GAAIC,QAAO,CAAGL,MAAM,CAACD,QAAD,CAANC,CAAiBM,GAAjBN,CAAqBG,IAArBH,CAAd,CAEA,GAAIK,OAAJ,CAAa,CACX,MAAOA,QAAP,CACD,CAEDA,OAAO,CAAGP,KAAK,CAACS,aAANT,CAAuBM,YAAvBN,CAAVO,CACAA,OAAO,CAACG,WAARH,CAAsBF,IAAtBE,CAEAL,MAAM,CAACD,QAAD,CAANC,CAAiBS,GAAjBT,CAAqBG,IAArBH,CAA2BK,OAA3BL,EAEA,MAAOK,QAAP,CACD","names":["React","contexts","global","Map","getNamedContext","name","initialValue","context","get","createContext","displayName","set"],"sources":["getNamedContext.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst contexts = '__react_navigation__elements_contexts';\n\ndeclare global {\n  var __react_navigation__elements_contexts: Map<string, React.Context<any>>;\n}\n\n// We use a global variable to keep our contexts so that we can reuse same contexts across packages\nglobal[contexts] = global[contexts] ?? new Map<string, React.Context<any>>();\n\nexport default function getNamedContext<T>(\n  name: string,\n  initialValue: T\n): React.Context<T> {\n  let context = global[contexts].get(name);\n\n  if (context) {\n    return context;\n  }\n\n  context = React.createContext<T>(initialValue);\n  context.displayName = name;\n\n  global[contexts].set(name, context);\n\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}