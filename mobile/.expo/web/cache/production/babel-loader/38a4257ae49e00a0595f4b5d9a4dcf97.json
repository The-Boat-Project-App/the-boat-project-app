{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"style\",\"visible\",\"size\"],_excluded2=[\"backgroundColor\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{useTheme}from'@react-navigation/native';import color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";export default function Badge(_ref){var children=_ref.children,style=_ref.style,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,_ref$size=_ref.size,size=_ref$size===void 0?18:_ref$size,rest=_objectWithoutProperties(_ref,_excluded);var _React$useState=React.useState(function(){return new Animated.Value(visible?1:0);}),_React$useState2=_slicedToArray(_React$useState,1),opacity=_React$useState2[0];var _React$useState3=React.useState(visible),_React$useState4=_slicedToArray(_React$useState3,2),rendered=_React$useState4[0],setRendered=_React$useState4[1];var theme=useTheme();React.useEffect(function(){if(!rendered){return;}Animated.timing(opacity,{toValue:visible?1:0,duration:150,useNativeDriver:true}).start(function(_ref2){var finished=_ref2.finished;if(finished&&!visible){setRendered(false);}});return function(){return opacity.stopAnimation();};},[opacity,rendered,visible]);if(!rendered){if(visible){setRendered(true);}else{return null;}}var _ref3=StyleSheet.flatten(style)||{},_ref3$backgroundColor=_ref3.backgroundColor,backgroundColor=_ref3$backgroundColor===void 0?theme.colors.notification:_ref3$backgroundColor,restStyle=_objectWithoutProperties(_ref3,_excluded2);var textColor=color(backgroundColor).isLight()?'black':'white';var borderRadius=size/2;var fontSize=Math.floor(size*3/4);return React.createElement(Animated.Text,_extends({numberOfLines:1,style:[{transform:[{scale:opacity.interpolate({inputRange:[0,1],outputRange:[0.5,1]})}],color:textColor,lineHeight:size-1,height:size,minWidth:size,opacity:opacity,backgroundColor:backgroundColor,fontSize:fontSize,borderRadius:borderRadius},styles.container,restStyle]},rest),children);}var styles=StyleSheet.create({container:{alignSelf:'flex-end',textAlign:'center',paddingHorizontal:4,overflow:'hidden'}});","map":{"version":3,"mappings":"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","names":["useTheme","color","React","Badge","children","style","visible","size","rest","useState","Animated","Value","opacity","rendered","setRendered","theme","useEffect","timing","toValue","duration","useNativeDriver","start","finished","stopAnimation","StyleSheet","flatten","backgroundColor","colors","notification","restStyle","textColor","isLight","borderRadius","fontSize","Math","floor","Text","numberOfLines","transform","scale","interpolate","inputRange","outputRange","lineHeight","height","minWidth","styles","container","create","alignSelf","textAlign","paddingHorizontal","overflow"],"sources":["Badge.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport color from 'color';\nimport * as React from 'react';\nimport { Animated, StyleProp, StyleSheet, TextStyle } from 'react-native';\n\ntype Props = {\n  /**\n   * Whether the badge is visible\n   */\n  visible: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  /**\n   * Style object for the tab bar container.\n   */\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function Badge({\n  children,\n  style,\n  visible = true,\n  size = 18,\n  ...rest\n}: Props) {\n  const [opacity] = React.useState(() => new Animated.Value(visible ? 1 : 0));\n  const [rendered, setRendered] = React.useState(visible);\n\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (!rendered) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished && !visible) {\n        setRendered(false);\n      }\n    });\n\n    return () => opacity.stopAnimation();\n  }, [opacity, rendered, visible]);\n\n  if (!rendered) {\n    if (visible) {\n      setRendered(true);\n    } else {\n      return null;\n    }\n  }\n\n  // @ts-expect-error: backgroundColor definitely exists\n  const { backgroundColor = theme.colors.notification, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor = color(backgroundColor).isLight() ? 'black' : 'white';\n\n  const borderRadius = size / 2;\n  const fontSize = Math.floor((size * 3) / 4);\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          transform: [\n            {\n              scale: opacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0.5, 1],\n              }),\n            },\n          ],\n          color: textColor,\n          lineHeight: size - 1,\n          height: size,\n          minWidth: size,\n          opacity,\n          backgroundColor,\n          fontSize,\n          borderRadius,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}