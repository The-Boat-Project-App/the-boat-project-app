{"ast":null,"code":"\"use strict\";var _slicedToArray=require(\"@babel/runtime/helpers/slicedToArray\");var _asyncToGenerator=require(\"@babel/runtime/helpers/asyncToGenerator\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=SourceLoaderUri;var _react=_interopRequireWildcard(require(\"react\"));var _RenderTTree=_interopRequireDefault(require(\"./RenderTTree\"));var _sourceLoaderContext=_interopRequireDefault(require(\"./context/sourceLoaderContext\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var ERROR_STATE={error:true,resolvedHTML:null};function loadHTMLResource(_x,_x2){return _loadHTMLResource.apply(this,arguments);}function _loadHTMLResource(){_loadHTMLResource=_asyncToGenerator(function*(uri,_ref){var body=_ref.body,headers=_ref.headers,method=_ref.method;var response=yield fetch(uri,{body:body,headers:headers,method:method});if(response.ok){var html=yield response.text();return{resolvedHTML:html,error:false};}return ERROR_STATE;});return _loadHTMLResource.apply(this,arguments);}function useUriSourceLoader(_ref2){var source=_ref2.source,onHTMLLoaded=_ref2.onHTMLLoaded;var _ref3=(0,_react.useState)({error:false,resolvedHTML:null}),_ref4=_slicedToArray(_ref3,2),loadState=_ref4[0],setState=_ref4[1];var error=loadState.error;(0,_react.useEffect)(function(){var cancelled=false;if(!error){setState({error:false,resolvedHTML:null});loadHTMLResource(source.uri,{body:source.body,headers:source.headers,method:source.method}).then(function(state){!cancelled&&setState(state);}).catch(function(){!cancelled&&setState(ERROR_STATE);});}return function(){cancelled=true;};},[error,source.uri,source.body,source.headers,source.method]);(0,_react.useEffect)(function(){loadState.resolvedHTML&&(onHTMLLoaded===null||onHTMLLoaded===void 0?void 0:onHTMLLoaded.call(null,loadState.resolvedHTML));},[loadState.resolvedHTML,onHTMLLoaded]);return loadState;}function SourceLoaderUri(props){var _ref5=(0,_react.useContext)(_sourceLoaderContext.default),remoteErrorView=_ref5.remoteErrorView,remoteLoadingView=_ref5.remoteLoadingView;var _useUriSourceLoader=useUriSourceLoader(props),resolvedHTML=_useUriSourceLoader.resolvedHTML,error=_useUriSourceLoader.error;if(error){return remoteErrorView.call(null,props.source);}if(resolvedHTML===null){return remoteLoadingView.call(null,props.source);}return _react.default.createElement(_RenderTTree.default,{document:resolvedHTML,baseUrl:props.source.uri});}","map":{"version":3,"mappings":"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","names":["ERROR_STATE","error","resolvedHTML","loadHTMLResource","uri","body","headers","method","response","fetch","ok","html","text","useUriSourceLoader","source","onHTMLLoaded","loadState","setState","cancelled","then","state","catch","call","SourceLoaderUri","props","sourceLoaderContext","remoteErrorView","remoteLoadingView","React","createElement","RenderTTree","document","baseUrl"],"sources":["SourceLoaderUri.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { HTMLSourceUri } from './shared-types';\nimport { SourceLoaderProps } from './internal-types';\nimport RenderTTree from './RenderTTree';\nimport sourceLoaderContext from './context/sourceLoaderContext';\n\ninterface LoaderInternalState {\n  error: boolean;\n  resolvedHTML: string | null;\n}\n\nconst ERROR_STATE = {\n  error: true,\n  resolvedHTML: null\n};\n\nasync function loadHTMLResource(\n  uri: string,\n  { body, headers, method }: Omit<HTMLSourceUri, 'uri'>\n): Promise<LoaderInternalState> {\n  const response = await fetch(uri, {\n    body,\n    headers,\n    method\n  });\n  if (response.ok) {\n    const html = await response.text();\n    return {\n      resolvedHTML: html,\n      error: false\n    };\n  }\n  return ERROR_STATE;\n}\n\nexport type UriSourceLoaderProps = {\n  source: HTMLSourceUri;\n} & SourceLoaderProps;\n\nfunction useUriSourceLoader({ source, onHTMLLoaded }: UriSourceLoaderProps) {\n  const [loadState, setState] = useState<LoaderInternalState>({\n    error: false,\n    resolvedHTML: null\n  });\n  const { error } = loadState;\n\n  // Effect to reload on uri changes\n  useEffect(() => {\n    let cancelled = false;\n    if (!error) {\n      setState({ error: false, resolvedHTML: null });\n      loadHTMLResource(source.uri, {\n        body: source.body,\n        headers: source.headers,\n        method: source.method\n      })\n        .then((state) => {\n          !cancelled && setState(state);\n        })\n        .catch(() => {\n          !cancelled && setState(ERROR_STATE);\n        });\n    }\n    return () => {\n      cancelled = true;\n    };\n  }, [error, source.uri, source.body, source.headers, source.method]);\n  useEffect(() => {\n    loadState.resolvedHTML && onHTMLLoaded?.call(null, loadState.resolvedHTML);\n  }, [loadState.resolvedHTML, onHTMLLoaded]);\n  return loadState;\n}\n\nexport default function SourceLoaderUri(props: UriSourceLoaderProps) {\n  const { remoteErrorView, remoteLoadingView } =\n    useContext(sourceLoaderContext);\n  const { resolvedHTML, error } = useUriSourceLoader(props);\n  if (error) {\n    return remoteErrorView.call(null, props.source);\n  }\n  if (resolvedHTML === null) {\n    return remoteLoadingView.call(null, props.source);\n  }\n  return React.createElement(RenderTTree, {\n    document: resolvedHTML!,\n    baseUrl: props.source.uri\n  });\n}\n"]},"metadata":{},"sourceType":"script"}