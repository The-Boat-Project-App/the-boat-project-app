{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import getCss from'dom-helpers/css';import getOffset from'dom-helpers/offset';import getPosition from'dom-helpers/position';import getScrollLeft from'dom-helpers/scrollLeft';import getScrollTop from'dom-helpers/scrollTop';import ownerDocument from'dom-helpers/ownerDocument';var AXIS={top:'top',bottom:'top',left:'left',right:'left'};var FLIPPED_DIRECTION={top:'bottom',bottom:'top',left:'right',right:'left'};var CROSS_AXIS={top:'left',left:'top'};var AXIS_SIZE={top:'height',left:'width'};var PARSED_PLACEMENT_CACHE={};var visualViewport=typeof window!=='undefined'&&window.visualViewport;function getContainerDimensions(containerNode){var width=0,height=0,top=0,left=0;var scroll={};if(containerNode.tagName==='BODY'){var _visualViewport$width,_visualViewport$heigh;width=(_visualViewport$width=visualViewport===null||visualViewport===void 0?void 0:visualViewport.width)!==null&&_visualViewport$width!==void 0?_visualViewport$width:document.documentElement.clientWidth;height=(_visualViewport$heigh=visualViewport===null||visualViewport===void 0?void 0:visualViewport.height)!==null&&_visualViewport$heigh!==void 0?_visualViewport$heigh:document.documentElement.clientHeight;scroll.top=getScrollTop(ownerDocument(containerNode).documentElement)||getScrollTop(containerNode);scroll.left=getScrollLeft(ownerDocument(containerNode).documentElement)||getScrollLeft(containerNode);}else{var _getOffset=getOffset(containerNode);width=_getOffset.width;height=_getOffset.height;top=_getOffset.top;left=_getOffset.left;scroll.top=getScrollTop(containerNode);scroll.left=getScrollLeft(containerNode);}return{width:width,height:height,scroll:scroll,top:top,left:left};}function getScroll(node){return{top:node.scrollTop,left:node.scrollLeft,width:node.scrollWidth,height:node.scrollHeight};}function getDelta(axis,offset,size,containerDimensions,padding){var containerScroll=containerDimensions.scroll[axis];var containerHeight=containerDimensions[AXIS_SIZE[axis]];var startEdgeOffset=offset-padding-containerScroll;var endEdgeOffset=offset+padding-containerScroll+size;if(startEdgeOffset<0){return-startEdgeOffset;}else if(endEdgeOffset>containerHeight){return Math.max(containerHeight-endEdgeOffset,-startEdgeOffset);}else{return 0;}}function getMargins(node){var style=window.getComputedStyle(node);return{top:parseInt(style.marginTop,10)||0,bottom:parseInt(style.marginBottom,10)||0,left:parseInt(style.marginLeft,10)||0,right:parseInt(style.marginRight,10)||0};}function parsePlacement(input){if(PARSED_PLACEMENT_CACHE[input]){return PARSED_PLACEMENT_CACHE[input];}var _input$split=input.split(' '),_input$split2=_slicedToArray(_input$split,2),placement=_input$split2[0],crossPlacement=_input$split2[1];var axis=AXIS[placement]||'right';var crossAxis=CROSS_AXIS[axis];if(!AXIS[crossPlacement]){crossPlacement='center';}var size=AXIS_SIZE[axis];var crossSize=AXIS_SIZE[crossAxis];PARSED_PLACEMENT_CACHE[input]={placement:placement,crossPlacement:crossPlacement,axis:axis,crossAxis:crossAxis,size:size,crossSize:crossSize};return PARSED_PLACEMENT_CACHE[input];}function computePosition(childOffset,boundaryDimensions,overlaySize,placementInfo,offset,crossOffset,containerOffsetWithBoundary,isContainerPositioned){var placement=placementInfo.placement,crossPlacement=placementInfo.crossPlacement,axis=placementInfo.axis,crossAxis=placementInfo.crossAxis,size=placementInfo.size,crossSize=placementInfo.crossSize;var position={};position[crossAxis]=childOffset[crossAxis];if(crossPlacement==='center'){position[crossAxis]+=(childOffset[crossSize]-overlaySize[crossSize])/2;}else if(crossPlacement!==crossAxis){position[crossAxis]+=childOffset[crossSize]-overlaySize[crossSize];}position[crossAxis]+=crossOffset;var minViablePosition=childOffset[crossAxis]+childOffset[crossSize]/2-overlaySize[crossSize];var maxViablePosition=childOffset[crossAxis]+childOffset[crossSize]/2;position[crossAxis]=Math.min(Math.max(minViablePosition,position[crossAxis]),maxViablePosition);if(placement===axis){var containerHeight=isContainerPositioned?containerOffsetWithBoundary[size]:boundaryDimensions[size];position[FLIPPED_DIRECTION[axis]]=Math.floor(containerHeight-childOffset[axis]+offset);}else{position[axis]=Math.floor(childOffset[axis]+childOffset[size]+offset);}return position;}function getMaxHeight(position,boundaryDimensions,containerOffsetWithBoundary,childOffset,margins,padding){return position.top!=null?Math.max(0,boundaryDimensions.height+boundaryDimensions.top+boundaryDimensions.scroll.top-(containerOffsetWithBoundary.top+position.top)-(margins.top+margins.bottom+padding)):Math.max(0,childOffset.top+containerOffsetWithBoundary.top-(boundaryDimensions.top+boundaryDimensions.scroll.top)-(margins.top+margins.bottom+padding));}function getAvailableSpace(boundaryDimensions,containerOffsetWithBoundary,childOffset,margins,padding,placementInfo){var placement=placementInfo.placement,axis=placementInfo.axis,size=placementInfo.size;if(placement===axis){return Math.max(0,childOffset[axis]-boundaryDimensions[axis]-boundaryDimensions.scroll[axis]+containerOffsetWithBoundary[axis]-margins[axis]-margins[FLIPPED_DIRECTION[axis]]-padding);}return Math.max(0,boundaryDimensions[size]+boundaryDimensions[axis]+boundaryDimensions.scroll[axis]-containerOffsetWithBoundary[axis]-childOffset[axis]-childOffset[size]-margins[axis]-margins[FLIPPED_DIRECTION[axis]]-padding);}export function calculatePositionInternal(placementInput,childOffset,overlaySize,scrollSize,margins,padding,flip,boundaryDimensions,containerOffsetWithBoundary,offset,crossOffset,isContainerPositioned,shouldOverlapWithTrigger){var placementInfo=parsePlacement(placementInput);var _placementInfo=placementInfo,size=_placementInfo.size,crossAxis=_placementInfo.crossAxis,crossSize=_placementInfo.crossSize,placement=_placementInfo.placement,crossPlacement=_placementInfo.crossPlacement,axis=_placementInfo.axis;var position=computePosition(childOffset,boundaryDimensions,overlaySize,placementInfo,offset,crossOffset,containerOffsetWithBoundary,isContainerPositioned);var normalizedOffset=offset;var space=getAvailableSpace(boundaryDimensions,containerOffsetWithBoundary,childOffset,margins,padding+offset,placementInfo);if(flip&&scrollSize[size]>space){var flippedPlacementInfo=parsePlacement(FLIPPED_DIRECTION[placement]+\" \"+crossPlacement);var flippedPosition=computePosition(childOffset,boundaryDimensions,overlaySize,flippedPlacementInfo,offset,crossOffset,containerOffsetWithBoundary,isContainerPositioned);var flippedSpace=getAvailableSpace(boundaryDimensions,containerOffsetWithBoundary,childOffset,margins,padding+offset,flippedPlacementInfo);if(flippedSpace>space){placementInfo=flippedPlacementInfo;position=flippedPosition;normalizedOffset=offset;}}var delta=getDelta(crossAxis,position[crossAxis],overlaySize[crossSize],boundaryDimensions,padding);position[crossAxis]+=delta;var maxHeight=getMaxHeight(position,boundaryDimensions,containerOffsetWithBoundary,childOffset,margins,padding);overlaySize.height=Math.min(overlaySize.height,maxHeight);position=computePosition(childOffset,boundaryDimensions,overlaySize,placementInfo,normalizedOffset,crossOffset,containerOffsetWithBoundary,isContainerPositioned);delta=getDelta(crossAxis,position[crossAxis],overlaySize[crossSize],boundaryDimensions,padding);position[crossAxis]+=delta;var arrowPosition={};arrowPosition[crossAxis]=childOffset[crossAxis]-position[crossAxis]+childOffset[crossSize]/2;if(shouldOverlapWithTrigger){position[FLIPPED_DIRECTION[placementInfo.placement]]=position[FLIPPED_DIRECTION[placementInfo.placement]]-childOffset[size];}return{position:position,maxHeight:maxHeight,arrowOffsetLeft:arrowPosition.left,arrowOffsetTop:arrowPosition.top,placement:placementInfo.placement};}export function calculatePosition(opts){var placement=opts.placement,targetNode=opts.targetNode,overlayNode=opts.overlayNode,scrollNode=opts.scrollNode,padding=opts.padding,shouldFlip=opts.shouldFlip,boundaryElement=opts.boundaryElement,offset=opts.offset,crossOffset=opts.crossOffset,shouldOverlapWithTrigger=opts.shouldOverlapWithTrigger;var container=overlayNode.offsetParent||document.body;var isBodyContainer=container.tagName==='BODY';var containerPositionStyle=window.getComputedStyle(container).position;var isContainerPositioned=!!containerPositionStyle&&containerPositionStyle!=='static';var childOffset=isBodyContainer?getOffset(targetNode):getPosition(targetNode,container);if(!isBodyContainer){childOffset.top+=parseInt(getCss(targetNode,'marginTop'),10)||0;childOffset.left+=parseInt(getCss(targetNode,'marginLeft'),10)||0;}var overlaySize=getOffset(overlayNode);var margins=getMargins(overlayNode);overlaySize.width+=margins.left+margins.right;overlaySize.height+=margins.top+margins.bottom;var scrollSize=getScroll(scrollNode);var boundaryDimensions=getContainerDimensions(boundaryElement);var containerOffsetWithBoundary=boundaryElement.tagName==='BODY'?getOffset(container):getPosition(container,boundaryElement);return calculatePositionInternal(placement,childOffset,overlaySize,scrollSize,margins,padding,shouldFlip,boundaryDimensions,containerOffsetWithBoundary,offset,crossOffset,isContainerPositioned,shouldOverlapWithTrigger);}","map":{"version":3,"mappings":"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","names":["getCss","getOffset","getPosition","getScrollLeft","getScrollTop","ownerDocument","AXIS","top","bottom","left","right","FLIPPED_DIRECTION","CROSS_AXIS","AXIS_SIZE","PARSED_PLACEMENT_CACHE","visualViewport","window","getContainerDimensions","containerNode","width","height","scroll","tagName","document","documentElement","clientWidth","clientHeight","getScroll","node","scrollTop","scrollLeft","scrollWidth","scrollHeight","getDelta","axis","offset","size","containerDimensions","padding","containerScroll","containerHeight","startEdgeOffset","endEdgeOffset","Math","max","getMargins","style","getComputedStyle","parseInt","marginTop","marginBottom","marginLeft","marginRight","parsePlacement","input","split","placement","crossPlacement","crossAxis","crossSize","computePosition","childOffset","boundaryDimensions","overlaySize","placementInfo","crossOffset","containerOffsetWithBoundary","isContainerPositioned","position","minViablePosition","maxViablePosition","min","floor","getMaxHeight","margins","getAvailableSpace","calculatePositionInternal","placementInput","scrollSize","flip","shouldOverlapWithTrigger","normalizedOffset","space","flippedPlacementInfo","flippedPosition","flippedSpace","delta","maxHeight","arrowPosition","arrowOffsetLeft","arrowOffsetTop","calculatePosition","opts","targetNode","overlayNode","scrollNode","shouldFlip","boundaryElement","container","offsetParent","body","isBodyContainer","containerPositionStyle"],"sources":["calculatePosition.ts"],"sourcesContent":["// @ts-nocheck\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Axis, Placement, PlacementAxis, SizeAxis} from '@react-types/overlays';\nimport getCss from 'dom-helpers/css';\nimport getOffset from 'dom-helpers/offset';\nimport getPosition from 'dom-helpers/position';\nimport getScrollLeft from 'dom-helpers/scrollLeft';\nimport getScrollTop from 'dom-helpers/scrollTop';\nimport ownerDocument from 'dom-helpers/ownerDocument';\n\ninterface Position {\n  top?: number,\n  left?: number,\n  bottom?: number,\n  right?: number\n}\n\ninterface Dimensions {\n  width: number,\n  height: number,\n  top: number,\n  left: number,\n  scroll: Position\n}\n\ninterface ParsedPlacement {\n  placement: PlacementAxis,\n  crossPlacement: PlacementAxis,\n  axis: Axis,\n  crossAxis: Axis,\n  size: SizeAxis,\n  crossSize: SizeAxis\n}\n\ninterface Offset {\n  top: number,\n  left: number,\n  width: number,\n  height: number\n}\n\ninterface PositionOpts {\n  placement: Placement,\n  targetNode: HTMLElement,\n  overlayNode: HTMLElement,\n  scrollNode: HTMLElement,\n  padding: number,\n  shouldFlip: boolean,\n  boundaryElement: HTMLElement,\n  offset: number,\n  crossOffset: number,\n  shouldOverlapWithTrigger: boolean\n}\n\nexport interface PositionResult {\n  position?: Position,\n  arrowOffsetLeft?: number,\n  arrowOffsetTop?: number,\n  maxHeight?: number,\n  placement: PlacementAxis\n}\n\nconst AXIS = {\n  top: 'top',\n  bottom: 'top',\n  left: 'left',\n  right: 'left'\n};\n\nconst FLIPPED_DIRECTION = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\n\nconst CROSS_AXIS = {\n  top: 'left',\n  left: 'top'\n};\n\nconst AXIS_SIZE = {\n  top: 'height',\n  left: 'width'\n};\n\nconst PARSED_PLACEMENT_CACHE = {};\n\n// @ts-ignore\nlet visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\nfunction getContainerDimensions(containerNode: Element): Dimensions {\n  let width = 0, height = 0, top = 0, left = 0;\n  let scroll: Position = {};\n\n  if (containerNode.tagName === 'BODY') {\n    width = visualViewport?.width ?? document.documentElement.clientWidth;\n    height = visualViewport?.height ?? document.documentElement.clientHeight;\n\n    scroll.top =\n      getScrollTop(ownerDocument(containerNode).documentElement) ||\n      getScrollTop(containerNode);\n    scroll.left =\n      getScrollLeft(ownerDocument(containerNode).documentElement) ||\n      getScrollLeft(containerNode);\n  } else {\n    ({width, height, top, left} = getOffset(containerNode));\n    scroll.top = getScrollTop(containerNode);\n    scroll.left = getScrollLeft(containerNode);\n  }\n\n  return {width, height, scroll, top, left};\n}\n\nfunction getScroll(node: HTMLElement): Offset {\n  return {\n    top: node.scrollTop,\n    left: node.scrollLeft,\n    width: node.scrollWidth,\n    height: node.scrollHeight\n  };\n}\n\nfunction getDelta(\n  axis: Axis,\n  offset: number,\n  size: number,\n  containerDimensions: Dimensions,\n  padding: number\n) {\n  let containerScroll = containerDimensions.scroll[axis];\n  let containerHeight = containerDimensions[AXIS_SIZE[axis]];\n\n  let startEdgeOffset = offset - padding - containerScroll;\n  let endEdgeOffset = offset + padding - containerScroll + size;\n\n  if (startEdgeOffset < 0) {\n    return -startEdgeOffset;\n  } else if (endEdgeOffset > containerHeight) {\n    return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);\n  } else {\n    return 0;\n  }\n}\n\nfunction getMargins(node: HTMLElement): Position {\n  let style = window.getComputedStyle(node);\n  return {\n    top: parseInt(style.marginTop, 10) || 0,\n    bottom: parseInt(style.marginBottom, 10) || 0,\n    left: parseInt(style.marginLeft, 10) || 0,\n    right: parseInt(style.marginRight, 10) || 0\n  };\n}\n\nfunction parsePlacement(input: Placement): ParsedPlacement {\n  if (PARSED_PLACEMENT_CACHE[input]) {\n    return PARSED_PLACEMENT_CACHE[input];\n  }\n\n  let [placement, crossPlacement] = input.split(' ');\n  let axis: Axis = AXIS[placement] || 'right';\n  let crossAxis: Axis = CROSS_AXIS[axis];\n\n  if (!AXIS[crossPlacement]) {\n    crossPlacement = 'center';\n  }\n\n  let size = AXIS_SIZE[axis];\n  let crossSize = AXIS_SIZE[crossAxis];\n  PARSED_PLACEMENT_CACHE[input] = {placement, crossPlacement, axis, crossAxis, size, crossSize};\n  return PARSED_PLACEMENT_CACHE[input];\n}\n\nfunction computePosition(\n  childOffset: Offset,\n  boundaryDimensions: Dimensions,\n  overlaySize: Offset,\n  placementInfo: ParsedPlacement,\n  offset: number,\n  crossOffset: number,\n  containerOffsetWithBoundary: Offset,\n  isContainerPositioned: boolean\n) {\n  let {placement, crossPlacement, axis, crossAxis, size, crossSize} = placementInfo;\n  let position: Position = {};\n\n  // button position\n  position[crossAxis] = childOffset[crossAxis];\n  if (crossPlacement === 'center') {\n    //  + (button size / 2) - (overlay size / 2)\n    // at this point the overlay center should match the button center\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;\n  } else if (crossPlacement !== crossAxis) {\n    //  + (button size) - (overlay size)\n    // at this point the overlay bottom should match the button bottom\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]);\n  }/* else {\n    the overlay top should match the button top\n  } */\n  // add the crossOffset from props\n  position[crossAxis] += crossOffset;\n\n  // this is button center position - the overlay size + half of the button to align bottom of overlay with button center\n  let minViablePosition = childOffset[crossAxis] + (childOffset[crossSize] / 2) - overlaySize[crossSize];\n  // this is button position of center, aligns top of overlay with button center\n  let maxViablePosition = childOffset[crossAxis] + (childOffset[crossSize] / 2);\n\n  // clamp it into the range of the min/max positions\n  position[crossAxis] = Math.min(Math.max(minViablePosition, position[crossAxis]), maxViablePosition);\n\n  // Floor these so the position isn't placed on a partial pixel, only whole pixels. Shouldn't matter if it was floored or ceiled, so chose one.\n  if (placement === axis) {\n    // If the container is positioned (non-static), then we use the container's actual\n    // height, as `bottom` will be relative to this height.  But if the container is static,\n    // then it can only be the `document.body`, and `bottom` will be relative to _its_\n    // container, which should be as large as boundaryDimensions.\n    const containerHeight = (isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size]);\n    position[FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);\n  } else {\n    position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);\n  }\n\n  return position;\n}\n\nfunction getMaxHeight(\n  position: Position,\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  childOffset: Offset,\n  margins: Position,\n  padding: number\n) {\n  return position.top != null\n    // We want the distance between the top of the overlay to the bottom of the boundary\n    ? Math.max(0,\n      (boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top) // this is the bottom of the boundary\n      - (containerOffsetWithBoundary.top + position.top) // this is the top of the overlay\n      - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n    )\n    // We want the distance between the top of the trigger to the top of the boundary\n    : Math.max(0,\n      (childOffset.top + containerOffsetWithBoundary.top) // this is the top of the trigger\n      - (boundaryDimensions.top + boundaryDimensions.scroll.top) // this is the top of the boundary\n      - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n    );\n}\n\nfunction getAvailableSpace(\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  childOffset: Offset,\n  margins: Position,\n  padding: number,\n  placementInfo: ParsedPlacement\n) {\n  let {placement, axis, size} = placementInfo;\n  if (placement === axis) {\n    return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n  }\n\n  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n}\n\nexport function calculatePositionInternal(\n  placementInput: Placement,\n  childOffset: Offset,\n  overlaySize: Offset,\n  scrollSize: Offset,\n  margins: Position,\n  padding: number,\n  flip: boolean,\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  offset: number,\n  crossOffset: number,\n  isContainerPositioned: boolean,\n  shouldOverlapWithTrigger: boolean\n): PositionResult {\n  let placementInfo = parsePlacement(placementInput);\n  let {size, crossAxis, crossSize, placement, crossPlacement, axis} = placementInfo;\n  let position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  let normalizedOffset = offset;\n  let space = getAvailableSpace(\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    childOffset,\n    margins,\n    padding + offset,\n    placementInfo\n  );\n\n  // Check if the scroll size of the overlay is greater than the available space to determine if we need to flip\n  if (flip && scrollSize[size] > space) {\n    let flippedPlacementInfo = parsePlacement(`${FLIPPED_DIRECTION[placement]} ${crossPlacement}` as Placement);\n    let flippedPosition = computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n    let flippedSpace = getAvailableSpace(\n      boundaryDimensions,\n      containerOffsetWithBoundary,\n      childOffset,\n      margins,\n      padding + offset,\n      flippedPlacementInfo\n    );\n\n    // If the available space for the flipped position is greater than the original available space, flip.\n    if (flippedSpace > space) {\n      placementInfo = flippedPlacementInfo;\n      position = flippedPosition;\n      normalizedOffset = offset;\n    }\n  }\n\n  let delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n\n  let maxHeight = getMaxHeight(\n    position,\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    childOffset,\n    margins,\n    padding\n  );\n\n  overlaySize.height = Math.min(overlaySize.height, maxHeight);\n\n  position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n\n  let arrowPosition: Position = {};\n  arrowPosition[crossAxis] = (childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2);\n\n  if (shouldOverlapWithTrigger) {\n    position[FLIPPED_DIRECTION[placementInfo.placement]] = position[FLIPPED_DIRECTION[placementInfo.placement]] - childOffset[size];\n  }\n\n  return {\n    position,\n    maxHeight: maxHeight,\n    arrowOffsetLeft: arrowPosition.left,\n    arrowOffsetTop: arrowPosition.top,\n    placement: placementInfo.placement\n  };\n}\n\n/**\n * Determines where to place the overlay with regards to the target and the position of an optional indicator.\n */\nexport function calculatePosition(opts: PositionOpts): PositionResult {\n  let {\n    placement,\n    targetNode,\n    overlayNode,\n    scrollNode,\n    padding,\n    shouldFlip,\n    boundaryElement,\n    offset,\n    crossOffset,\n    shouldOverlapWithTrigger\n  } = opts;\n\n  let container = overlayNode.offsetParent || document.body;\n  let isBodyContainer = container.tagName === 'BODY';\n  const containerPositionStyle = window.getComputedStyle(container).position;\n  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== 'static';\n  let childOffset: Offset = isBodyContainer ? getOffset(targetNode) : getPosition(targetNode, container);\n\n  if (!isBodyContainer) {\n    childOffset.top += parseInt(getCss(targetNode, 'marginTop'), 10) || 0;\n    childOffset.left += parseInt(getCss(targetNode, 'marginLeft'), 10) || 0;\n  }\n\n  let overlaySize: Offset = getOffset(overlayNode);\n  let margins = getMargins(overlayNode);\n  overlaySize.width += margins.left + margins.right;\n  overlaySize.height += margins.top + margins.bottom;\n\n  let scrollSize = getScroll(scrollNode);\n  let boundaryDimensions = getContainerDimensions(boundaryElement);\n  let containerOffsetWithBoundary: Offset = boundaryElement.tagName === 'BODY' ? getOffset(container) : getPosition(container, boundaryElement);\n\n\n  return calculatePositionInternal(\n    placement,\n    childOffset,\n    overlaySize,\n    scrollSize,\n    margins,\n    padding,\n    shouldFlip,\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    offset,\n    crossOffset,\n    isContainerPositioned,\n    shouldOverlapWithTrigger\n  );\n}\n"]},"metadata":{},"sourceType":"module"}