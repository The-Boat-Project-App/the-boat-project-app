{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import Color from'tinycolor2';import{useToken}from\"./useToken\";import{useAccessibleColors}from\"../core/color-mode/hooks\";import{useNativeBaseConfig}from\"../core/NativeBaseContext\";export function useContrastText(bg,color){var _useToken=useToken('colors',['contrastThreshold','darkText','lightText',bg,color!==null&&color!==void 0?color:'']),_useToken2=_slicedToArray(_useToken,5),contrastThreshold=_useToken2[0],trueDarkText=_useToken2[1],trueLightText=_useToken2[2],trueBg=_useToken2[3],trueColor=_useToken2[4];var suppressColorAccessibilityWarning=useNativeBaseConfig('NativeBaseConfigProvider').config.suppressColorAccessibilityWarning;var _useAccessibleColors=useAccessibleColors(),_useAccessibleColors2=_slicedToArray(_useAccessibleColors,1),accessibleColors=_useAccessibleColors2[0];if(useNativeBaseConfig('NativeBaseConfigProvider').disableContrastText){return trueColor;}if(typeof bg!=='string'){return;}var _bg$split=bg.split('.'),_bg$split2=_slicedToArray(_bg$split,2),bgThemeColorVariant=_bg$split2[0],bgShade=_bg$split2[1];var textColor=!accessibleColors&&bgThemeColorVariant&&themeColorsThresholdShades[bgThemeColorVariant]?getContrastThemeColor(bgThemeColorVariant,bgShade):getAccessibleContrastColor(contrastThreshold,trueDarkText,trueLightText,trueBg,trueColor,bg,color,suppressColorAccessibilityWarning);return textColor;}function getContrastThemeColor(bgThemeColorVariant,bgShade){var shadeThreshold=themeColorsThresholdShades[bgThemeColorVariant];if(bgShade&&shadeThreshold&&(bgShade>=shadeThreshold&&bgThemeColorVariant!=='dark'||bgThemeColorVariant==='dark'&&bgShade<shadeThreshold)){return'lightText';}return'darkText';}function getAccessibleContrastColor(contrastThreshold,trueDarkText,trueLightText,trueBg,trueColor,bg,color,suppressColorAccessibilityWarning){if(typeof trueBg!=='string'){trueBg=bg;}var trueContrastColor;var contrastColorToken;var darkTextConstrast=getContrastRatio(trueBg,trueDarkText);var lightTextConstrast=getContrastRatio(trueBg,trueLightText);if(darkTextConstrast>=contrastThreshold||darkTextConstrast>lightTextConstrast){trueContrastColor=trueDarkText;contrastColorToken='darkText';}else{trueContrastColor=trueLightText;contrastColorToken='lightText';}if(\"production\"!=='production'){var contrast=getContrastRatio(trueBg,trueColor?trueColor:trueContrastColor);if(contrast<3&&!suppressColorAccessibilityWarning){console.warn([\"NativeBase: The contrast ratio of \".concat(contrast,\":1 for \").concat(color?color:contrastColorToken,\" on \").concat(bg),'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.','https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));}}return contrastColorToken;}function getContrastRatio(foreground,background){var lumA=Color(foreground).getLuminance();var lumB=Color(background).getLuminance();return(Math.max(lumA,lumB)+0.05)/(Math.min(lumA,lumB)+0.05);}var themeColorsThresholdShades={rose:500,pink:500,fuchsia:800,purple:700,violet:600,indigo:500,blue:400,lightBlue:400,cyan:300,teal:300,emerald:300,tertiary:300,green:400,lime:600,yellow:800,amber:500,orange:500,red:500,warmGray:500,trueGray:500,gray:500,coolGray:500,blueGray:500,dark:500,danger:500,error:500,success:400,warning:500,muted:500,primary:500,info:400,secondary:500,light:500};","map":{"version":3,"mappings":"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","names":["Color","useToken","useAccessibleColors","useNativeBaseConfig","useContrastText","bg","color","contrastThreshold","trueDarkText","trueLightText","trueBg","trueColor","suppressColorAccessibilityWarning","config","accessibleColors","disableContrastText","split","bgThemeColorVariant","bgShade","textColor","themeColorsThresholdShades","getContrastThemeColor","getAccessibleContrastColor","shadeThreshold","trueContrastColor","contrastColorToken","darkTextConstrast","getContrastRatio","lightTextConstrast","process","contrast","console","warn","join","foreground","background","lumA","getLuminance","lumB","Math","max","min","rose","pink","fuchsia","purple","violet","indigo","blue","lightBlue","cyan","teal","emerald","tertiary","green","lime","yellow","amber","orange","red","warmGray","trueGray","gray","coolGray","blueGray","dark","danger","error","success","warning","muted","primary","info","secondary","light"],"sources":["useContrastText.ts"],"sourcesContent":["import Color from 'tinycolor2';\nimport { useToken } from './useToken';\nimport { useAccessibleColors } from '../core/color-mode/hooks';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\n\nexport function useContrastText(bg: string, color?: string) {\n  const [\n    contrastThreshold,\n    trueDarkText,\n    trueLightText,\n    trueBg,\n    trueColor,\n  ] = useToken('colors', [\n    'contrastThreshold',\n    'darkText',\n    'lightText',\n    bg,\n    color ?? '',\n  ]);\n\n  const suppressColorAccessibilityWarning = useNativeBaseConfig(\n    'NativeBaseConfigProvider'\n  ).config.suppressColorAccessibilityWarning;\n\n  const [accessibleColors] = useAccessibleColors();\n\n  if (useNativeBaseConfig('NativeBaseConfigProvider').disableContrastText) {\n    return trueColor;\n  }\n  if (typeof bg !== 'string') {\n    return;\n  }\n\n  const [bgThemeColorVariant, bgShade] = bg.split('.');\n\n  const textColor =\n    !accessibleColors &&\n    bgThemeColorVariant &&\n    themeColorsThresholdShades[bgThemeColorVariant]\n      ? getContrastThemeColor(bgThemeColorVariant, bgShade)\n      : getAccessibleContrastColor(\n          contrastThreshold,\n          trueDarkText,\n          trueLightText,\n          trueBg,\n          trueColor,\n          bg,\n          color,\n          suppressColorAccessibilityWarning\n        );\n\n  return textColor;\n}\n\nfunction getContrastThemeColor(bgThemeColorVariant: string, bgShade: string) {\n  const shadeThreshold = themeColorsThresholdShades[bgThemeColorVariant];\n  if (\n    bgShade &&\n    shadeThreshold &&\n    ((bgShade >= shadeThreshold && bgThemeColorVariant !== 'dark') ||\n      (bgThemeColorVariant === 'dark' && bgShade < shadeThreshold))\n  ) {\n    return 'lightText';\n  }\n  return 'darkText';\n}\nfunction getAccessibleContrastColor(\n  contrastThreshold: number,\n  trueDarkText: string,\n  trueLightText: string,\n  trueBg: string,\n  trueColor: string,\n  bg: string,\n  color?: string,\n  suppressColorAccessibilityWarning?: boolean\n) {\n  if (typeof trueBg !== 'string') {\n    trueBg = bg;\n  }\n  let trueContrastColor;\n  let contrastColorToken;\n  const darkTextConstrast = getContrastRatio(trueBg, trueDarkText);\n  const lightTextConstrast = getContrastRatio(trueBg, trueLightText);\n\n  if (\n    darkTextConstrast >= contrastThreshold ||\n    darkTextConstrast > lightTextConstrast\n  ) {\n    trueContrastColor = trueDarkText;\n    contrastColorToken = 'darkText';\n  } else {\n    trueContrastColor = trueLightText;\n    contrastColorToken = 'lightText';\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const contrast = getContrastRatio(\n      trueBg,\n      trueColor ? trueColor : trueContrastColor\n    );\n    if (contrast < 3 && !suppressColorAccessibilityWarning) {\n      console.warn(\n        [\n          `NativeBase: The contrast ratio of ${contrast}:1 for ${\n            color ? color : contrastColorToken\n          } on ${bg}`,\n          'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.',\n          'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast',\n        ].join('\\n')\n      );\n    }\n  }\n  return contrastColorToken;\n}\nfunction getContrastRatio(foreground: string, background: string) {\n  const lumA = Color(foreground).getLuminance();\n  const lumB = Color(background).getLuminance();\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\nconst themeColorsThresholdShades: any = {\n  rose: 500,\n  pink: 500,\n  fuchsia: 800,\n  purple: 700,\n  violet: 600,\n  indigo: 500,\n  blue: 400,\n  lightBlue: 400,\n  cyan: 300,\n  teal: 300,\n  emerald: 300,\n  tertiary: 300,\n  green: 400,\n  lime: 600,\n  yellow: 800,\n  amber: 500,\n  orange: 500,\n  red: 500,\n  warmGray: 500,\n  trueGray: 500,\n  gray: 500,\n  coolGray: 500,\n  blueGray: 500,\n  dark: 500,\n  danger: 500,\n  error: 500,\n  success: 400,\n  warning: 500,\n  muted: 500,\n  primary: 500,\n  info: 400,\n  secondary: 500,\n  light: 500,\n};\n"]},"metadata":{},"sourceType":"module"}