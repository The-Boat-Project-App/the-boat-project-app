{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var emptyProps={testID:'br'};var isWeb=_reactNative.Platform.OS==='web';function renderEmptyLineBreak(tnode){var lineHeight=tnode.styles.nativeTextFlow.lineHeight||tnode.styles.nativeTextFlow.fontSize*1.4;return _react.default.createElement(_reactNative.View,{style:{height:lineHeight}});}var BRRenderer=function BRRenderer(_ref){var renderIndex=_ref.renderIndex,renderLength=_ref.renderLength,sharedProps=_ref.sharedProps,tnode=_ref.tnode;var isFirst=renderIndex===0;var isLast=renderIndex===renderLength-1;var isLonelyBreak=isFirst&&isLast;var shouldCollapse=sharedProps.enableExperimentalBRCollapsing&&(isFirst?isLast&&!isWeb:isLast);return isLonelyBreak&&shouldCollapse?renderEmptyLineBreak(tnode):_react.default.createElement(_reactNative.Text,emptyProps,shouldCollapse?'':'\\n');};BRRenderer.isNativeInternalTextRenderer=true;var _default=BRRenderer;exports.default=_default;","map":{"version":3,"mappings":"6FACA,oD,2IAIA,GAAMA,WAAU,CAAG,CACjBC,MAAM,CAAE,IADS,CAAnB,CAIA,GAAMC,MAAK,CAAGC,sBAASC,EAATD,GAAgB,KAA9B,CAEA,QAASE,qBAAT,CAA8BC,KAA9B,CAA4C,CAC1C,GAAMC,WAAU,CACdD,KAAK,CAACE,MAANF,CAAaG,cAAbH,CAA4BC,UAA5BD,EACAA,KAAK,CAACE,MAANF,CAAaG,cAAbH,CAA4BI,QAA5BJ,CAAwC,GAF1C,CAGA,MAAOK,8BAACC,iBAAD,EAAMC,KAAK,CAAE,CAAEC,MAAM,CAAEP,UAAV,CAAb,EAAP,CACD,CAED,GAAMQ,WAAuC,CAAG,QAASA,WAAT,MAK7C,IAJDC,YAIC,MAJDA,WAIC,CAHDC,YAGC,MAHDA,YAGC,CAFDC,WAEC,MAFDA,WAEC,CADDZ,KACC,MADDA,KACC,CASD,GAAMa,QAAO,CAAGH,WAAW,GAAK,CAAhC,CACA,GAAMI,OAAM,CAAGJ,WAAW,GAAKC,YAAY,CAAG,CAA9C,CACA,GAAMI,cAAa,CAAGF,OAAO,EAAIC,MAAjC,CACA,GAAME,eAAc,CAClBJ,WAAW,CAACK,8BAAZL,GACCC,OAAO,CAAGC,MAAM,EAAI,CAAClB,KAAd,CAAsBkB,MAD9BF,CADF,CAGA,MAAOG,cAAa,EAAIC,cAAjBD,CACHhB,oBAAoB,CAACC,KAAD,CADjBe,CAEHG,eAAMC,aAAND,CAAoBE,iBAApBF,CAA0BxB,UAA1BwB,CAAsCF,cAAc,CAAG,EAAH,CAAQ,IAA5DE,CAFJ,CApBF,EAyBAT,UAAU,CAACY,4BAAXZ,CAA0C,IAA1CA,cAEeA","names":["emptyProps","testID","isWeb","Platform","OS","renderEmptyLineBreak","tnode","lineHeight","styles","nativeTextFlow","fontSize","_react","_reactNative","style","height","BRRenderer","renderIndex","renderLength","sharedProps","isFirst","isLast","isLonelyBreak","shouldCollapse","enableExperimentalBRCollapsing","React","createElement","Text","isNativeInternalTextRenderer"],"sources":["BRRenderer.tsx"],"sourcesContent":["import { TNode } from '@native-html/transient-render-engine';\nimport React from 'react';\nimport { Platform, Text, View } from 'react-native';\nimport { InternalTextContentRenderer } from '../render/render-types';\n\nconst emptyProps = {\n  testID: 'br'\n};\n\nconst isWeb = Platform.OS === 'web';\n\nfunction renderEmptyLineBreak(tnode: TNode) {\n  const lineHeight =\n    tnode.styles.nativeTextFlow.lineHeight ||\n    tnode.styles.nativeTextFlow.fontSize! * 1.4;\n  return <View style={{ height: lineHeight }} />;\n}\n\nconst BRRenderer: InternalTextContentRenderer = function BRRenderer({\n  renderIndex,\n  renderLength,\n  sharedProps,\n  tnode\n}) {\n  // If it is the last child and BR collapsing is enabled, render an empty\n  // string to prevent inserting an undesired space to follow HTML specs,\n  // unless the platform is web and it is also the first child.\n  //\n  // Note that we are taking advantage of the Ghost Line oddity in React\n  // Native, where an empty <Text /> element displays a line, since a\n  // line break opening **and** closing an inline formatting context\n  // should be printed as a one line-height item.\n  const isFirst = renderIndex === 0;\n  const isLast = renderIndex === renderLength - 1;\n  const isLonelyBreak = isFirst && isLast;\n  const shouldCollapse =\n    sharedProps.enableExperimentalBRCollapsing &&\n    (isFirst ? isLast && !isWeb : isLast);\n  return isLonelyBreak && shouldCollapse\n    ? renderEmptyLineBreak(tnode)\n    : React.createElement(Text, emptyProps, shouldCollapse ? '' : '\\n');\n};\n\nBRRenderer.isNativeInternalTextRenderer = true;\n\nexport default BRRenderer;\n"]},"metadata":{},"sourceType":"script"}