{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _constants=require(\"../constants\");function WebViewPlaceholder(){if(typeof __DEV__==='boolean'&&__DEV__){console.warn('One of your renderers is attempting to use WebView component, which has not been '+\"provided as a prop to the RenderHtml component. As a consequence, the element won't be rendered.\");}return null;}var defaultSharedProps={bypassAnonymousTPhrasingNodes:true,debug:false,defaultTextProps:{selectable:false,allowFontScaling:true},defaultViewProps:{},enableExperimentalBRCollapsing:false,enableExperimentalGhostLinesPrevention:false,enableExperimentalMarginCollapsing:false,computeEmbeddedMaxWidth:function computeEmbeddedMaxWidth(contentWidth){return contentWidth;},WebView:WebViewPlaceholder,defaultWebViewProps:{},pressableHightlightColor:_constants.DEFAULT_PRESSABLE_RIPPLE_COLOR,provideEmbeddedHeaders:undefined,GenericPressable:undefined,customListStyleSpecs:undefined};var _default=defaultSharedProps;exports.default=_default;","map":{"version":3,"mappings":"6FAAA,uCAGA,QAASA,mBAAT,EAA8B,CAE5B,GAAI,MAAOC,QAAP,GAAmB,SAAnB,EAAgCA,OAApC,CAA6C,CAC3CC,OAAO,CAACC,IAARD,CACE,oFACE,kGAFJA,EAID,CACD,MAAO,KAAP,CACD,CAED,GAAME,mBAAgD,CAAG,CACvDC,6BAA6B,CAAE,IADwB,CAEvDC,KAAK,CAAE,KAFgD,CAGvDC,gBAAgB,CAAE,CAChBC,UAAU,CAAE,KADI,CAEhBC,gBAAgB,CAAE,IAFF,CAHqC,CAOvDC,gBAAgB,CAAE,EAPqC,CAQvDC,8BAA8B,CAAE,KARuB,CASvDC,sCAAsC,CAAE,KATe,CAUvDC,kCAAkC,CAAE,KAVmB,CAWvDC,uBAAuB,CAAGC,6CAAD,QAAkBA,aAAlB,EAX8B,CAYvDC,OAAO,CAAEhB,kBAZ8C,CAavDiB,mBAAmB,CAAE,EAbkC,CAcvDC,wBAAwB,CAAEC,yCAd6B,CAevDC,sBAAsB,CAAEC,SAf+B,CAgBvDC,gBAAgB,CAAED,SAhBqC,CAiBvDE,oBAAoB,CAAEF,SAjBiC,CAAzD,cAoBejB","names":["WebViewPlaceholder","__DEV__","console","warn","defaultSharedProps","bypassAnonymousTPhrasingNodes","debug","defaultTextProps","selectable","allowFontScaling","defaultViewProps","enableExperimentalBRCollapsing","enableExperimentalGhostLinesPrevention","enableExperimentalMarginCollapsing","computeEmbeddedMaxWidth","contentWidth","WebView","defaultWebViewProps","pressableHightlightColor","DEFAULT_PRESSABLE_RIPPLE_COLOR","provideEmbeddedHeaders","undefined","GenericPressable","customListStyleSpecs"],"sources":["defaultSharedProps.ts"],"sourcesContent":["import { DEFAULT_PRESSABLE_RIPPLE_COLOR } from '../constants';\nimport { RenderHTMLAmbiantSharedProps } from '../shared-types';\n\nfunction WebViewPlaceholder() {\n  /* istanbul ignore else */\n  if (typeof __DEV__ === 'boolean' && __DEV__) {\n    console.warn(\n      'One of your renderers is attempting to use WebView component, which has not been ' +\n        \"provided as a prop to the RenderHtml component. As a consequence, the element won't be rendered.\"\n    );\n  }\n  return null;\n}\n\nconst defaultSharedProps: RenderHTMLAmbiantSharedProps = {\n  bypassAnonymousTPhrasingNodes: true,\n  debug: false,\n  defaultTextProps: {\n    selectable: false,\n    allowFontScaling: true\n  },\n  defaultViewProps: {},\n  enableExperimentalBRCollapsing: false,\n  enableExperimentalGhostLinesPrevention: false,\n  enableExperimentalMarginCollapsing: false,\n  computeEmbeddedMaxWidth: (contentWidth) => contentWidth,\n  WebView: WebViewPlaceholder,\n  defaultWebViewProps: {},\n  pressableHightlightColor: DEFAULT_PRESSABLE_RIPPLE_COLOR,\n  provideEmbeddedHeaders: undefined,\n  GenericPressable: undefined,\n  customListStyleSpecs: undefined\n};\n\nexport default defaultSharedProps;\n"]},"metadata":{},"sourceType":"script"}