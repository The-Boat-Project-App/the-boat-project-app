{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=IMGElementContentSuccess;var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var defaultImageStyle={resizeMode:'cover'};function IMGElementContentSuccess(_ref){var source=_ref.source,imageStyle=_ref.imageStyle,dimensions=_ref.dimensions,onError=_ref.onError;var onImageError=(0,_react.useCallback)(function(_ref2){var error=_ref2.nativeEvent.error;return onError(error);},[onError]);return _react.default.createElement(_reactNative.Image,{source:source,onError:onImageError,style:[defaultImageStyle,dimensions,imageStyle],testID:\"image-success\"});}","map":{"version":3,"mappings":"+GAAA,qD,kjCASA,GAAMA,kBAA6B,CAAG,CAAEC,UAAU,CAAE,OAAd,CAAtC,CAKe,QAASC,yBAAT,MAK0B,IAJvCC,OAIuC,MAJvCA,MAIuC,CAHvCC,UAGuC,MAHvCA,UAGuC,CAFvCC,UAEuC,MAFvCA,UAEuC,CADvCC,OACuC,MADvCA,OACuC,CACvC,GAAMC,aAAY,CAAG,uBACnB,mBAAkBC,MAAlB,OAAGC,WAAH,CAAkBD,KAAlB,OACEF,QAAO,CAACE,KAAD,CADT,EADmB,CAGnB,CAACF,OAAD,CAHmB,CAArB,CAKA,MACEI,8BAACC,kBAAD,EACER,MAAM,CAAEA,MADV,CAEEG,OAAO,CAAEC,YAFX,CAGEK,KAAK,CAAE,CAACZ,iBAAD,CAAoBK,UAApB,CAAgCD,UAAhC,CAHT,CAIES,MAAM,CAAC,eAJT,EADF,CAQD","names":["defaultImageStyle","resizeMode","IMGElementContentSuccess","source","imageStyle","dimensions","onError","onImageError","error","nativeEvent","_react","_reactNative","style","testID"],"sources":["IMGElementContentSuccess.tsx"],"sourcesContent":["import React, { ReactElement, useCallback } from 'react';\nimport {\n  Image,\n  ImageErrorEventData,\n  ImageStyle,\n  NativeSyntheticEvent\n} from 'react-native';\nimport { IMGElementStateSuccess } from './img-types';\n\nconst defaultImageStyle: ImageStyle = { resizeMode: 'cover' };\n\n/**\n * Default success \"image\" view for the {@link IMGElement} component.\n */\nexport default function IMGElementContentSuccess({\n  source,\n  imageStyle,\n  dimensions,\n  onError\n}: IMGElementStateSuccess): ReactElement {\n  const onImageError = useCallback(\n    ({ nativeEvent: { error } }: NativeSyntheticEvent<ImageErrorEventData>) =>\n      onError(error),\n    [onError]\n  );\n  return (\n    <Image\n      source={source}\n      onError={onImageError}\n      style={[defaultImageStyle, dimensions, imageStyle]}\n      testID=\"image-success\"\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"script"}