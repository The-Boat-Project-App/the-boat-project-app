{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"_image\",\"_badgeSize\",\"source\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{Box,Image}from\"../../primitives\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import isNil from'lodash.isnil';import has from'lodash.has';var Avatar=function Avatar(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),error=_React$useState2[0],setError=_React$useState2[1];var _usePropsResolution=usePropsResolution('Avatar',props),_image=_usePropsResolution._image,_badgeSize=_usePropsResolution._badgeSize,source=_usePropsResolution.source,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var Badge=React.createElement(React.Fragment,null);var remainingChildren=[];React.Children.map(children,function(child){if(typeof(child===null||child===void 0?void 0:child.type)==='object'&&(child===null||child===void 0?void 0:child.type.displayName)==='AvatarBadge'){var _child$props,_child$props2;Badge=React.cloneElement(child,{size:child!==null&&child!==void 0&&(_child$props=child.props)!==null&&_child$props!==void 0&&_child$props.size?child===null||child===void 0?void 0:(_child$props2=child.props)===null||_child$props2===void 0?void 0:_child$props2.size:_badgeSize?_badgeSize[0]:undefined});}else{remainingChildren.push(child);}});if(useHasResponsiveProps(props)){return null;}var getSource=function getSource(){if(source){if(has(source,'uri')&&!isNil(source.uri)){return source;}else if(!has(source,'uri')){return source;}}return null;};var imageSource=getSource();return React.createElement(Box,resolvedProps,imageSource&&!error?React.createElement(Image,_extends({source:source,onError:function onError(){setError(true);}},_image,{ref:ref})):remainingChildren.length!==0&&remainingChildren,Badge);};export default memo(forwardRef(Avatar));","map":{"version":3,"mappings":"ofAAA,MAAOA,MAAP,EAAgBC,IAAhB,CAAsBC,UAAtB,KAAwC,OAAxC,CACA,OAASC,GAAT,CAAcC,KAAd,wBACA,OAASC,kBAAT,oCAEA,OAASC,qBAAT,4CACA,MAAOC,MAAP,KAAkB,cAAlB,CACA,MAAOC,IAAP,KAAgB,YAAhB,CAEA,GAAMC,OAAM,CAAG,QAATA,OAAS,MAAuCC,GAAvC,CAAoD,IAAjDC,SAAiD,MAAjDA,QAAiD,CAApCC,KAAoC,0CACjE,oBAA0BZ,KAAK,CAACa,QAANb,CAAe,KAAfA,CAA1B,oDAAOc,KAAP,qBAAcC,QAAd,qBACA,wBAAyDV,kBAAkB,CACzE,QADyE,CAEzEO,KAFyE,CAA3E,CAAQI,MAAR,qBAAQA,MAAR,CAAgBC,UAAhB,qBAAgBA,UAAhB,CAA4BC,MAA5B,qBAA4BA,MAA5B,CAAuCC,aAAvC,0DAKA,GAAIC,MAAK,CAAGpB,wCAAZ,CACA,GAAMqB,kBAAgC,CAAG,EAAzC,CAEArB,KAAK,CAACsB,QAANtB,CAAeuB,GAAfvB,CAAmBW,QAAnBX,CAA8BwB,cAAD,CAAW,CACtC,GACE,OAAOA,KAAP,OAAOA,OAAP,SAAOA,CAAP,MAAOA,MAAK,CAAEC,IAAd,IAAuB,QAAvB,EACA,MAAK,OAALD,OAAK,SAALA,aAAK,CAAEC,IAAPD,CAAYE,WAAZ,IAA4B,aAF9B,CAGE,gCACAN,KAAK,CAAGpB,KAAK,CAAC2B,YAAN3B,CAAmBwB,KAAnBxB,CAA0B,CAChC4B,IAAI,CAAEJ,KAAK,OAALA,OAAK,SAALA,qBAAK,CAAEZ,KAAP,8CAAcgB,IAAdJ,CACFA,KADE,OACFA,OADE,SACFA,CADE,MACFA,CADE,eACFA,KAAK,CAAEZ,KADL,wCACFiB,cAAcD,IADZJ,CAEFP,UAAU,CACVA,UAAU,CAAC,CAAD,CADA,CAEVa,SAL4B,CAA1B9B,CAARoB,CAJF,KAWO,CACLC,iBAAiB,CAACU,IAAlBV,CAAuBG,KAAvBH,EACD,CAdH,GAkBA,GAAIf,qBAAqB,CAACM,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,GAAMoB,UAAS,CAAG,QAAZA,UAAY,EAAM,CACtB,GAAId,MAAJ,CAAY,CACV,GAAIV,GAAG,CAACU,MAAD,CAAS,KAAT,CAAHV,EAAsB,CAACD,KAAK,CAACW,MAAM,CAACe,GAAR,CAAhC,CAA8C,CAC5C,MAAOf,OAAP,CADF,KAEO,IAAI,CAACV,GAAG,CAACU,MAAD,CAAS,KAAT,CAAR,CAAyB,CAC9B,MAAOA,OAAP,CACD,CACF,CACD,MAAO,KAAP,CARF,EAUA,GAAMgB,YAAW,CAAGF,SAAS,EAA7B,CAEA,MACEhC,qBAACG,GAAD,CAASgB,aAAT,CACGe,WAAW,EAAI,CAACpB,KAAhBoB,CACClC,oBAACI,KAAD,WACEc,MAAM,CAAEA,MADV,CAEEiB,OAAO,CAAE,kBAAM,CACbpB,QAAQ,CAAC,IAAD,CAARA,CACD,CAJH,EAKMC,MALN,EAMEN,GAAG,CAAEA,GANP,GADDwB,CAUCb,iBAAiB,CAACe,MAAlBf,GAA6B,CAA7BA,EAAkCA,iBAXtC,CAaGD,KAbH,CADF,CA5CF,EA+DA,cAAenB,KAAI,CAACC,UAAU,CAACO,MAAD,CAAX,CAAnB","names":["React","memo","forwardRef","Box","Image","usePropsResolution","useHasResponsiveProps","isNil","has","Avatar","ref","children","props","useState","error","setError","_image","_badgeSize","source","resolvedProps","Badge","remainingChildren","Children","map","child","type","displayName","cloneElement","size","_child$props2","undefined","push","getSource","uri","imageSource","onError","length"],"sources":["Avatar.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box, Image } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport isNil from 'lodash.isnil';\nimport has from 'lodash.has';\n\nconst Avatar = ({ children, ...props }: IAvatarProps, ref: any) => {\n  const [error, setError] = React.useState(false);\n  const { _image, _badgeSize, source, ...resolvedProps } = usePropsResolution(\n    'Avatar',\n    props\n  );\n\n  let Badge = <></>;\n  const remainingChildren: JSX.Element[] = [];\n  //  Pop Badge from children\n  React.Children.map(children, (child) => {\n    if (\n      typeof child?.type === 'object' &&\n      child?.type.displayName === 'AvatarBadge'\n    ) {\n      Badge = React.cloneElement(child, {\n        size: child?.props?.size\n          ? child?.props?.size\n          : _badgeSize\n          ? _badgeSize[0]\n          : undefined,\n      });\n    } else {\n      remainingChildren.push(child);\n    }\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const getSource = () => {\n    if (source) {\n      if (has(source, 'uri') && !isNil(source.uri)) {\n        return source;\n      } else if (!has(source, 'uri')) {\n        return source;\n      }\n    }\n    return null;\n  };\n  const imageSource = getSource();\n\n  return (\n    <Box {...resolvedProps}>\n      {imageSource && !error ? (\n        <Image\n          source={source}\n          onError={() => {\n            setError(true);\n          }}\n          {..._image}\n          ref={ref}\n        />\n      ) : (\n        remainingChildren.length !== 0 && remainingChildren\n      )}\n      {Badge}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Avatar));\n"]},"metadata":{},"sourceType":"module"}