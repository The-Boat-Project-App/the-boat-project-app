{"ast":null,"code":"\"use strict\";var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _excluded=[\"source\",\"onHTMLLoaded\",\"onTTreeChange\",\"onDocumentMetadataLoaded\",\"contentWidth\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=RenderHTML;var _react=_interopRequireDefault(require(\"react\"));var _RenderHTMLDebug=_interopRequireDefault(require(\"./RenderHTMLDebug\"));var _TRenderEngineProvider=_interopRequireDefault(require(\"./TRenderEngineProvider\"));var _RenderHTMLConfigProvider=_interopRequireDefault(require(\"./RenderHTMLConfigProvider\"));var _RenderHTMLSource=_interopRequireDefault(require(\"./RenderHTMLSource\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function RenderHTML(props){var source=props.source,onHTMLLoaded=props.onHTMLLoaded,onTTreeChange=props.onTTreeChange,onDocumentMetadataLoaded=props.onDocumentMetadataLoaded,contentWidth=props.contentWidth,otherProps=_objectWithoutProperties(props,_excluded);return _react.default.createElement(_RenderHTMLDebug.default,props,_react.default.createElement(_TRenderEngineProvider.default,otherProps,_react.default.createElement(_RenderHTMLConfigProvider.default,otherProps,_react.default.createElement(_RenderHTMLSource.default,{source:source,onHTMLLoaded:onHTMLLoaded,onTTreeChange:onTTreeChange,onDocumentMetadataLoaded:onDocumentMetadataLoaded,contentWidth:contentWidth}))));}","map":{"version":3,"mappings":"0RAAA,oDAEA,0EACA,sFACA,4FACA,+JAgBe,QAASA,WAAT,CAAoBC,KAApB,CAA0D,CACvE,GACEC,OADF,CAOID,KAPJ,CACEC,MADF,CAEEC,YAFF,CAOIF,KAPJ,CAEEE,YAFF,CAGEC,aAHF,CAOIH,KAPJ,CAGEG,aAHF,CAIEC,wBAJF,CAOIJ,KAPJ,CAIEI,wBAJF,CAKEC,YALF,CAOIL,KAPJ,CAKEK,YALF,CAMKC,UANL,0BAOIN,KAPJ,YAQA,MACEO,8BAACC,wBAAD,CAAqBR,KAArB,CACEO,6BAACE,8BAAD,CAA2BH,UAA3B,CACEC,6BAACG,iCAAD,CAA8BJ,UAA9B,CACGK,eAAMC,aAAND,CAAoBE,yBAApBF,CAAsC,CACrCV,MADqC,CACrCA,MADqC,CAErCC,YAFqC,CAErCA,YAFqC,CAGrCC,aAHqC,CAGrCA,aAHqC,CAIrCC,wBAJqC,CAIrCA,wBAJqC,CAKrCC,yBALqC,CAAtCM,CADH,CADF,CADF,CADF,CAeD","names":["RenderHTML","props","source","onHTMLLoaded","onTTreeChange","onDocumentMetadataLoaded","contentWidth","otherProps","_react","_RenderHTMLDebug","_TRenderEngineProvider","_RenderHTMLConfigProvider","React","createElement","RenderHTMLSource"],"sources":["RenderHTML.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\nimport { RenderHTMLProps } from './shared-types';\nimport RenderHTMLDebug from './RenderHTMLDebug';\nimport TRenderEngineProvider from './TRenderEngineProvider';\nimport RenderHTMLConfigProvider from './RenderHTMLConfigProvider';\nimport RenderHTMLSource from './RenderHTMLSource';\n\n/**\n * Render HTML text in native views!\n *\n * @remarks If your application uses many instances of this component, you\n * should share the render engine across those instances via the\n * {@link TRenderEngineProvider} and {@link RenderHTMLConfigProvider}\n * components, and render the HTML with {@link RenderHTMLSource} instead. That\n * should significantly increase performance.\n *\n * @warning It should never be a child of a React Native `Text` element, as the\n * layout will break.\n *\n * @public\n */\nexport default function RenderHTML(props: RenderHTMLProps): ReactElement {\n  const {\n    source,\n    onHTMLLoaded,\n    onTTreeChange,\n    onDocumentMetadataLoaded,\n    contentWidth,\n    ...otherProps\n  } = props;\n  return (\n    <RenderHTMLDebug {...props}>\n      <TRenderEngineProvider {...otherProps}>\n        <RenderHTMLConfigProvider {...otherProps}>\n          {React.createElement(RenderHTMLSource, {\n            source,\n            onHTMLLoaded,\n            onTTreeChange,\n            onDocumentMetadataLoaded,\n            contentWidth\n          })}\n        </RenderHTMLConfigProvider>\n      </TRenderEngineProvider>\n    </RenderHTMLDebug>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}