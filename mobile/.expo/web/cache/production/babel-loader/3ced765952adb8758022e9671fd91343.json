{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useImageSpecifiedDimensions;var _react=require(\"react\");var _getDimensionsWithAspectRatio=_interopRequireDefault(require(\"./getDimensionsWithAspectRatio\"));var _reactNative=require(\"react-native-web/dist/index\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function normalizeSize(dimension,options){var containerDimension=options.containerDimension||null;var enablePercentWidth=options.enablePercentWidth||false;if(dimension===null||dimension===undefined||Number.isNaN(dimension)){return null;}if(typeof dimension==='number'){return dimension;}if(dimension.search('%')!==-1&&enablePercentWidth&&typeof containerDimension==='number'){return parseFloat(dimension)*containerDimension/100;}else if(dimension.trim().match(/^[\\d.]+$/)){return parseFloat(dimension);}return null;}function deriveSpecifiedDimensionsFromProps(_ref){var width=_ref.width,height=_ref.height,contentWidth=_ref.contentWidth,flatStyle=_ref.flatStyle,enablePercentWidth=_ref.enableExperimentalPercentWidth;var normalizeOptionsWidth={enablePercentWidth:enablePercentWidth,containerDimension:contentWidth};var normalizeOptionsHeight={enablePercentWidth:false};var widthProp=normalizeSize(width,normalizeOptionsWidth);var heightProp=normalizeSize(height,normalizeOptionsHeight);var styleWidth=normalizeSize(flatStyle.width,normalizeOptionsWidth);var styleHeight=normalizeSize(flatStyle.height,normalizeOptionsHeight);return(0,_getDimensionsWithAspectRatio.default)(styleWidth!==null&&styleWidth!==void 0?styleWidth:widthProp,styleHeight!==null&&styleHeight!==void 0?styleHeight:heightProp,flatStyle.aspectRatio);}function useImageSpecifiedDimensions(props){var contentWidth=props.contentWidth,enableExperimentalPercentWidth=props.enableExperimentalPercentWidth,style=props.style,width=props.width,height=props.height;var flatStyle=(0,_react.useMemo)(function(){return _reactNative.StyleSheet.flatten(style)||{};},[style]);var specifiedDimensions=(0,_react.useMemo)(function(){return deriveSpecifiedDimensionsFromProps({contentWidth:contentWidth,enableExperimentalPercentWidth:enableExperimentalPercentWidth,width:width,height:height,flatStyle:flatStyle});},[contentWidth,enableExperimentalPercentWidth,flatStyle,height,width]);return{flatStyle:flatStyle,specifiedDimensions:specifiedDimensions};}","map":{"version":3,"mappings":"kHAAA,4BAKA,oG,2IAGA,QAASA,cAAT,CACEC,SADF,CAEEC,OAFF,CAME,CACA,GAAMC,mBAAkB,CAAGD,OAAO,CAACC,kBAARD,EAA8B,IAAzD,CACA,GAAME,mBAAkB,CAAGF,OAAO,CAACE,kBAARF,EAA8B,KAAzD,CACA,GACED,SAAS,GAAK,IAAdA,EACAA,SAAS,GAAKI,SADdJ,EAEAK,MAAM,CAACC,KAAPD,CAAaL,SAAbK,CAHF,CAIE,CACA,MAAO,KAAP,CACD,CACD,GAAI,MAAOL,UAAP,GAAqB,QAAzB,CAAmC,CACjC,MAAOA,UAAP,CACD,CACD,GACEA,SAAS,CAACO,MAAVP,CAAiB,GAAjBA,IAA0B,CAAC,CAA3BA,EACAG,kBADAH,EAEA,MAAOE,mBAAP,GAA8B,QAHhC,CAIE,CACA,MAAQM,WAAU,CAACR,SAAD,CAAVQ,CAAwBN,kBAAxBM,CAA8C,GAAtD,CALF,KAMO,IAAIR,SAAS,CAACS,IAAVT,GAAiBU,KAAjBV,CAAuB,UAAvBA,CAAJ,CAAwC,CAC7C,MAAOQ,WAAU,CAACR,SAAD,CAAjB,CACD,CACD,MAAO,KAAP,CACD,CAKD,QAASW,mCAAT,MASmE,IARjEC,MAQiE,MARjEA,KAQiE,CAPjEC,MAOiE,MAPjEA,MAOiE,CANjEC,YAMiE,MANjEA,YAMiE,CALjEC,SAKiE,MALjEA,SAKiE,CAJjCZ,kBAIiC,MAJjEa,8BAIiE,CACjE,GAAMC,sBAAqB,CAAG,CAC5Bd,kBAD4B,CAC5BA,kBAD4B,CAE5BD,kBAAkB,CAAEY,YAFQ,CAA9B,CAIA,GAAMI,uBAAsB,CAAG,CAC7Bf,kBAAkB,CAAE,KADS,CAA/B,CAGA,GAAMgB,UAAS,CAAGpB,aAAa,CAACa,KAAD,CAAQK,qBAAR,CAA/B,CACA,GAAMG,WAAU,CAAGrB,aAAa,CAACc,MAAD,CAASK,sBAAT,CAAhC,CACA,GAAMG,WAAU,CAAGtB,aAAa,CAACgB,SAAS,CAACH,KAAX,CAAkBK,qBAAlB,CAAhC,CACA,GAAMK,YAAW,CAAGvB,aAAa,CAACgB,SAAS,CAACF,MAAX,CAAmBK,sBAAnB,CAAjC,CACA,MAAO,0CACLG,UADK,OACLA,YADK,SACLA,YAAcF,SADT,CAELG,WAFK,OAELA,aAFK,SAELA,aAAeF,UAFV,CAGLL,SAAS,CAACQ,WAHL,CAAP,CAKD,CAEc,QAASC,4BAAT,CACbC,KADa,CAEb,CACA,GAAQX,aAAR,CACEW,KADF,CAAQX,YAAR,CAAsBE,8BAAtB,CACES,KADF,CAAsBT,8BAAtB,CAAsDU,KAAtD,CACED,KADF,CAAsDC,KAAtD,CAA6Dd,KAA7D,CACEa,KADF,CAA6Db,KAA7D,CAAoEC,MAApE,CACEY,KADF,CAAoEZ,MAApE,CAEA,GAAME,UAAS,CAAG,mBAAQ,iBAAMY,yBAAWC,OAAXD,CAAmBD,KAAnBC,GAA6B,EAAnC,EAAR,CAA+C,CAACD,KAAD,CAA/C,CAAlB,CACA,GAAMG,oBAAmB,CAAG,mBAC1B,iBACElB,mCAAkC,CAAC,CACjCG,YADiC,CACjCA,YADiC,CAEjCE,8BAFiC,CAEjCA,8BAFiC,CAGjCJ,KAHiC,CAGjCA,KAHiC,CAIjCC,MAJiC,CAIjCA,MAJiC,CAKjCE,mBALiC,CAAD,CADpC,EAD0B,CAS1B,CAACD,YAAD,CAAeE,8BAAf,CAA+CD,SAA/C,CAA0DF,MAA1D,CAAkED,KAAlE,CAT0B,CAA5B,CAWA,MAAO,CAAEG,SAAF,CAAEA,SAAF,CAAac,uCAAb,CAAP,CACD","names":["normalizeSize","dimension","options","containerDimension","enablePercentWidth","undefined","Number","isNaN","search","parseFloat","trim","match","deriveSpecifiedDimensionsFromProps","width","height","contentWidth","flatStyle","enableExperimentalPercentWidth","normalizeOptionsWidth","normalizeOptionsHeight","widthProp","heightProp","styleWidth","styleHeight","aspectRatio","useImageSpecifiedDimensions","props","style","StyleSheet","flatten","specifiedDimensions"],"sources":["useImageSpecifiedDimensions.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport {\n  UseIMGElementStateProps,\n  IncompleteImageDimensions\n} from './img-types';\nimport getDimensionsWithAspectRatio from './getDimensionsWithAspectRatio';\nimport { StyleSheet } from 'react-native';\n\nfunction normalizeSize(\n  dimension: string | number | null | undefined,\n  options: Partial<{\n    containerDimension: number | null;\n    enablePercentWidth: boolean;\n  }>\n) {\n  const containerDimension = options.containerDimension || null;\n  const enablePercentWidth = options.enablePercentWidth || false;\n  if (\n    dimension === null ||\n    dimension === undefined ||\n    Number.isNaN(dimension)\n  ) {\n    return null;\n  }\n  if (typeof dimension === 'number') {\n    return dimension;\n  }\n  if (\n    dimension.search('%') !== -1 &&\n    enablePercentWidth &&\n    typeof containerDimension === 'number'\n  ) {\n    return (parseFloat(dimension) * containerDimension) / 100;\n  } else if (dimension.trim().match(/^[\\d.]+$/)) {\n    return parseFloat(dimension);\n  }\n  return null;\n}\n\n/**\n * Extract specified dimensions from props.\n */\nfunction deriveSpecifiedDimensionsFromProps({\n  width,\n  height,\n  contentWidth,\n  flatStyle,\n  enableExperimentalPercentWidth: enablePercentWidth\n}: Pick<\n  UseIMGElementStateProps,\n  'width' | 'height' | 'contentWidth' | 'enableExperimentalPercentWidth'\n> & { flatStyle: Record<string, any> }): IncompleteImageDimensions {\n  const normalizeOptionsWidth = {\n    enablePercentWidth,\n    containerDimension: contentWidth\n  };\n  const normalizeOptionsHeight = {\n    enablePercentWidth: false\n  };\n  const widthProp = normalizeSize(width, normalizeOptionsWidth);\n  const heightProp = normalizeSize(height, normalizeOptionsHeight);\n  const styleWidth = normalizeSize(flatStyle.width, normalizeOptionsWidth);\n  const styleHeight = normalizeSize(flatStyle.height, normalizeOptionsHeight);\n  return getDimensionsWithAspectRatio(\n    styleWidth ?? widthProp,\n    styleHeight ?? heightProp,\n    flatStyle.aspectRatio\n  );\n}\n\nexport default function useImageSpecifiedDimensions(\n  props: UseIMGElementStateProps\n) {\n  const { contentWidth, enableExperimentalPercentWidth, style, width, height } =\n    props;\n  const flatStyle = useMemo(() => StyleSheet.flatten(style) || {}, [style]);\n  const specifiedDimensions = useMemo(\n    () =>\n      deriveSpecifiedDimensionsFromProps({\n        contentWidth,\n        enableExperimentalPercentWidth,\n        width,\n        height,\n        flatStyle\n      }),\n    [contentWidth, enableExperimentalPercentWidth, flatStyle, height, width]\n  );\n  return { flatStyle, specifiedDimensions };\n}\n"]},"metadata":{},"sourceType":"script"}